Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> empty
Rule 3     linea -> lAbierta
Rule 4     linea -> lCerrada
Rule 5     lAbierta -> IF ( cosaBooleana ) linea
Rule 6     lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta
Rule 7     lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta
Rule 8     lAbierta -> IF ( cosaBooleana ) { g }
Rule 9     lAbierta -> loop lAbierta
Rule 10    lCerrada -> sentencia
Rule 11    lCerrada -> COMMENT lCerrada
Rule 12    lCerrada -> IF ( cosaBooleana ) { g } ELSE { g }
Rule 13    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g }
Rule 14    lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada
Rule 15    lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada
Rule 16    lCerrada -> loop { g }
Rule 17    lCerrada -> loop lCerrada
Rule 18    lCerrada -> DO { g } WHILE ( valores ) ;
Rule 19    lCerrada -> DO lCerrada WHILE ( valores ) ;
Rule 20    sentencia -> varsOps ;
Rule 21    sentencia -> func ;
Rule 22    sentencia -> varAsig ;
Rule 23    sentencia -> RETURN ;
Rule 24    sentencia -> ;
Rule 25    loop -> WHILE ( valores )
Rule 26    loop -> FOR ( primParam ; valores ; tercerParam )
Rule 27    cosaBooleana -> expBool
Rule 28    cosaBooleana -> valoresBool
Rule 29    primParam -> varAsig
Rule 30    primParam -> empty
Rule 31    tercerParam -> varsOps
Rule 32    tercerParam -> varAsig
Rule 33    tercerParam -> func
Rule 34    tercerParam -> empty
Rule 35    func -> funcReturn
Rule 36    func -> funcVoid
Rule 37    funcReturn -> funcInt
Rule 38    funcReturn -> funcString
Rule 39    funcReturn -> funcBool
Rule 40    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 41    funcInt -> LENGTH ( valores )
Rule 42    funcString -> CAPITALIZAR ( valores )
Rule 43    funcBool -> COLINEALES ( valores , valores )
Rule 44    funcVoid -> PRINT ( valores )
Rule 45    param -> , valores
Rule 46    param -> empty
Rule 47    empty -> <empty>
Rule 48    vec -> [ elem ]
Rule 49    elem -> valores , elem
Rule 50    elem -> valores
Rule 51    valores -> eMat
Rule 52    valores -> expBool
Rule 53    valores -> funcReturn
Rule 54    valores -> reg
Rule 55    valores -> INT
Rule 56    valores -> FLOAT
Rule 57    valores -> STRING
Rule 58    valores -> BOOL
Rule 59    valores -> varYVals
Rule 60    valores -> varsOps
Rule 61    valores -> vec
Rule 62    valores -> ternario
Rule 63    valores -> atributos
Rule 64    valores -> RES
Rule 65    atributos -> ID . valoresCampos
Rule 66    valoresCampos -> varYVals
Rule 67    valoresCampos -> END
Rule 68    valoresCampos -> BEGIN
Rule 69    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 70    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat
Rule 71    ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars
Rule 72    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool
Rule 73    ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars
Rule 74    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 75    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat
Rule 76    ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars
Rule 77    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool
Rule 78    ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars
Rule 79    valoresTernarioVars -> varsOps
Rule 80    valoresTernarioVars -> varYVals
Rule 81    valoresTernarioVars -> reg
Rule 82    valoresTernarioVars -> vec
Rule 83    valoresTernarioVars -> ternarioVars
Rule 84    valoresTernarioVars -> ( ternarioVars )
Rule 85    valoresTernarioVars -> atributos
Rule 86    valoresTernarioVars -> RES
Rule 87    varYVals -> ID
Rule 88    varYVals -> vecVal
Rule 89    varYVals -> vecVal . varYVals
Rule 90    vecVal -> ID m
Rule 91    m -> [ INT ]
Rule 92    m -> [ INT ] m
Rule 93    m -> [ varYVals ] m
Rule 94    m -> [ varYVals ]
Rule 95    m -> [ eMat ] m
Rule 96    m -> [ eMat ]
Rule 97    reg -> { campos }
Rule 98    campos -> ID : valores , campos
Rule 99    campos -> ID : valores
Rule 100   varsOps -> MENOSMENOS varYVals
Rule 101   varsOps -> MASMAS varYVals
Rule 102   varsOps -> varYVals MASMAS
Rule 103   varsOps -> varYVals MENOSMENOS
Rule 104   valoresAsig -> valores
Rule 105   varAsig -> varYVals MULEQ valoresAsig
Rule 106   varAsig -> varYVals DIVEQ valoresAsig
Rule 107   varAsig -> varYVals MASEQ valoresAsig
Rule 108   varAsig -> varYVals MENOSEQ valoresAsig
Rule 109   varAsig -> varYVals = valoresAsig
Rule 110   varAsig -> ID . ID = valoresAsig
Rule 111   valoresMat -> INT
Rule 112   valoresMat -> FLOAT
Rule 113   valoresMat -> funcInt
Rule 114   valoresMat -> varYVals
Rule 115   valoresMat -> varsOps
Rule 116   valoresMat -> STRING
Rule 117   valoresMat -> ( ternarioMat )
Rule 118   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 119   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 120   valoresTernarioMat -> INT
Rule 121   valoresTernarioMat -> FLOAT
Rule 122   valoresTernarioMat -> funcInt
Rule 123   valoresTernarioMat -> STRING
Rule 124   valoresTernarioMat -> eMat
Rule 125   valoresTernarioMat -> ternarioMat
Rule 126   valoresTernarioMat -> ( ternarioMat )
Rule 127   eMat -> eMat + p
Rule 128   eMat -> eMat - p
Rule 129   eMat -> valoresMat + p
Rule 130   eMat -> valoresMat - p
Rule 131   eMat -> eMat + valoresMat
Rule 132   eMat -> eMat - valoresMat
Rule 133   eMat -> valoresMat + valoresMat
Rule 134   eMat -> valoresMat - valoresMat
Rule 135   eMat -> p
Rule 136   p -> p * exp
Rule 137   p -> p / exp
Rule 138   p -> p % exp
Rule 139   p -> valoresMat * exp
Rule 140   p -> valoresMat / exp
Rule 141   p -> valoresMat % exp
Rule 142   p -> p * valoresMat
Rule 143   p -> p / valoresMat
Rule 144   p -> p % valoresMat
Rule 145   p -> valoresMat * valoresMat
Rule 146   p -> valoresMat / valoresMat
Rule 147   p -> valoresMat % valoresMat
Rule 148   p -> exp
Rule 149   exp -> exp ^ iSing
Rule 150   exp -> valoresMat ^ iSing
Rule 151   exp -> exp ^ valoresMat
Rule 152   exp -> valoresMat ^ valoresMat
Rule 153   exp -> iSing
Rule 154   iSing -> - paren
Rule 155   iSing -> + paren
Rule 156   iSing -> - valoresMat
Rule 157   iSing -> + valoresMat
Rule 158   iSing -> paren
Rule 159   paren -> ( eMat )
Rule 160   paren -> ( valoresMat )
Rule 161   valoresBool -> BOOL
Rule 162   valoresBool -> funcBool
Rule 163   valoresBool -> varYVals
Rule 164   valoresBool -> varsOps
Rule 165   valoresBool -> ( ternarioBool )
Rule 166   valoresBool -> <empty>
Rule 167   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 168   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 169   valoresTernarioBool -> BOOL
Rule 170   valoresTernarioBool -> funcBool
Rule 171   valoresTernarioBool -> ternarioBool
Rule 172   valoresTernarioBool -> ( ternarioBool )
Rule 173   valoresTernarioBool -> expBool
Rule 174   ternario -> ternarioMat
Rule 175   ternario -> ternarioBool
Rule 176   ternario -> ( ternarioMat )
Rule 177   ternario -> ( ternarioBool )
Rule 178   ternario -> ternarioVars
Rule 179   ternario -> ( ternarioVars )
Rule 180   expBool -> expBool OR and
Rule 181   expBool -> valoresBool OR and
Rule 182   expBool -> expBool OR valoresBool
Rule 183   expBool -> valoresBool OR valoresBool
Rule 184   expBool -> and
Rule 185   and -> and AND eq
Rule 186   and -> valoresBool AND eq
Rule 187   and -> and AND valoresBool
Rule 188   and -> valoresBool AND valoresBool
Rule 189   and -> eq
Rule 190   eq -> eq EQEQ mayor
Rule 191   eq -> eq DISTINTO mayor
Rule 192   eq -> tCompare EQEQ mayor
Rule 193   eq -> tCompare DISTINTO mayor
Rule 194   eq -> eq EQEQ tCompare
Rule 195   eq -> eq DISTINTO tCompare
Rule 196   eq -> tCompare EQEQ tCompare
Rule 197   eq -> tCompare DISTINTO tCompare
Rule 198   eq -> mayor
Rule 199   tCompare -> eMat
Rule 200   tCompare -> varsOps
Rule 201   tCompare -> varYVals
Rule 202   tCompare -> INT
Rule 203   tCompare -> funcInt
Rule 204   tCompare -> FLOAT
Rule 205   tCompare -> ( ternarioBool )
Rule 206   tCompare -> ( ternarioMat )
Rule 207   mayor -> tCompare > tCompare
Rule 208   mayor -> menor
Rule 209   menor -> tCompare < tCompare
Rule 210   menor -> not
Rule 211   not -> NOT not
Rule 212   not -> NOT valoresBool
Rule 213   not -> parenBool
Rule 214   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 138 141 144 147
(                    : 5 6 7 8 12 13 14 15 18 19 25 26 40 41 42 43 44 84 117 126 159 160 165 172 176 177 179 205 206 214
)                    : 5 6 7 8 12 13 14 15 18 19 25 26 40 41 42 43 44 84 117 126 159 160 165 172 176 177 179 205 206 214
*                    : 136 139 142 145
+                    : 127 129 131 133 155 157
,                    : 40 43 45 49 98
-                    : 128 130 132 134 154 156
.                    : 65 89 110
/                    : 137 140 143 146
:                    : 69 70 71 72 73 74 75 76 77 78 98 99 118 119 167 168
;                    : 18 19 20 21 22 23 24 26 26
<                    : 209
=                    : 109 110
>                    : 207
?                    : 69 70 71 72 73 74 75 76 77 78 118 119 167 168
AND                  : 185 186 187 188
BEGIN                : 68
BOOL                 : 58 161 169
CAPITALIZAR          : 42
COLINEALES           : 43
COMMENT              : 11
DISTINTO             : 191 193 195 197
DIVEQ                : 106
DO                   : 18 19
ELSE                 : 6 7 12 13 14 15
END                  : 67
EQEQ                 : 190 192 194 196
FLOAT                : 56 112 121 204
FOR                  : 26
ID                   : 65 87 90 98 99 110 110
IF                   : 5 6 7 8 12 13 14 15
INT                  : 55 91 92 111 120 202
LENGTH               : 41
MASEQ                : 107
MASMAS               : 101 102
MENOSEQ              : 108
MENOSMENOS           : 100 103
MULEQ                : 105
MULTIESCALAR         : 40
NOT                  : 211 212
OR                   : 180 181 182 183
PRINT                : 44
RES                  : 64 86
RETURN               : 23
STRING               : 57 116 123
WHILE                : 18 19 25
[                    : 48 91 92 93 94 95 96
]                    : 48 91 92 93 94 95 96
^                    : 149 150 151 152
error                : 
{                    : 6 8 12 12 13 14 16 18 97
}                    : 6 8 12 12 13 14 16 18 97

Nonterminals, with rules where they appear

and                  : 180 181 184 185 187
atributos            : 63 85
campos               : 97 98
cosaBooleana         : 5 6 7 8 12 13 14 15
eMat                 : 51 95 96 124 127 128 131 132 159 199
elem                 : 48 49
empty                : 2 30 34 46
eq                   : 185 186 189 190 191 194 195
exp                  : 136 137 138 139 140 141 148 149 151
expBool              : 27 52 74 75 76 77 78 119 168 173 180 182 214
func                 : 21 33
funcBool             : 39 162 170
funcInt              : 37 113 122 203
funcReturn           : 35 53
funcString           : 38
funcVoid             : 36
g                    : 1 6 8 12 12 13 14 16 18 0
iSing                : 149 150 153
lAbierta             : 3 6 7 9
lCerrada             : 4 7 11 13 14 15 15 17 19
linea                : 1 5
loop                 : 9 16 17
m                    : 90 92 93 95
mayor                : 190 191 192 193 198
menor                : 208
not                  : 210 211
p                    : 127 128 129 130 135 136 137 138 142 143 144
param                : 40
paren                : 154 155 158
parenBool            : 213
primParam            : 26
reg                  : 54 81
sentencia            : 10
tCompare             : 192 193 194 195 196 196 197 197 207 207 209 209
tercerParam          : 26
ternario             : 62
ternarioBool         : 165 171 172 175 177 205
ternarioMat          : 117 125 126 174 176 206
ternarioVars         : 83 84 178 179
valores              : 18 19 25 26 40 40 41 42 43 43 44 45 49 50 98 99 104
valoresAsig          : 105 106 107 108 109 110
valoresBool          : 28 69 70 71 72 73 118 167 181 182 183 183 186 187 188 188 212
valoresCampos        : 65
valoresMat           : 129 130 131 132 133 133 134 134 139 140 141 142 143 144 145 145 146 146 147 147 150 151 152 152 156 157 160
valoresTernarioBool  : 72 73 77 78 167 167 168 168
valoresTernarioMat   : 70 71 75 76 118 118 119 119
valoresTernarioVars  : 69 69 70 71 72 73 74 74 75 76 77 78
varAsig              : 22 29 32
varYVals             : 59 66 80 89 93 94 100 101 102 103 105 106 107 108 109 114 163 201
varsOps              : 20 31 60 79 115 164 200
vec                  : 61 82
vecVal               : 88 89

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    $end            reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 22
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 25
    linea                          shift and go to state 32

state 1

    (18) lCerrada -> DO . { g } WHILE ( valores ) ;
    (19) lCerrada -> DO . lCerrada WHILE ( valores ) ;
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 35
    COMMENT         shift and go to state 9
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 21
    sentencia                      shift and go to state 10
    funcString                     shift and go to state 23
    funcVoid                       shift and go to state 15
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 34
    funcInt                        shift and go to state 5
    varsOps                        shift and go to state 14
    func                           shift and go to state 19
    funcBool                       shift and go to state 3
    varYVals                       shift and go to state 25
    vecVal                         shift and go to state 8
    loop                           shift and go to state 36

state 2

    (23) sentencia -> RETURN . ;

    ;               shift and go to state 37


state 3

    (39) funcReturn -> funcBool .

    ;               reduce using rule 39 (funcReturn -> funcBool .)
    )               reduce using rule 39 (funcReturn -> funcBool .)


state 4

    (43) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 38


state 5

    (37) funcReturn -> funcInt .

    ;               reduce using rule 37 (funcReturn -> funcInt .)
    )               reduce using rule 37 (funcReturn -> funcInt .)


state 6

    (25) loop -> WHILE . ( valores )

    (               shift and go to state 39


state 7

    (44) funcVoid -> PRINT . ( valores )

    (               shift and go to state 40


state 8

    (88) varYVals -> vecVal .
    (89) varYVals -> vecVal . . varYVals

    MASMAS          reduce using rule 88 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 88 (varYVals -> vecVal .)
    ;               reduce using rule 88 (varYVals -> vecVal .)
    )               reduce using rule 88 (varYVals -> vecVal .)
    +               reduce using rule 88 (varYVals -> vecVal .)
    -               reduce using rule 88 (varYVals -> vecVal .)
    *               reduce using rule 88 (varYVals -> vecVal .)
    /               reduce using rule 88 (varYVals -> vecVal .)
    %               reduce using rule 88 (varYVals -> vecVal .)
    ^               reduce using rule 88 (varYVals -> vecVal .)
    OR              reduce using rule 88 (varYVals -> vecVal .)
    AND             reduce using rule 88 (varYVals -> vecVal .)
    ?               reduce using rule 88 (varYVals -> vecVal .)
    EQEQ            reduce using rule 88 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 88 (varYVals -> vecVal .)
    >               reduce using rule 88 (varYVals -> vecVal .)
    <               reduce using rule 88 (varYVals -> vecVal .)
    ,               reduce using rule 88 (varYVals -> vecVal .)
    ]               reduce using rule 88 (varYVals -> vecVal .)
    :               reduce using rule 88 (varYVals -> vecVal .)
    }               reduce using rule 88 (varYVals -> vecVal .)
    MULEQ           reduce using rule 88 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 88 (varYVals -> vecVal .)
    MASEQ           reduce using rule 88 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 88 (varYVals -> vecVal .)
    =               reduce using rule 88 (varYVals -> vecVal .)
    .               shift and go to state 41


state 9

    (11) lCerrada -> COMMENT . lCerrada
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    COMMENT         shift and go to state 9
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 21
    sentencia                      shift and go to state 10
    funcString                     shift and go to state 23
    funcVoid                       shift and go to state 15
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 42
    funcInt                        shift and go to state 5
    varsOps                        shift and go to state 14
    func                           shift and go to state 19
    funcBool                       shift and go to state 3
    varYVals                       shift and go to state 25
    vecVal                         shift and go to state 8
    loop                           shift and go to state 36

state 10

    (10) lCerrada -> sentencia .

    IF              reduce using rule 10 (lCerrada -> sentencia .)
    COMMENT         reduce using rule 10 (lCerrada -> sentencia .)
    DO              reduce using rule 10 (lCerrada -> sentencia .)
    WHILE           reduce using rule 10 (lCerrada -> sentencia .)
    FOR             reduce using rule 10 (lCerrada -> sentencia .)
    RETURN          reduce using rule 10 (lCerrada -> sentencia .)
    ;               reduce using rule 10 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 10 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 10 (lCerrada -> sentencia .)
    ID              reduce using rule 10 (lCerrada -> sentencia .)
    PRINT           reduce using rule 10 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 10 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 10 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 10 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 10 (lCerrada -> sentencia .)
    }               reduce using rule 10 (lCerrada -> sentencia .)
    $end            reduce using rule 10 (lCerrada -> sentencia .)
    ELSE            reduce using rule 10 (lCerrada -> sentencia .)


state 11

    (24) sentencia -> ; .

    ELSE            reduce using rule 24 (sentencia -> ; .)
    IF              reduce using rule 24 (sentencia -> ; .)
    COMMENT         reduce using rule 24 (sentencia -> ; .)
    DO              reduce using rule 24 (sentencia -> ; .)
    WHILE           reduce using rule 24 (sentencia -> ; .)
    FOR             reduce using rule 24 (sentencia -> ; .)
    RETURN          reduce using rule 24 (sentencia -> ; .)
    ;               reduce using rule 24 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 24 (sentencia -> ; .)
    MASMAS          reduce using rule 24 (sentencia -> ; .)
    ID              reduce using rule 24 (sentencia -> ; .)
    PRINT           reduce using rule 24 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 24 (sentencia -> ; .)
    LENGTH          reduce using rule 24 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 24 (sentencia -> ; .)
    COLINEALES      reduce using rule 24 (sentencia -> ; .)
    $end            reduce using rule 24 (sentencia -> ; .)
    }               reduce using rule 24 (sentencia -> ; .)


state 12

    (5) lAbierta -> IF . ( cosaBooleana ) linea
    (6) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) { g }
    (12) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada

    (               shift and go to state 43


state 13

    (2) g -> empty .

    }               reduce using rule 2 (g -> empty .)
    $end            reduce using rule 2 (g -> empty .)


state 14

    (20) sentencia -> varsOps . ;

    ;               shift and go to state 44


state 15

    (36) func -> funcVoid .

    ;               reduce using rule 36 (func -> funcVoid .)
    )               reduce using rule 36 (func -> funcVoid .)


state 16

    (100) varsOps -> MENOSMENOS . varYVals
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (90) vecVal -> . ID m

    ID              shift and go to state 46

    varYVals                       shift and go to state 45
    vecVal                         shift and go to state 8

state 17

    (26) loop -> FOR . ( primParam ; valores ; tercerParam )

    (               shift and go to state 47


state 18

    (41) funcInt -> LENGTH . ( valores )

    (               shift and go to state 48


state 19

    (21) sentencia -> func . ;

    ;               shift and go to state 49


state 20

    (110) varAsig -> ID . . ID = valoresAsig
    (87) varYVals -> ID .
    (90) vecVal -> ID . m
    (91) m -> . [ INT ]
    (92) m -> . [ INT ] m
    (93) m -> . [ varYVals ] m
    (94) m -> . [ varYVals ]
    (95) m -> . [ eMat ] m
    (96) m -> . [ eMat ]

    .               shift and go to state 51
    MASMAS          reduce using rule 87 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 87 (varYVals -> ID .)
    MULEQ           reduce using rule 87 (varYVals -> ID .)
    DIVEQ           reduce using rule 87 (varYVals -> ID .)
    MASEQ           reduce using rule 87 (varYVals -> ID .)
    MENOSEQ         reduce using rule 87 (varYVals -> ID .)
    =               reduce using rule 87 (varYVals -> ID .)
    [               shift and go to state 52

    m                              shift and go to state 50

state 21

    (22) sentencia -> varAsig . ;

    ;               shift and go to state 53


state 22

    (0) S' -> g .



state 23

    (38) funcReturn -> funcString .

    ,               reduce using rule 38 (funcReturn -> funcString .)
    ;               reduce using rule 38 (funcReturn -> funcString .)
    )               reduce using rule 38 (funcReturn -> funcString .)
    ]               reduce using rule 38 (funcReturn -> funcString .)
    }               reduce using rule 38 (funcReturn -> funcString .)


state 24

    (40) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 54


state 25

    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (105) varAsig -> varYVals . MULEQ valoresAsig
    (106) varAsig -> varYVals . DIVEQ valoresAsig
    (107) varAsig -> varYVals . MASEQ valoresAsig
    (108) varAsig -> varYVals . MENOSEQ valoresAsig
    (109) varAsig -> varYVals . = valoresAsig

    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    MULEQ           shift and go to state 60
    DIVEQ           shift and go to state 61
    MASEQ           shift and go to state 57
    MENOSEQ         shift and go to state 55
    =               shift and go to state 58


state 26

    (35) func -> funcReturn .

    ;               reduce using rule 35 (func -> funcReturn .)
    )               reduce using rule 35 (func -> funcReturn .)


state 27

    (42) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 62


state 28

    (4) linea -> lCerrada .

    IF              reduce using rule 4 (linea -> lCerrada .)
    COMMENT         reduce using rule 4 (linea -> lCerrada .)
    DO              reduce using rule 4 (linea -> lCerrada .)
    WHILE           reduce using rule 4 (linea -> lCerrada .)
    FOR             reduce using rule 4 (linea -> lCerrada .)
    RETURN          reduce using rule 4 (linea -> lCerrada .)
    ;               reduce using rule 4 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 4 (linea -> lCerrada .)
    MASMAS          reduce using rule 4 (linea -> lCerrada .)
    ID              reduce using rule 4 (linea -> lCerrada .)
    PRINT           reduce using rule 4 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 4 (linea -> lCerrada .)
    LENGTH          reduce using rule 4 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 4 (linea -> lCerrada .)
    COLINEALES      reduce using rule 4 (linea -> lCerrada .)
    }               reduce using rule 4 (linea -> lCerrada .)
    $end            reduce using rule 4 (linea -> lCerrada .)


state 29

    (3) linea -> lAbierta .

    IF              reduce using rule 3 (linea -> lAbierta .)
    COMMENT         reduce using rule 3 (linea -> lAbierta .)
    DO              reduce using rule 3 (linea -> lAbierta .)
    WHILE           reduce using rule 3 (linea -> lAbierta .)
    FOR             reduce using rule 3 (linea -> lAbierta .)
    RETURN          reduce using rule 3 (linea -> lAbierta .)
    ;               reduce using rule 3 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 3 (linea -> lAbierta .)
    MASMAS          reduce using rule 3 (linea -> lAbierta .)
    ID              reduce using rule 3 (linea -> lAbierta .)
    PRINT           reduce using rule 3 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 3 (linea -> lAbierta .)
    LENGTH          reduce using rule 3 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 3 (linea -> lAbierta .)
    COLINEALES      reduce using rule 3 (linea -> lAbierta .)
    $end            reduce using rule 3 (linea -> lAbierta .)
    }               reduce using rule 3 (linea -> lAbierta .)


state 30

    (101) varsOps -> MASMAS . varYVals
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (90) vecVal -> . ID m

    ID              shift and go to state 46

    varYVals                       shift and go to state 63
    vecVal                         shift and go to state 8

state 31

    (9) lAbierta -> loop . lAbierta
    (16) lCerrada -> loop . { g }
    (17) lCerrada -> loop . lCerrada
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 66
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 64
    lAbierta                       shift and go to state 65
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 25
    loop                           shift and go to state 31

state 32

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    $end            reduce using rule 47 (empty -> .)
    }               reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 67
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 25
    linea                          shift and go to state 32

state 33

    (12) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada

    (               shift and go to state 68


state 34

    (19) lCerrada -> DO lCerrada . WHILE ( valores ) ;

    WHILE           shift and go to state 69


state 35

    (18) lCerrada -> DO { . g } WHILE ( valores ) ;
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    }               reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 70
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 25
    loop                           shift and go to state 31

state 36

    (16) lCerrada -> loop . { g }
    (17) lCerrada -> loop . lCerrada
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 66
    COMMENT         shift and go to state 9
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 21
    sentencia                      shift and go to state 10
    funcString                     shift and go to state 23
    funcVoid                       shift and go to state 15
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 64
    funcInt                        shift and go to state 5
    varsOps                        shift and go to state 14
    func                           shift and go to state 19
    funcBool                       shift and go to state 3
    varYVals                       shift and go to state 25
    vecVal                         shift and go to state 8
    loop                           shift and go to state 36

state 37

    (23) sentencia -> RETURN ; .

    ELSE            reduce using rule 23 (sentencia -> RETURN ; .)
    IF              reduce using rule 23 (sentencia -> RETURN ; .)
    COMMENT         reduce using rule 23 (sentencia -> RETURN ; .)
    DO              reduce using rule 23 (sentencia -> RETURN ; .)
    WHILE           reduce using rule 23 (sentencia -> RETURN ; .)
    FOR             reduce using rule 23 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 23 (sentencia -> RETURN ; .)
    ;               reduce using rule 23 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 23 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 23 (sentencia -> RETURN ; .)
    ID              reduce using rule 23 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 23 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 23 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 23 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 23 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 23 (sentencia -> RETURN ; .)
    $end            reduce using rule 23 (sentencia -> RETURN ; .)
    }               reduce using rule 23 (sentencia -> RETURN ; .)


state 38

    (43) funcBool -> COLINEALES ( . valores , valores )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 101
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 39

    (25) loop -> WHILE ( . valores )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 111
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 40

    (44) funcVoid -> PRINT ( . valores )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 112
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 41

    (89) varYVals -> vecVal . . varYVals
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (90) vecVal -> . ID m

    ID              shift and go to state 46

    varYVals                       shift and go to state 113
    vecVal                         shift and go to state 8

state 42

    (11) lCerrada -> COMMENT lCerrada .

    IF              reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    COMMENT         reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    DO              reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    WHILE           reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    FOR             reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    RETURN          reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    ;               reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    MENOSMENOS      reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    MASMAS          reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    ID              reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    PRINT           reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    MULTIESCALAR    reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    LENGTH          reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    CAPITALIZAR     reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    COLINEALES      reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    }               reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    $end            reduce using rule 11 (lCerrada -> COMMENT lCerrada .)
    ELSE            reduce using rule 11 (lCerrada -> COMMENT lCerrada .)


state 43

    (5) lAbierta -> IF ( . cosaBooleana ) linea
    (6) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) { g }
    (12) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (27) cosaBooleana -> . expBool
    (28) cosaBooleana -> . valoresBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 123
    (               shift and go to state 119
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    )               reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 116
    eMat                           shift and go to state 118
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    varsOps                        shift and go to state 124
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    cosaBooleana                   shift and go to state 120
    p                              shift and go to state 102
    expBool                        shift and go to state 126
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92

state 44

    (20) sentencia -> varsOps ; .

    ELSE            reduce using rule 20 (sentencia -> varsOps ; .)
    IF              reduce using rule 20 (sentencia -> varsOps ; .)
    COMMENT         reduce using rule 20 (sentencia -> varsOps ; .)
    DO              reduce using rule 20 (sentencia -> varsOps ; .)
    WHILE           reduce using rule 20 (sentencia -> varsOps ; .)
    FOR             reduce using rule 20 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 20 (sentencia -> varsOps ; .)
    ;               reduce using rule 20 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 20 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 20 (sentencia -> varsOps ; .)
    ID              reduce using rule 20 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 20 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 20 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 20 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 20 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 20 (sentencia -> varsOps ; .)
    $end            reduce using rule 20 (sentencia -> varsOps ; .)
    }               reduce using rule 20 (sentencia -> varsOps ; .)


state 45

    (100) varsOps -> MENOSMENOS varYVals .

    )               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    +               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    -               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    *               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    /               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    %               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    ^               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    OR              reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    AND             reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    ?               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    EQEQ            reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    DISTINTO        reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    >               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    <               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    ;               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    ,               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    ]               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    :               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)
    }               reduce using rule 100 (varsOps -> MENOSMENOS varYVals .)


state 46

    (87) varYVals -> ID .
    (90) vecVal -> ID . m
    (91) m -> . [ INT ]
    (92) m -> . [ INT ] m
    (93) m -> . [ varYVals ] m
    (94) m -> . [ varYVals ]
    (95) m -> . [ eMat ] m
    (96) m -> . [ eMat ]

    MASMAS          reduce using rule 87 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 87 (varYVals -> ID .)
    OR              reduce using rule 87 (varYVals -> ID .)
    AND             reduce using rule 87 (varYVals -> ID .)
    )               reduce using rule 87 (varYVals -> ID .)
    EQEQ            reduce using rule 87 (varYVals -> ID .)
    DISTINTO        reduce using rule 87 (varYVals -> ID .)
    >               reduce using rule 87 (varYVals -> ID .)
    <               reduce using rule 87 (varYVals -> ID .)
    +               reduce using rule 87 (varYVals -> ID .)
    -               reduce using rule 87 (varYVals -> ID .)
    *               reduce using rule 87 (varYVals -> ID .)
    /               reduce using rule 87 (varYVals -> ID .)
    %               reduce using rule 87 (varYVals -> ID .)
    ^               reduce using rule 87 (varYVals -> ID .)
    ?               reduce using rule 87 (varYVals -> ID .)
    ,               reduce using rule 87 (varYVals -> ID .)
    ]               reduce using rule 87 (varYVals -> ID .)
    ;               reduce using rule 87 (varYVals -> ID .)
    :               reduce using rule 87 (varYVals -> ID .)
    }               reduce using rule 87 (varYVals -> ID .)
    MULEQ           reduce using rule 87 (varYVals -> ID .)
    DIVEQ           reduce using rule 87 (varYVals -> ID .)
    MASEQ           reduce using rule 87 (varYVals -> ID .)
    MENOSEQ         reduce using rule 87 (varYVals -> ID .)
    =               reduce using rule 87 (varYVals -> ID .)
    [               shift and go to state 52

    m                              shift and go to state 50

state 47

    (26) loop -> FOR ( . primParam ; valores ; tercerParam )
    (29) primParam -> . varAsig
    (30) primParam -> . empty
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (47) empty -> .
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (90) vecVal -> . ID m

    ID              shift and go to state 20
    ;               reduce using rule 47 (empty -> .)

    varAsig                        shift and go to state 127
    primParam                      shift and go to state 128
    varYVals                       shift and go to state 129
    vecVal                         shift and go to state 8
    empty                          shift and go to state 130

state 48

    (41) funcInt -> LENGTH ( . valores )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 131
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 49

    (21) sentencia -> func ; .

    ELSE            reduce using rule 21 (sentencia -> func ; .)
    IF              reduce using rule 21 (sentencia -> func ; .)
    COMMENT         reduce using rule 21 (sentencia -> func ; .)
    DO              reduce using rule 21 (sentencia -> func ; .)
    WHILE           reduce using rule 21 (sentencia -> func ; .)
    FOR             reduce using rule 21 (sentencia -> func ; .)
    RETURN          reduce using rule 21 (sentencia -> func ; .)
    ;               reduce using rule 21 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 21 (sentencia -> func ; .)
    MASMAS          reduce using rule 21 (sentencia -> func ; .)
    ID              reduce using rule 21 (sentencia -> func ; .)
    PRINT           reduce using rule 21 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 21 (sentencia -> func ; .)
    LENGTH          reduce using rule 21 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 21 (sentencia -> func ; .)
    COLINEALES      reduce using rule 21 (sentencia -> func ; .)
    $end            reduce using rule 21 (sentencia -> func ; .)
    }               reduce using rule 21 (sentencia -> func ; .)


state 50

    (90) vecVal -> ID m .

    .               reduce using rule 90 (vecVal -> ID m .)
    MASMAS          reduce using rule 90 (vecVal -> ID m .)
    MENOSMENOS      reduce using rule 90 (vecVal -> ID m .)
    )               reduce using rule 90 (vecVal -> ID m .)
    +               reduce using rule 90 (vecVal -> ID m .)
    -               reduce using rule 90 (vecVal -> ID m .)
    *               reduce using rule 90 (vecVal -> ID m .)
    /               reduce using rule 90 (vecVal -> ID m .)
    %               reduce using rule 90 (vecVal -> ID m .)
    ^               reduce using rule 90 (vecVal -> ID m .)
    ?               reduce using rule 90 (vecVal -> ID m .)
    OR              reduce using rule 90 (vecVal -> ID m .)
    AND             reduce using rule 90 (vecVal -> ID m .)
    EQEQ            reduce using rule 90 (vecVal -> ID m .)
    DISTINTO        reduce using rule 90 (vecVal -> ID m .)
    >               reduce using rule 90 (vecVal -> ID m .)
    <               reduce using rule 90 (vecVal -> ID m .)
    ,               reduce using rule 90 (vecVal -> ID m .)
    ;               reduce using rule 90 (vecVal -> ID m .)
    ]               reduce using rule 90 (vecVal -> ID m .)
    :               reduce using rule 90 (vecVal -> ID m .)
    }               reduce using rule 90 (vecVal -> ID m .)
    MULEQ           reduce using rule 90 (vecVal -> ID m .)
    DIVEQ           reduce using rule 90 (vecVal -> ID m .)
    MASEQ           reduce using rule 90 (vecVal -> ID m .)
    MENOSEQ         reduce using rule 90 (vecVal -> ID m .)
    =               reduce using rule 90 (vecVal -> ID m .)


state 51

    (110) varAsig -> ID . . ID = valoresAsig

    ID              shift and go to state 132


state 52

    (91) m -> [ . INT ]
    (92) m -> [ . INT ] m
    (93) m -> [ . varYVals ] m
    (94) m -> [ . varYVals ]
    (95) m -> [ . eMat ] m
    (96) m -> [ . eMat ]
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (90) vecVal -> . ID m
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 136
    ID              shift and go to state 46
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    eMat                           shift and go to state 134
    funcInt                        shift and go to state 133
    p                              shift and go to state 102
    varsOps                        shift and go to state 138
    valoresMat                     shift and go to state 78
    paren                          shift and go to state 94
    exp                            shift and go to state 106
    varYVals                       shift and go to state 139
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 53

    (22) sentencia -> varAsig ; .

    ELSE            reduce using rule 22 (sentencia -> varAsig ; .)
    IF              reduce using rule 22 (sentencia -> varAsig ; .)
    COMMENT         reduce using rule 22 (sentencia -> varAsig ; .)
    DO              reduce using rule 22 (sentencia -> varAsig ; .)
    WHILE           reduce using rule 22 (sentencia -> varAsig ; .)
    FOR             reduce using rule 22 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 22 (sentencia -> varAsig ; .)
    ;               reduce using rule 22 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 22 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 22 (sentencia -> varAsig ; .)
    ID              reduce using rule 22 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 22 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 22 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 22 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 22 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 22 (sentencia -> varAsig ; .)
    $end            reduce using rule 22 (sentencia -> varAsig ; .)
    }               reduce using rule 22 (sentencia -> varAsig ; .)


state 54

    (40) funcInt -> MULTIESCALAR ( . valores , valores param )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 140
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 55

    (108) varAsig -> varYVals MENOSEQ . valoresAsig
    (104) valoresAsig -> . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 141
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 142
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 56

    (103) varsOps -> varYVals MENOSMENOS .

    )               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    +               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    -               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    *               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    /               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    %               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    ^               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    OR              reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    AND             reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    ?               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    EQEQ            reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    DISTINTO        reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    >               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    <               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    ;               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    ,               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    ]               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    :               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)
    }               reduce using rule 103 (varsOps -> varYVals MENOSMENOS .)


state 57

    (107) varAsig -> varYVals MASEQ . valoresAsig
    (104) valoresAsig -> . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 143
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 142
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 58

    (109) varAsig -> varYVals = . valoresAsig
    (104) valoresAsig -> . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 144
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 142
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 59

    (102) varsOps -> varYVals MASMAS .

    )               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    +               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    -               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    *               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    /               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    %               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    ^               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    OR              reduce using rule 102 (varsOps -> varYVals MASMAS .)
    AND             reduce using rule 102 (varsOps -> varYVals MASMAS .)
    ?               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    EQEQ            reduce using rule 102 (varsOps -> varYVals MASMAS .)
    DISTINTO        reduce using rule 102 (varsOps -> varYVals MASMAS .)
    >               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    <               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    ;               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    ,               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    ]               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    :               reduce using rule 102 (varsOps -> varYVals MASMAS .)
    }               reduce using rule 102 (varsOps -> varYVals MASMAS .)


state 60

    (105) varAsig -> varYVals MULEQ . valoresAsig
    (104) valoresAsig -> . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 145
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 142
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 61

    (106) varAsig -> varYVals DIVEQ . valoresAsig
    (104) valoresAsig -> . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 146
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 142
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 62

    (42) funcString -> CAPITALIZAR ( . valores )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 147
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 63

    (101) varsOps -> MASMAS varYVals .

    )               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    +               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    -               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    *               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    /               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    %               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    ^               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    OR              reduce using rule 101 (varsOps -> MASMAS varYVals .)
    AND             reduce using rule 101 (varsOps -> MASMAS varYVals .)
    ?               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    EQEQ            reduce using rule 101 (varsOps -> MASMAS varYVals .)
    DISTINTO        reduce using rule 101 (varsOps -> MASMAS varYVals .)
    >               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    <               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    ;               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    ,               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    ]               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    :               reduce using rule 101 (varsOps -> MASMAS varYVals .)
    }               reduce using rule 101 (varsOps -> MASMAS varYVals .)


state 64

    (17) lCerrada -> loop lCerrada .

    IF              reduce using rule 17 (lCerrada -> loop lCerrada .)
    COMMENT         reduce using rule 17 (lCerrada -> loop lCerrada .)
    DO              reduce using rule 17 (lCerrada -> loop lCerrada .)
    WHILE           reduce using rule 17 (lCerrada -> loop lCerrada .)
    FOR             reduce using rule 17 (lCerrada -> loop lCerrada .)
    RETURN          reduce using rule 17 (lCerrada -> loop lCerrada .)
    ;               reduce using rule 17 (lCerrada -> loop lCerrada .)
    MENOSMENOS      reduce using rule 17 (lCerrada -> loop lCerrada .)
    MASMAS          reduce using rule 17 (lCerrada -> loop lCerrada .)
    ID              reduce using rule 17 (lCerrada -> loop lCerrada .)
    PRINT           reduce using rule 17 (lCerrada -> loop lCerrada .)
    MULTIESCALAR    reduce using rule 17 (lCerrada -> loop lCerrada .)
    LENGTH          reduce using rule 17 (lCerrada -> loop lCerrada .)
    CAPITALIZAR     reduce using rule 17 (lCerrada -> loop lCerrada .)
    COLINEALES      reduce using rule 17 (lCerrada -> loop lCerrada .)
    }               reduce using rule 17 (lCerrada -> loop lCerrada .)
    $end            reduce using rule 17 (lCerrada -> loop lCerrada .)
    ELSE            reduce using rule 17 (lCerrada -> loop lCerrada .)


state 65

    (9) lAbierta -> loop lAbierta .

    IF              reduce using rule 9 (lAbierta -> loop lAbierta .)
    COMMENT         reduce using rule 9 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 9 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 9 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 9 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 9 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 9 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 9 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 9 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 9 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 9 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 9 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 9 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 9 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 9 (lAbierta -> loop lAbierta .)
    }               reduce using rule 9 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 9 (lAbierta -> loop lAbierta .)


state 66

    (16) lCerrada -> loop { . g }
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    }               reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 148
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 25
    loop                           shift and go to state 31

state 67

    (1) g -> linea g .

    }               reduce using rule 1 (g -> linea g .)
    $end            reduce using rule 1 (g -> linea g .)


state 68

    (12) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (27) cosaBooleana -> . expBool
    (28) cosaBooleana -> . valoresBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 123
    (               shift and go to state 119
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    )               reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 116
    eMat                           shift and go to state 118
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    cosaBooleana                   shift and go to state 149
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 126

state 69

    (19) lCerrada -> DO lCerrada WHILE . ( valores ) ;

    (               shift and go to state 150


state 70

    (18) lCerrada -> DO { g . } WHILE ( valores ) ;

    }               shift and go to state 151


state 71

    (184) expBool -> and .
    (185) and -> and . AND eq
    (187) and -> and . AND valoresBool

    OR              reduce using rule 184 (expBool -> and .)
    ?               reduce using rule 184 (expBool -> and .)
    )               reduce using rule 184 (expBool -> and .)
    ,               reduce using rule 184 (expBool -> and .)
    ;               reduce using rule 184 (expBool -> and .)
    ]               reduce using rule 184 (expBool -> and .)
    :               reduce using rule 184 (expBool -> and .)
    }               reduce using rule 184 (expBool -> and .)
    AND             shift and go to state 152


state 72

    (62) valores -> ternario .

    ;               reduce using rule 62 (valores -> ternario .)
    )               reduce using rule 62 (valores -> ternario .)
    ,               reduce using rule 62 (valores -> ternario .)
    ]               reduce using rule 62 (valores -> ternario .)
    }               reduce using rule 62 (valores -> ternario .)


state 73

    (39) funcReturn -> funcBool .
    (162) valoresBool -> funcBool .

    ,               reduce using rule 39 (funcReturn -> funcBool .)
    )               reduce using rule 39 (funcReturn -> funcBool .)
    ;               reduce using rule 39 (funcReturn -> funcBool .)
    ]               reduce using rule 39 (funcReturn -> funcBool .)
    }               reduce using rule 39 (funcReturn -> funcBool .)
    OR              reduce using rule 162 (valoresBool -> funcBool .)
    AND             reduce using rule 162 (valoresBool -> funcBool .)
    ?               reduce using rule 162 (valoresBool -> funcBool .)


state 74

    (64) valores -> RES .

    ;               reduce using rule 64 (valores -> RES .)
    )               reduce using rule 64 (valores -> RES .)
    ,               reduce using rule 64 (valores -> RES .)
    ]               reduce using rule 64 (valores -> RES .)
    }               reduce using rule 64 (valores -> RES .)


state 75

    (37) funcReturn -> funcInt .
    (113) valoresMat -> funcInt .
    (203) tCompare -> funcInt .

    ,               reduce using rule 37 (funcReturn -> funcInt .)
    )               reduce using rule 37 (funcReturn -> funcInt .)
    ;               reduce using rule 37 (funcReturn -> funcInt .)
    ]               reduce using rule 37 (funcReturn -> funcInt .)
    }               reduce using rule 37 (funcReturn -> funcInt .)
    +               reduce using rule 113 (valoresMat -> funcInt .)
    -               reduce using rule 113 (valoresMat -> funcInt .)
    *               reduce using rule 113 (valoresMat -> funcInt .)
    /               reduce using rule 113 (valoresMat -> funcInt .)
    %               reduce using rule 113 (valoresMat -> funcInt .)
    ^               reduce using rule 113 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 203 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 203 (tCompare -> funcInt .)
    >               reduce using rule 203 (tCompare -> funcInt .)
    <               reduce using rule 203 (tCompare -> funcInt .)


state 76

    (208) mayor -> menor .

    EQEQ            reduce using rule 208 (mayor -> menor .)
    DISTINTO        reduce using rule 208 (mayor -> menor .)
    AND             reduce using rule 208 (mayor -> menor .)
    ?               reduce using rule 208 (mayor -> menor .)
    OR              reduce using rule 208 (mayor -> menor .)
    :               reduce using rule 208 (mayor -> menor .)
    )               reduce using rule 208 (mayor -> menor .)
    ,               reduce using rule 208 (mayor -> menor .)
    ;               reduce using rule 208 (mayor -> menor .)
    ]               reduce using rule 208 (mayor -> menor .)
    }               reduce using rule 208 (mayor -> menor .)


state 77

    (178) ternario -> ternarioVars .

    ,               reduce using rule 178 (ternario -> ternarioVars .)
    ;               reduce using rule 178 (ternario -> ternarioVars .)
    )               reduce using rule 178 (ternario -> ternarioVars .)
    }               reduce using rule 178 (ternario -> ternarioVars .)
    ]               reduce using rule 178 (ternario -> ternarioVars .)


state 78

    (129) eMat -> valoresMat . + p
    (130) eMat -> valoresMat . - p
    (133) eMat -> valoresMat . + valoresMat
    (134) eMat -> valoresMat . - valoresMat
    (139) p -> valoresMat . * exp
    (140) p -> valoresMat . / exp
    (141) p -> valoresMat . % exp
    (145) p -> valoresMat . * valoresMat
    (146) p -> valoresMat . / valoresMat
    (147) p -> valoresMat . % valoresMat
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 154
    -               shift and go to state 156
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 79

    (189) and -> eq .
    (190) eq -> eq . EQEQ mayor
    (191) eq -> eq . DISTINTO mayor
    (194) eq -> eq . EQEQ tCompare
    (195) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 189 (and -> eq .)
    OR              reduce using rule 189 (and -> eq .)
    ?               reduce using rule 189 (and -> eq .)
    ,               reduce using rule 189 (and -> eq .)
    )               reduce using rule 189 (and -> eq .)
    ;               reduce using rule 189 (and -> eq .)
    ]               reduce using rule 189 (and -> eq .)
    :               reduce using rule 189 (and -> eq .)
    }               reduce using rule 189 (and -> eq .)
    EQEQ            shift and go to state 159
    DISTINTO        shift and go to state 160


state 80

    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool
    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars

    OR              shift and go to state 162
    AND             shift and go to state 161
    ?               shift and go to state 163


state 81

    (57) valores -> STRING .
    (116) valoresMat -> STRING .

    ;               reduce using rule 57 (valores -> STRING .)
    )               reduce using rule 57 (valores -> STRING .)
    ,               reduce using rule 57 (valores -> STRING .)
    ]               reduce using rule 57 (valores -> STRING .)
    }               reduce using rule 57 (valores -> STRING .)
    +               reduce using rule 116 (valoresMat -> STRING .)
    -               reduce using rule 116 (valoresMat -> STRING .)
    *               reduce using rule 116 (valoresMat -> STRING .)
    /               reduce using rule 116 (valoresMat -> STRING .)
    %               reduce using rule 116 (valoresMat -> STRING .)
    ^               reduce using rule 116 (valoresMat -> STRING .)


state 82

    (51) valores -> eMat .
    (127) eMat -> eMat . + p
    (128) eMat -> eMat . - p
    (131) eMat -> eMat . + valoresMat
    (132) eMat -> eMat . - valoresMat
    (199) tCompare -> eMat .

    ;               reduce using rule 51 (valores -> eMat .)
    )               reduce using rule 51 (valores -> eMat .)
    ,               reduce using rule 51 (valores -> eMat .)
    ]               reduce using rule 51 (valores -> eMat .)
    }               reduce using rule 51 (valores -> eMat .)
    +               shift and go to state 164
    -               shift and go to state 165
    EQEQ            reduce using rule 199 (tCompare -> eMat .)
    DISTINTO        reduce using rule 199 (tCompare -> eMat .)
    >               reduce using rule 199 (tCompare -> eMat .)
    <               reduce using rule 199 (tCompare -> eMat .)


state 83

    (176) ternario -> ( . ternarioMat )
    (177) ternario -> ( . ternarioBool )
    (179) ternario -> ( . ternarioVars )
    (117) valoresMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 168
    ternarioMat                    shift and go to state 171
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 172
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 176
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 178

state 84

    (155) iSing -> + . paren
    (157) iSing -> + . valoresMat
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (90) vecVal -> . ID m

    (               shift and go to state 180
    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcInt                        shift and go to state 133
    varsOps                        shift and go to state 138
    valoresMat                     shift and go to state 179
    paren                          shift and go to state 181
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8

state 85

    (154) iSing -> - . paren
    (156) iSing -> - . valoresMat
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (90) vecVal -> . ID m

    (               shift and go to state 180
    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcInt                        shift and go to state 133
    varsOps                        shift and go to state 138
    valoresMat                     shift and go to state 184
    paren                          shift and go to state 185
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8

state 86

    (174) ternario -> ternarioMat .

    ,               reduce using rule 174 (ternario -> ternarioMat .)
    ;               reduce using rule 174 (ternario -> ternarioMat .)
    )               reduce using rule 174 (ternario -> ternarioMat .)
    }               reduce using rule 174 (ternario -> ternarioMat .)
    ]               reduce using rule 174 (ternario -> ternarioMat .)


state 87

    (61) valores -> vec .

    ;               reduce using rule 61 (valores -> vec .)
    )               reduce using rule 61 (valores -> vec .)
    ,               reduce using rule 61 (valores -> vec .)
    ]               reduce using rule 61 (valores -> vec .)
    }               reduce using rule 61 (valores -> vec .)


state 88

    (54) valores -> reg .

    ;               reduce using rule 54 (valores -> reg .)
    )               reduce using rule 54 (valores -> reg .)
    ,               reduce using rule 54 (valores -> reg .)
    ]               reduce using rule 54 (valores -> reg .)
    }               reduce using rule 54 (valores -> reg .)


state 89

    (52) valores -> expBool .
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ;               reduce using rule 52 (valores -> expBool .)
    )               reduce using rule 52 (valores -> expBool .)
    ,               reduce using rule 52 (valores -> expBool .)
    ]               reduce using rule 52 (valores -> expBool .)
    }               reduce using rule 52 (valores -> expBool .)
    OR              shift and go to state 186
    ?               shift and go to state 187


state 90

    (175) ternario -> ternarioBool .

    ,               reduce using rule 175 (ternario -> ternarioBool .)
    ;               reduce using rule 175 (ternario -> ternarioBool .)
    )               reduce using rule 175 (ternario -> ternarioBool .)
    }               reduce using rule 175 (ternario -> ternarioBool .)
    ]               reduce using rule 175 (ternario -> ternarioBool .)


state 91

    (153) exp -> iSing .

    ^               reduce using rule 153 (exp -> iSing .)
    *               reduce using rule 153 (exp -> iSing .)
    /               reduce using rule 153 (exp -> iSing .)
    %               reduce using rule 153 (exp -> iSing .)
    +               reduce using rule 153 (exp -> iSing .)
    -               reduce using rule 153 (exp -> iSing .)
    :               reduce using rule 153 (exp -> iSing .)
    EQEQ            reduce using rule 153 (exp -> iSing .)
    DISTINTO        reduce using rule 153 (exp -> iSing .)
    >               reduce using rule 153 (exp -> iSing .)
    <               reduce using rule 153 (exp -> iSing .)
    ,               reduce using rule 153 (exp -> iSing .)
    }               reduce using rule 153 (exp -> iSing .)
    )               reduce using rule 153 (exp -> iSing .)
    ]               reduce using rule 153 (exp -> iSing .)
    ;               reduce using rule 153 (exp -> iSing .)
    AND             reduce using rule 153 (exp -> iSing .)
    OR              reduce using rule 153 (exp -> iSing .)
    ?               reduce using rule 153 (exp -> iSing .)


state 92

    (213) not -> parenBool .

    EQEQ            reduce using rule 213 (not -> parenBool .)
    DISTINTO        reduce using rule 213 (not -> parenBool .)
    AND             reduce using rule 213 (not -> parenBool .)
    )               reduce using rule 213 (not -> parenBool .)
    ?               reduce using rule 213 (not -> parenBool .)
    OR              reduce using rule 213 (not -> parenBool .)
    ,               reduce using rule 213 (not -> parenBool .)
    ;               reduce using rule 213 (not -> parenBool .)
    ]               reduce using rule 213 (not -> parenBool .)
    :               reduce using rule 213 (not -> parenBool .)
    }               reduce using rule 213 (not -> parenBool .)


state 93

    (192) eq -> tCompare . EQEQ mayor
    (193) eq -> tCompare . DISTINTO mayor
    (196) eq -> tCompare . EQEQ tCompare
    (197) eq -> tCompare . DISTINTO tCompare
    (207) mayor -> tCompare . > tCompare
    (209) menor -> tCompare . < tCompare

    EQEQ            shift and go to state 189
    DISTINTO        shift and go to state 188
    >               shift and go to state 191
    <               shift and go to state 190


state 94

    (158) iSing -> paren .

    ^               reduce using rule 158 (iSing -> paren .)
    *               reduce using rule 158 (iSing -> paren .)
    /               reduce using rule 158 (iSing -> paren .)
    %               reduce using rule 158 (iSing -> paren .)
    +               reduce using rule 158 (iSing -> paren .)
    -               reduce using rule 158 (iSing -> paren .)
    :               reduce using rule 158 (iSing -> paren .)
    EQEQ            reduce using rule 158 (iSing -> paren .)
    DISTINTO        reduce using rule 158 (iSing -> paren .)
    >               reduce using rule 158 (iSing -> paren .)
    <               reduce using rule 158 (iSing -> paren .)
    ,               reduce using rule 158 (iSing -> paren .)
    )               reduce using rule 158 (iSing -> paren .)
    ]               reduce using rule 158 (iSing -> paren .)
    ;               reduce using rule 158 (iSing -> paren .)
    AND             reduce using rule 158 (iSing -> paren .)
    OR              reduce using rule 158 (iSing -> paren .)
    ?               reduce using rule 158 (iSing -> paren .)
    }               reduce using rule 158 (iSing -> paren .)


state 95

    (210) menor -> not .

    EQEQ            reduce using rule 210 (menor -> not .)
    DISTINTO        reduce using rule 210 (menor -> not .)
    AND             reduce using rule 210 (menor -> not .)
    ?               reduce using rule 210 (menor -> not .)
    OR              reduce using rule 210 (menor -> not .)
    :               reduce using rule 210 (menor -> not .)
    )               reduce using rule 210 (menor -> not .)
    ;               reduce using rule 210 (menor -> not .)
    ,               reduce using rule 210 (menor -> not .)
    ]               reduce using rule 210 (menor -> not .)
    }               reduce using rule 210 (menor -> not .)


state 96

    (48) vec -> [ . elem ]
    (49) elem -> . valores , elem
    (50) elem -> . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    valores                        shift and go to state 192
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    elem                           shift and go to state 193
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 97

    (87) varYVals -> ID .
    (65) atributos -> ID . . valoresCampos
    (90) vecVal -> ID . m
    (91) m -> . [ INT ]
    (92) m -> . [ INT ] m
    (93) m -> . [ varYVals ] m
    (94) m -> . [ varYVals ]
    (95) m -> . [ eMat ] m
    (96) m -> . [ eMat ]

    MASMAS          reduce using rule 87 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 87 (varYVals -> ID .)
    ;               reduce using rule 87 (varYVals -> ID .)
    )               reduce using rule 87 (varYVals -> ID .)
    +               reduce using rule 87 (varYVals -> ID .)
    -               reduce using rule 87 (varYVals -> ID .)
    *               reduce using rule 87 (varYVals -> ID .)
    /               reduce using rule 87 (varYVals -> ID .)
    %               reduce using rule 87 (varYVals -> ID .)
    ^               reduce using rule 87 (varYVals -> ID .)
    OR              reduce using rule 87 (varYVals -> ID .)
    AND             reduce using rule 87 (varYVals -> ID .)
    ?               reduce using rule 87 (varYVals -> ID .)
    EQEQ            reduce using rule 87 (varYVals -> ID .)
    DISTINTO        reduce using rule 87 (varYVals -> ID .)
    >               reduce using rule 87 (varYVals -> ID .)
    <               reduce using rule 87 (varYVals -> ID .)
    ,               reduce using rule 87 (varYVals -> ID .)
    :               reduce using rule 87 (varYVals -> ID .)
    ]               reduce using rule 87 (varYVals -> ID .)
    }               reduce using rule 87 (varYVals -> ID .)
    .               shift and go to state 194
    [               shift and go to state 52

    m                              shift and go to state 50

state 98

    (55) valores -> INT .
    (111) valoresMat -> INT .
    (202) tCompare -> INT .

    ;               reduce using rule 55 (valores -> INT .)
    )               reduce using rule 55 (valores -> INT .)
    ,               reduce using rule 55 (valores -> INT .)
    ]               reduce using rule 55 (valores -> INT .)
    }               reduce using rule 55 (valores -> INT .)
    +               reduce using rule 111 (valoresMat -> INT .)
    -               reduce using rule 111 (valoresMat -> INT .)
    *               reduce using rule 111 (valoresMat -> INT .)
    /               reduce using rule 111 (valoresMat -> INT .)
    %               reduce using rule 111 (valoresMat -> INT .)
    ^               reduce using rule 111 (valoresMat -> INT .)
    EQEQ            reduce using rule 202 (tCompare -> INT .)
    DISTINTO        reduce using rule 202 (tCompare -> INT .)
    >               reduce using rule 202 (tCompare -> INT .)
    <               reduce using rule 202 (tCompare -> INT .)


state 99

    (53) valores -> funcReturn .

    ;               reduce using rule 53 (valores -> funcReturn .)
    )               reduce using rule 53 (valores -> funcReturn .)
    ,               reduce using rule 53 (valores -> funcReturn .)
    ]               reduce using rule 53 (valores -> funcReturn .)
    }               reduce using rule 53 (valores -> funcReturn .)


state 100

    (56) valores -> FLOAT .
    (112) valoresMat -> FLOAT .
    (204) tCompare -> FLOAT .

    ;               reduce using rule 56 (valores -> FLOAT .)
    )               reduce using rule 56 (valores -> FLOAT .)
    ,               reduce using rule 56 (valores -> FLOAT .)
    ]               reduce using rule 56 (valores -> FLOAT .)
    }               reduce using rule 56 (valores -> FLOAT .)
    +               reduce using rule 112 (valoresMat -> FLOAT .)
    -               reduce using rule 112 (valoresMat -> FLOAT .)
    *               reduce using rule 112 (valoresMat -> FLOAT .)
    /               reduce using rule 112 (valoresMat -> FLOAT .)
    %               reduce using rule 112 (valoresMat -> FLOAT .)
    ^               reduce using rule 112 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 204 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 204 (tCompare -> FLOAT .)
    >               reduce using rule 204 (tCompare -> FLOAT .)
    <               reduce using rule 204 (tCompare -> FLOAT .)


state 101

    (43) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 195


state 102

    (135) eMat -> p .
    (136) p -> p . * exp
    (137) p -> p . / exp
    (138) p -> p . % exp
    (142) p -> p . * valoresMat
    (143) p -> p . / valoresMat
    (144) p -> p . % valoresMat

    +               reduce using rule 135 (eMat -> p .)
    -               reduce using rule 135 (eMat -> p .)
    :               reduce using rule 135 (eMat -> p .)
    EQEQ            reduce using rule 135 (eMat -> p .)
    DISTINTO        reduce using rule 135 (eMat -> p .)
    >               reduce using rule 135 (eMat -> p .)
    <               reduce using rule 135 (eMat -> p .)
    ,               reduce using rule 135 (eMat -> p .)
    )               reduce using rule 135 (eMat -> p .)
    ;               reduce using rule 135 (eMat -> p .)
    ]               reduce using rule 135 (eMat -> p .)
    }               reduce using rule 135 (eMat -> p .)
    AND             reduce using rule 135 (eMat -> p .)
    OR              reduce using rule 135 (eMat -> p .)
    ?               reduce using rule 135 (eMat -> p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 103

    (58) valores -> BOOL .
    (161) valoresBool -> BOOL .

    ;               reduce using rule 58 (valores -> BOOL .)
    )               reduce using rule 58 (valores -> BOOL .)
    ,               reduce using rule 58 (valores -> BOOL .)
    ]               reduce using rule 58 (valores -> BOOL .)
    }               reduce using rule 58 (valores -> BOOL .)
    OR              reduce using rule 161 (valoresBool -> BOOL .)
    AND             reduce using rule 161 (valoresBool -> BOOL .)
    ?               reduce using rule 161 (valoresBool -> BOOL .)


state 104

    (60) valores -> varsOps .
    (115) valoresMat -> varsOps .
    (164) valoresBool -> varsOps .
    (200) tCompare -> varsOps .

    ;               reduce using rule 60 (valores -> varsOps .)
    )               reduce using rule 60 (valores -> varsOps .)
    ,               reduce using rule 60 (valores -> varsOps .)
    ]               reduce using rule 60 (valores -> varsOps .)
    }               reduce using rule 60 (valores -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)
    OR              reduce using rule 164 (valoresBool -> varsOps .)
    AND             reduce using rule 164 (valoresBool -> varsOps .)
    ?               reduce using rule 164 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 200 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 200 (tCompare -> varsOps .)
    >               reduce using rule 200 (tCompare -> varsOps .)
    <               reduce using rule 200 (tCompare -> varsOps .)


state 105

    (211) not -> NOT . not
    (212) not -> NOT . valoresBool
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (214) parenBool -> . ( expBool )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (90) vecVal -> . ID m

    NOT             shift and go to state 105
    BOOL            shift and go to state 123
    (               shift and go to state 199
    EQEQ            reduce using rule 166 (valoresBool -> .)
    DISTINTO        reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    ,               reduce using rule 166 (valoresBool -> .)
    )               reduce using rule 166 (valoresBool -> .)
    ;               reduce using rule 166 (valoresBool -> .)
    ]               reduce using rule 166 (valoresBool -> .)
    :               reduce using rule 166 (valoresBool -> .)
    }               reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcBool                       shift and go to state 114
    parenBool                      shift and go to state 92
    varsOps                        shift and go to state 201
    vecVal                         shift and go to state 8
    not                            shift and go to state 200
    varYVals                       shift and go to state 202
    valoresBool                    shift and go to state 203

state 106

    (148) p -> exp .
    (149) exp -> exp . ^ iSing
    (151) exp -> exp . ^ valoresMat

    *               reduce using rule 148 (p -> exp .)
    /               reduce using rule 148 (p -> exp .)
    %               reduce using rule 148 (p -> exp .)
    +               reduce using rule 148 (p -> exp .)
    -               reduce using rule 148 (p -> exp .)
    ;               reduce using rule 148 (p -> exp .)
    )               reduce using rule 148 (p -> exp .)
    EQEQ            reduce using rule 148 (p -> exp .)
    DISTINTO        reduce using rule 148 (p -> exp .)
    >               reduce using rule 148 (p -> exp .)
    <               reduce using rule 148 (p -> exp .)
    :               reduce using rule 148 (p -> exp .)
    AND             reduce using rule 148 (p -> exp .)
    OR              reduce using rule 148 (p -> exp .)
    ?               reduce using rule 148 (p -> exp .)
    ,               reduce using rule 148 (p -> exp .)
    ]               reduce using rule 148 (p -> exp .)
    }               reduce using rule 148 (p -> exp .)
    ^               shift and go to state 204


state 107

    (97) reg -> { . campos }
    (98) campos -> . ID : valores , campos
    (99) campos -> . ID : valores

    ID              shift and go to state 206

    campos                         shift and go to state 205

state 108

    (198) eq -> mayor .

    EQEQ            reduce using rule 198 (eq -> mayor .)
    DISTINTO        reduce using rule 198 (eq -> mayor .)
    AND             reduce using rule 198 (eq -> mayor .)
    ?               reduce using rule 198 (eq -> mayor .)
    OR              reduce using rule 198 (eq -> mayor .)
    :               reduce using rule 198 (eq -> mayor .)
    )               reduce using rule 198 (eq -> mayor .)
    ;               reduce using rule 198 (eq -> mayor .)
    ,               reduce using rule 198 (eq -> mayor .)
    }               reduce using rule 198 (eq -> mayor .)
    ]               reduce using rule 198 (eq -> mayor .)


state 109

    (59) valores -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (114) valoresMat -> varYVals .
    (163) valoresBool -> varYVals .
    (201) tCompare -> varYVals .

    ;               reduce using rule 59 (valores -> varYVals .)
    )               reduce using rule 59 (valores -> varYVals .)
    ,               reduce using rule 59 (valores -> varYVals .)
    ]               reduce using rule 59 (valores -> varYVals .)
    }               reduce using rule 59 (valores -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)


state 110

    (63) valores -> atributos .

    ;               reduce using rule 63 (valores -> atributos .)
    )               reduce using rule 63 (valores -> atributos .)
    ,               reduce using rule 63 (valores -> atributos .)
    ]               reduce using rule 63 (valores -> atributos .)
    }               reduce using rule 63 (valores -> atributos .)


state 111

    (25) loop -> WHILE ( valores . )

    )               shift and go to state 207


state 112

    (44) funcVoid -> PRINT ( valores . )

    )               shift and go to state 208


state 113

    (89) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 89 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 89 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 89 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 89 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 89 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 89 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 89 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 89 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 89 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 89 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 89 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 89 (varYVals -> vecVal . varYVals .)


state 114

    (162) valoresBool -> funcBool .

    ?               reduce using rule 162 (valoresBool -> funcBool .)
    OR              reduce using rule 162 (valoresBool -> funcBool .)
    AND             reduce using rule 162 (valoresBool -> funcBool .)
    )               reduce using rule 162 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 162 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 162 (valoresBool -> funcBool .)
    ,               reduce using rule 162 (valoresBool -> funcBool .)
    ;               reduce using rule 162 (valoresBool -> funcBool .)
    ]               reduce using rule 162 (valoresBool -> funcBool .)
    :               reduce using rule 162 (valoresBool -> funcBool .)
    }               reduce using rule 162 (valoresBool -> funcBool .)


state 115

    (203) tCompare -> funcInt .
    (113) valoresMat -> funcInt .

    EQEQ            reduce using rule 203 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 203 (tCompare -> funcInt .)
    >               reduce using rule 203 (tCompare -> funcInt .)
    <               reduce using rule 203 (tCompare -> funcInt .)
    AND             reduce using rule 203 (tCompare -> funcInt .)
    OR              reduce using rule 203 (tCompare -> funcInt .)
    ?               reduce using rule 203 (tCompare -> funcInt .)
    ,               reduce using rule 203 (tCompare -> funcInt .)
    )               reduce using rule 203 (tCompare -> funcInt .)
    ;               reduce using rule 203 (tCompare -> funcInt .)
    ]               reduce using rule 203 (tCompare -> funcInt .)
    :               reduce using rule 203 (tCompare -> funcInt .)
    }               reduce using rule 203 (tCompare -> funcInt .)
    +               reduce using rule 113 (valoresMat -> funcInt .)
    -               reduce using rule 113 (valoresMat -> funcInt .)
    *               reduce using rule 113 (valoresMat -> funcInt .)
    /               reduce using rule 113 (valoresMat -> funcInt .)
    %               reduce using rule 113 (valoresMat -> funcInt .)
    ^               reduce using rule 113 (valoresMat -> funcInt .)


state 116

    (28) cosaBooleana -> valoresBool .
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    )               reduce using rule 28 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 162
    AND             shift and go to state 161


state 117

    (116) valoresMat -> STRING .

    )               reduce using rule 116 (valoresMat -> STRING .)
    +               reduce using rule 116 (valoresMat -> STRING .)
    -               reduce using rule 116 (valoresMat -> STRING .)
    *               reduce using rule 116 (valoresMat -> STRING .)
    /               reduce using rule 116 (valoresMat -> STRING .)
    %               reduce using rule 116 (valoresMat -> STRING .)
    ^               reduce using rule 116 (valoresMat -> STRING .)
    ,               reduce using rule 116 (valoresMat -> STRING .)
    EQEQ            reduce using rule 116 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 116 (valoresMat -> STRING .)
    >               reduce using rule 116 (valoresMat -> STRING .)
    <               reduce using rule 116 (valoresMat -> STRING .)
    ]               reduce using rule 116 (valoresMat -> STRING .)
    ;               reduce using rule 116 (valoresMat -> STRING .)
    AND             reduce using rule 116 (valoresMat -> STRING .)
    OR              reduce using rule 116 (valoresMat -> STRING .)
    ?               reduce using rule 116 (valoresMat -> STRING .)
    :               reduce using rule 116 (valoresMat -> STRING .)
    }               reduce using rule 116 (valoresMat -> STRING .)


state 118

    (199) tCompare -> eMat .
    (127) eMat -> eMat . + p
    (128) eMat -> eMat . - p
    (131) eMat -> eMat . + valoresMat
    (132) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 199 (tCompare -> eMat .)
    DISTINTO        reduce using rule 199 (tCompare -> eMat .)
    >               reduce using rule 199 (tCompare -> eMat .)
    <               reduce using rule 199 (tCompare -> eMat .)
    AND             reduce using rule 199 (tCompare -> eMat .)
    OR              reduce using rule 199 (tCompare -> eMat .)
    ?               reduce using rule 199 (tCompare -> eMat .)
    ,               reduce using rule 199 (tCompare -> eMat .)
    )               reduce using rule 199 (tCompare -> eMat .)
    ;               reduce using rule 199 (tCompare -> eMat .)
    ]               reduce using rule 199 (tCompare -> eMat .)
    :               reduce using rule 199 (tCompare -> eMat .)
    }               reduce using rule 199 (tCompare -> eMat .)
    +               shift and go to state 164
    -               shift and go to state 165


state 119

    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (117) valoresMat -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (43) funcBool -> . COLINEALES ( valores , valores )
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 209
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 210
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 211
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 212

state 120

    (5) lAbierta -> IF ( cosaBooleana . ) linea
    (6) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (7) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) { g }
    (12) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (13) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada

    )               shift and go to state 213


state 121

    (202) tCompare -> INT .
    (111) valoresMat -> INT .

    EQEQ            reduce using rule 202 (tCompare -> INT .)
    DISTINTO        reduce using rule 202 (tCompare -> INT .)
    >               reduce using rule 202 (tCompare -> INT .)
    <               reduce using rule 202 (tCompare -> INT .)
    AND             reduce using rule 202 (tCompare -> INT .)
    OR              reduce using rule 202 (tCompare -> INT .)
    ?               reduce using rule 202 (tCompare -> INT .)
    ,               reduce using rule 202 (tCompare -> INT .)
    )               reduce using rule 202 (tCompare -> INT .)
    ;               reduce using rule 202 (tCompare -> INT .)
    ]               reduce using rule 202 (tCompare -> INT .)
    :               reduce using rule 202 (tCompare -> INT .)
    }               reduce using rule 202 (tCompare -> INT .)
    +               reduce using rule 111 (valoresMat -> INT .)
    -               reduce using rule 111 (valoresMat -> INT .)
    *               reduce using rule 111 (valoresMat -> INT .)
    /               reduce using rule 111 (valoresMat -> INT .)
    %               reduce using rule 111 (valoresMat -> INT .)
    ^               reduce using rule 111 (valoresMat -> INT .)


state 122

    (204) tCompare -> FLOAT .
    (112) valoresMat -> FLOAT .

    EQEQ            reduce using rule 204 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 204 (tCompare -> FLOAT .)
    >               reduce using rule 204 (tCompare -> FLOAT .)
    <               reduce using rule 204 (tCompare -> FLOAT .)
    AND             reduce using rule 204 (tCompare -> FLOAT .)
    OR              reduce using rule 204 (tCompare -> FLOAT .)
    ?               reduce using rule 204 (tCompare -> FLOAT .)
    ,               reduce using rule 204 (tCompare -> FLOAT .)
    )               reduce using rule 204 (tCompare -> FLOAT .)
    ;               reduce using rule 204 (tCompare -> FLOAT .)
    ]               reduce using rule 204 (tCompare -> FLOAT .)
    :               reduce using rule 204 (tCompare -> FLOAT .)
    }               reduce using rule 204 (tCompare -> FLOAT .)
    +               reduce using rule 112 (valoresMat -> FLOAT .)
    -               reduce using rule 112 (valoresMat -> FLOAT .)
    *               reduce using rule 112 (valoresMat -> FLOAT .)
    /               reduce using rule 112 (valoresMat -> FLOAT .)
    %               reduce using rule 112 (valoresMat -> FLOAT .)
    ^               reduce using rule 112 (valoresMat -> FLOAT .)


state 123

    (161) valoresBool -> BOOL .

    ?               reduce using rule 161 (valoresBool -> BOOL .)
    OR              reduce using rule 161 (valoresBool -> BOOL .)
    AND             reduce using rule 161 (valoresBool -> BOOL .)
    )               reduce using rule 161 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 161 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 161 (valoresBool -> BOOL .)
    ,               reduce using rule 161 (valoresBool -> BOOL .)
    ;               reduce using rule 161 (valoresBool -> BOOL .)
    ]               reduce using rule 161 (valoresBool -> BOOL .)
    :               reduce using rule 161 (valoresBool -> BOOL .)
    }               reduce using rule 161 (valoresBool -> BOOL .)


state 124

    (164) valoresBool -> varsOps .
    (200) tCompare -> varsOps .
    (115) valoresMat -> varsOps .

    OR              reduce using rule 164 (valoresBool -> varsOps .)
    AND             reduce using rule 164 (valoresBool -> varsOps .)
    )               reduce using rule 164 (valoresBool -> varsOps .)
    ?               reduce using rule 164 (valoresBool -> varsOps .)
    ,               reduce using rule 164 (valoresBool -> varsOps .)
    ;               reduce using rule 164 (valoresBool -> varsOps .)
    ]               reduce using rule 164 (valoresBool -> varsOps .)
    :               reduce using rule 164 (valoresBool -> varsOps .)
    }               reduce using rule 164 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 200 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 200 (tCompare -> varsOps .)
    >               reduce using rule 200 (tCompare -> varsOps .)
    <               reduce using rule 200 (tCompare -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)


state 125

    (163) valoresBool -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (201) tCompare -> varYVals .
    (114) valoresMat -> varYVals .

    OR              reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    )               reduce using rule 163 (valoresBool -> varYVals .)
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    ,               reduce using rule 163 (valoresBool -> varYVals .)
    ;               reduce using rule 163 (valoresBool -> varYVals .)
    ]               reduce using rule 163 (valoresBool -> varYVals .)
    :               reduce using rule 163 (valoresBool -> varYVals .)
    }               reduce using rule 163 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)


state 126

    (27) cosaBooleana -> expBool .
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               reduce using rule 27 (cosaBooleana -> expBool .)
    OR              shift and go to state 186


state 127

    (29) primParam -> varAsig .

    ;               reduce using rule 29 (primParam -> varAsig .)


state 128

    (26) loop -> FOR ( primParam . ; valores ; tercerParam )

    ;               shift and go to state 214


state 129

    (105) varAsig -> varYVals . MULEQ valoresAsig
    (106) varAsig -> varYVals . DIVEQ valoresAsig
    (107) varAsig -> varYVals . MASEQ valoresAsig
    (108) varAsig -> varYVals . MENOSEQ valoresAsig
    (109) varAsig -> varYVals . = valoresAsig

    MULEQ           shift and go to state 60
    DIVEQ           shift and go to state 61
    MASEQ           shift and go to state 57
    MENOSEQ         shift and go to state 55
    =               shift and go to state 58


state 130

    (30) primParam -> empty .

    ;               reduce using rule 30 (primParam -> empty .)


state 131

    (41) funcInt -> LENGTH ( valores . )

    )               shift and go to state 215


state 132

    (110) varAsig -> ID . ID . = valoresAsig

    =               shift and go to state 216


state 133

    (113) valoresMat -> funcInt .

    *               reduce using rule 113 (valoresMat -> funcInt .)
    /               reduce using rule 113 (valoresMat -> funcInt .)
    %               reduce using rule 113 (valoresMat -> funcInt .)
    ^               reduce using rule 113 (valoresMat -> funcInt .)
    +               reduce using rule 113 (valoresMat -> funcInt .)
    -               reduce using rule 113 (valoresMat -> funcInt .)
    ,               reduce using rule 113 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 113 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 113 (valoresMat -> funcInt .)
    >               reduce using rule 113 (valoresMat -> funcInt .)
    <               reduce using rule 113 (valoresMat -> funcInt .)
    )               reduce using rule 113 (valoresMat -> funcInt .)
    ]               reduce using rule 113 (valoresMat -> funcInt .)
    ;               reduce using rule 113 (valoresMat -> funcInt .)
    AND             reduce using rule 113 (valoresMat -> funcInt .)
    OR              reduce using rule 113 (valoresMat -> funcInt .)
    ?               reduce using rule 113 (valoresMat -> funcInt .)
    :               reduce using rule 113 (valoresMat -> funcInt .)
    }               reduce using rule 113 (valoresMat -> funcInt .)


state 134

    (95) m -> [ eMat . ] m
    (96) m -> [ eMat . ]
    (127) eMat -> eMat . + p
    (128) eMat -> eMat . - p
    (131) eMat -> eMat . + valoresMat
    (132) eMat -> eMat . - valoresMat

    ]               shift and go to state 217
    +               shift and go to state 164
    -               shift and go to state 165


state 135

    (117) valoresMat -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 220

state 136

    (91) m -> [ INT . ]
    (92) m -> [ INT . ] m
    (111) valoresMat -> INT .

    ]               shift and go to state 221
    +               reduce using rule 111 (valoresMat -> INT .)
    -               reduce using rule 111 (valoresMat -> INT .)
    *               reduce using rule 111 (valoresMat -> INT .)
    /               reduce using rule 111 (valoresMat -> INT .)
    %               reduce using rule 111 (valoresMat -> INT .)
    ^               reduce using rule 111 (valoresMat -> INT .)


state 137

    (112) valoresMat -> FLOAT .

    *               reduce using rule 112 (valoresMat -> FLOAT .)
    /               reduce using rule 112 (valoresMat -> FLOAT .)
    %               reduce using rule 112 (valoresMat -> FLOAT .)
    ^               reduce using rule 112 (valoresMat -> FLOAT .)
    +               reduce using rule 112 (valoresMat -> FLOAT .)
    -               reduce using rule 112 (valoresMat -> FLOAT .)
    ,               reduce using rule 112 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 112 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 112 (valoresMat -> FLOAT .)
    >               reduce using rule 112 (valoresMat -> FLOAT .)
    <               reduce using rule 112 (valoresMat -> FLOAT .)
    )               reduce using rule 112 (valoresMat -> FLOAT .)
    ]               reduce using rule 112 (valoresMat -> FLOAT .)
    ;               reduce using rule 112 (valoresMat -> FLOAT .)
    AND             reduce using rule 112 (valoresMat -> FLOAT .)
    OR              reduce using rule 112 (valoresMat -> FLOAT .)
    ?               reduce using rule 112 (valoresMat -> FLOAT .)
    :               reduce using rule 112 (valoresMat -> FLOAT .)
    }               reduce using rule 112 (valoresMat -> FLOAT .)


state 138

    (115) valoresMat -> varsOps .

    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    ,               reduce using rule 115 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 115 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 115 (valoresMat -> varsOps .)
    >               reduce using rule 115 (valoresMat -> varsOps .)
    <               reduce using rule 115 (valoresMat -> varsOps .)
    )               reduce using rule 115 (valoresMat -> varsOps .)
    ]               reduce using rule 115 (valoresMat -> varsOps .)
    ;               reduce using rule 115 (valoresMat -> varsOps .)
    AND             reduce using rule 115 (valoresMat -> varsOps .)
    OR              reduce using rule 115 (valoresMat -> varsOps .)
    ?               reduce using rule 115 (valoresMat -> varsOps .)
    :               reduce using rule 115 (valoresMat -> varsOps .)
    }               reduce using rule 115 (valoresMat -> varsOps .)


state 139

    (93) m -> [ varYVals . ] m
    (94) m -> [ varYVals . ]
    (114) valoresMat -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS

    ]               shift and go to state 222
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56


state 140

    (40) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 223


state 141

    (108) varAsig -> varYVals MENOSEQ valoresAsig .

    ;               reduce using rule 108 (varAsig -> varYVals MENOSEQ valoresAsig .)
    )               reduce using rule 108 (varAsig -> varYVals MENOSEQ valoresAsig .)


state 142

    (104) valoresAsig -> valores .

    ;               reduce using rule 104 (valoresAsig -> valores .)
    )               reduce using rule 104 (valoresAsig -> valores .)


state 143

    (107) varAsig -> varYVals MASEQ valoresAsig .

    ;               reduce using rule 107 (varAsig -> varYVals MASEQ valoresAsig .)
    )               reduce using rule 107 (varAsig -> varYVals MASEQ valoresAsig .)


state 144

    (109) varAsig -> varYVals = valoresAsig .

    ;               reduce using rule 109 (varAsig -> varYVals = valoresAsig .)
    )               reduce using rule 109 (varAsig -> varYVals = valoresAsig .)


state 145

    (105) varAsig -> varYVals MULEQ valoresAsig .

    ;               reduce using rule 105 (varAsig -> varYVals MULEQ valoresAsig .)
    )               reduce using rule 105 (varAsig -> varYVals MULEQ valoresAsig .)


state 146

    (106) varAsig -> varYVals DIVEQ valoresAsig .

    ;               reduce using rule 106 (varAsig -> varYVals DIVEQ valoresAsig .)
    )               reduce using rule 106 (varAsig -> varYVals DIVEQ valoresAsig .)


state 147

    (42) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 224


state 148

    (16) lCerrada -> loop { g . }

    }               shift and go to state 225


state 149

    (12) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (13) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada

    )               shift and go to state 226


state 150

    (19) lCerrada -> DO lCerrada WHILE ( . valores ) ;
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 227
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 151

    (18) lCerrada -> DO { g } . WHILE ( valores ) ;

    WHILE           shift and go to state 228


state 152

    (185) and -> and AND . eq
    (187) and -> and AND . valoresBool
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (90) vecVal -> . ID m
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 123
    (               shift and go to state 119
    AND             reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    ,               reduce using rule 166 (valoresBool -> .)
    )               reduce using rule 166 (valoresBool -> .)
    ;               reduce using rule 166 (valoresBool -> .)
    ]               reduce using rule 166 (valoresBool -> .)
    :               reduce using rule 166 (valoresBool -> .)
    }               reduce using rule 166 (valoresBool -> .)
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 229
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 230
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 231
    parenBool                      shift and go to state 92

state 153

    (141) p -> valoresMat % . exp
    (147) p -> valoresMat % . valoresMat
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (90) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    valoresMat                     shift and go to state 232
    funcInt                        shift and go to state 133
    varsOps                        shift and go to state 138
    exp                            shift and go to state 233
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 154

    (129) eMat -> valoresMat + . p
    (133) eMat -> valoresMat + . valoresMat
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (90) vecVal -> . ID m
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    valoresMat                     shift and go to state 234
    funcInt                        shift and go to state 133
    p                              shift and go to state 235
    varsOps                        shift and go to state 138
    exp                            shift and go to state 106
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 155

    (139) p -> valoresMat * . exp
    (145) p -> valoresMat * . valoresMat
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (90) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    valoresMat                     shift and go to state 236
    funcInt                        shift and go to state 133
    varsOps                        shift and go to state 138
    exp                            shift and go to state 237
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 156

    (130) eMat -> valoresMat - . p
    (134) eMat -> valoresMat - . valoresMat
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (90) vecVal -> . ID m
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    valoresMat                     shift and go to state 238
    funcInt                        shift and go to state 133
    p                              shift and go to state 239
    varsOps                        shift and go to state 138
    exp                            shift and go to state 106
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 157

    (140) p -> valoresMat / . exp
    (146) p -> valoresMat / . valoresMat
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (90) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    valoresMat                     shift and go to state 240
    funcInt                        shift and go to state 133
    varsOps                        shift and go to state 138
    exp                            shift and go to state 241
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 158

    (150) exp -> valoresMat ^ . iSing
    (152) exp -> valoresMat ^ . valoresMat
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (90) vecVal -> . ID m

    -               shift and go to state 85
    +               shift and go to state 84
    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcInt                        shift and go to state 133
    iSing                          shift and go to state 243
    valoresMat                     shift and go to state 242
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 138

state 159

    (190) eq -> eq EQEQ . mayor
    (194) eq -> eq EQEQ . tCompare
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (90) vecVal -> . ID m
    (214) parenBool -> . ( expBool )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    NOT             shift and go to state 105
    STRING          shift and go to state 117
    -               shift and go to state 85
    +               shift and go to state 84

    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    mayor                          shift and go to state 244
    valoresMat                     shift and go to state 78
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 246
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 247
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 92

state 160

    (191) eq -> eq DISTINTO . mayor
    (195) eq -> eq DISTINTO . tCompare
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (90) vecVal -> . ID m
    (214) parenBool -> . ( expBool )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    NOT             shift and go to state 105
    STRING          shift and go to state 117
    -               shift and go to state 85
    +               shift and go to state 84

    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    mayor                          shift and go to state 249
    valoresMat                     shift and go to state 78
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 250
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 247
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 92

state 161

    (186) and -> valoresBool AND . eq
    (188) and -> valoresBool AND . valoresBool
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (90) vecVal -> . ID m
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 123
    (               shift and go to state 119
    AND             reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    ,               reduce using rule 166 (valoresBool -> .)
    )               reduce using rule 166 (valoresBool -> .)
    ;               reduce using rule 166 (valoresBool -> .)
    ]               reduce using rule 166 (valoresBool -> .)
    :               reduce using rule 166 (valoresBool -> .)
    }               reduce using rule 166 (valoresBool -> .)
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 251
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 252
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 231
    parenBool                      shift and go to state 92

state 162

    (181) expBool -> valoresBool OR . and
    (183) expBool -> valoresBool OR . valoresBool
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (90) vecVal -> . ID m
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 123
    (               shift and go to state 119
    AND             reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    ,               reduce using rule 166 (valoresBool -> .)
    )               reduce using rule 166 (valoresBool -> .)
    ;               reduce using rule 166 (valoresBool -> .)
    ]               reduce using rule 166 (valoresBool -> .)
    :               reduce using rule 166 (valoresBool -> .)
    }               reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 253
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 254
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92

state 163

    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 273
    BOOL            shift and go to state 271
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    valoresBool                    shift and go to state 259
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    expBool                        shift and go to state 276
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 268
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 164

    (127) eMat -> eMat + . p
    (131) eMat -> eMat + . valoresMat
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (90) vecVal -> . ID m
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    valoresMat                     shift and go to state 277
    funcInt                        shift and go to state 133
    p                              shift and go to state 278
    varsOps                        shift and go to state 138
    exp                            shift and go to state 106
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 165

    (128) eMat -> eMat - . p
    (132) eMat -> eMat - . valoresMat
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (90) vecVal -> . ID m
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84

    valoresMat                     shift and go to state 279
    funcInt                        shift and go to state 133
    p                              shift and go to state 280
    varsOps                        shift and go to state 138
    exp                            shift and go to state 106
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 166

    (113) valoresMat -> funcInt .
    (203) tCompare -> funcInt .

    )               reduce using rule 113 (valoresMat -> funcInt .)
    +               reduce using rule 113 (valoresMat -> funcInt .)
    -               reduce using rule 113 (valoresMat -> funcInt .)
    *               reduce using rule 113 (valoresMat -> funcInt .)
    /               reduce using rule 113 (valoresMat -> funcInt .)
    %               reduce using rule 113 (valoresMat -> funcInt .)
    ^               reduce using rule 113 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 203 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 203 (tCompare -> funcInt .)
    >               reduce using rule 203 (tCompare -> funcInt .)
    <               reduce using rule 203 (tCompare -> funcInt .)


state 167

    (160) paren -> ( valoresMat . )
    (129) eMat -> valoresMat . + p
    (130) eMat -> valoresMat . - p
    (133) eMat -> valoresMat . + valoresMat
    (134) eMat -> valoresMat . - valoresMat
    (139) p -> valoresMat . * exp
    (140) p -> valoresMat . / exp
    (141) p -> valoresMat . % exp
    (145) p -> valoresMat . * valoresMat
    (146) p -> valoresMat . / valoresMat
    (147) p -> valoresMat . % valoresMat
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 281
    +               shift and go to state 154
    -               shift and go to state 156
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 168

    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 163
    OR              shift and go to state 162
    AND             shift and go to state 161


state 169

    (159) paren -> ( eMat . )
    (127) eMat -> eMat . + p
    (128) eMat -> eMat . - p
    (131) eMat -> eMat . + valoresMat
    (132) eMat -> eMat . - valoresMat
    (199) tCompare -> eMat .

    )               shift and go to state 282
    +               shift and go to state 164
    -               shift and go to state 165
    EQEQ            reduce using rule 199 (tCompare -> eMat .)
    DISTINTO        reduce using rule 199 (tCompare -> eMat .)
    >               reduce using rule 199 (tCompare -> eMat .)
    <               reduce using rule 199 (tCompare -> eMat .)


state 170

    (117) valoresMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 284
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 211
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 285

state 171

    (176) ternario -> ( ternarioMat . )
    (117) valoresMat -> ( ternarioMat . )
    (206) tCompare -> ( ternarioMat . )

    )               shift and go to state 286


state 172

    (177) ternario -> ( ternarioBool . )
    (165) valoresBool -> ( ternarioBool . )
    (205) tCompare -> ( ternarioBool . )

    )               shift and go to state 287


state 173

    (111) valoresMat -> INT .
    (202) tCompare -> INT .

    )               reduce using rule 111 (valoresMat -> INT .)
    +               reduce using rule 111 (valoresMat -> INT .)
    -               reduce using rule 111 (valoresMat -> INT .)
    *               reduce using rule 111 (valoresMat -> INT .)
    /               reduce using rule 111 (valoresMat -> INT .)
    %               reduce using rule 111 (valoresMat -> INT .)
    ^               reduce using rule 111 (valoresMat -> INT .)
    EQEQ            reduce using rule 202 (tCompare -> INT .)
    DISTINTO        reduce using rule 202 (tCompare -> INT .)
    >               reduce using rule 202 (tCompare -> INT .)
    <               reduce using rule 202 (tCompare -> INT .)


state 174

    (112) valoresMat -> FLOAT .
    (204) tCompare -> FLOAT .

    )               reduce using rule 112 (valoresMat -> FLOAT .)
    +               reduce using rule 112 (valoresMat -> FLOAT .)
    -               reduce using rule 112 (valoresMat -> FLOAT .)
    *               reduce using rule 112 (valoresMat -> FLOAT .)
    /               reduce using rule 112 (valoresMat -> FLOAT .)
    %               reduce using rule 112 (valoresMat -> FLOAT .)
    ^               reduce using rule 112 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 204 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 204 (tCompare -> FLOAT .)
    >               reduce using rule 204 (tCompare -> FLOAT .)
    <               reduce using rule 204 (tCompare -> FLOAT .)


state 175

    (115) valoresMat -> varsOps .
    (164) valoresBool -> varsOps .
    (200) tCompare -> varsOps .

    )               reduce using rule 115 (valoresMat -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)
    ?               reduce using rule 164 (valoresBool -> varsOps .)
    OR              reduce using rule 164 (valoresBool -> varsOps .)
    AND             reduce using rule 164 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 200 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 200 (tCompare -> varsOps .)
    >               reduce using rule 200 (tCompare -> varsOps .)
    <               reduce using rule 200 (tCompare -> varsOps .)


state 176

    (179) ternario -> ( ternarioVars . )

    )               shift and go to state 288


state 177

    (114) valoresMat -> varYVals .
    (163) valoresBool -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (201) tCompare -> varYVals .

    )               reduce using rule 114 (valoresMat -> varYVals .)
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)


state 178

    (214) parenBool -> ( expBool . )
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 187
    OR              shift and go to state 186


state 179

    (157) iSing -> + valoresMat .

    ^               reduce using rule 157 (iSing -> + valoresMat .)
    *               reduce using rule 157 (iSing -> + valoresMat .)
    /               reduce using rule 157 (iSing -> + valoresMat .)
    %               reduce using rule 157 (iSing -> + valoresMat .)
    +               reduce using rule 157 (iSing -> + valoresMat .)
    -               reduce using rule 157 (iSing -> + valoresMat .)
    :               reduce using rule 157 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 157 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 157 (iSing -> + valoresMat .)
    >               reduce using rule 157 (iSing -> + valoresMat .)
    <               reduce using rule 157 (iSing -> + valoresMat .)
    ,               reduce using rule 157 (iSing -> + valoresMat .)
    )               reduce using rule 157 (iSing -> + valoresMat .)
    ]               reduce using rule 157 (iSing -> + valoresMat .)
    ;               reduce using rule 157 (iSing -> + valoresMat .)
    AND             reduce using rule 157 (iSing -> + valoresMat .)
    OR              reduce using rule 157 (iSing -> + valoresMat .)
    ?               reduce using rule 157 (iSing -> + valoresMat .)
    }               reduce using rule 157 (iSing -> + valoresMat .)


state 180

    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (117) valoresMat -> ( . ternarioMat )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 290
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 219
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 291
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 220

state 181

    (155) iSing -> + paren .

    ^               reduce using rule 155 (iSing -> + paren .)
    *               reduce using rule 155 (iSing -> + paren .)
    /               reduce using rule 155 (iSing -> + paren .)
    %               reduce using rule 155 (iSing -> + paren .)
    +               reduce using rule 155 (iSing -> + paren .)
    -               reduce using rule 155 (iSing -> + paren .)
    :               reduce using rule 155 (iSing -> + paren .)
    EQEQ            reduce using rule 155 (iSing -> + paren .)
    DISTINTO        reduce using rule 155 (iSing -> + paren .)
    >               reduce using rule 155 (iSing -> + paren .)
    <               reduce using rule 155 (iSing -> + paren .)
    ,               reduce using rule 155 (iSing -> + paren .)
    )               reduce using rule 155 (iSing -> + paren .)
    ]               reduce using rule 155 (iSing -> + paren .)
    ;               reduce using rule 155 (iSing -> + paren .)
    AND             reduce using rule 155 (iSing -> + paren .)
    OR              reduce using rule 155 (iSing -> + paren .)
    ?               reduce using rule 155 (iSing -> + paren .)
    }               reduce using rule 155 (iSing -> + paren .)


state 182

    (111) valoresMat -> INT .

    *               reduce using rule 111 (valoresMat -> INT .)
    /               reduce using rule 111 (valoresMat -> INT .)
    %               reduce using rule 111 (valoresMat -> INT .)
    ^               reduce using rule 111 (valoresMat -> INT .)
    +               reduce using rule 111 (valoresMat -> INT .)
    -               reduce using rule 111 (valoresMat -> INT .)
    ,               reduce using rule 111 (valoresMat -> INT .)
    EQEQ            reduce using rule 111 (valoresMat -> INT .)
    DISTINTO        reduce using rule 111 (valoresMat -> INT .)
    >               reduce using rule 111 (valoresMat -> INT .)
    <               reduce using rule 111 (valoresMat -> INT .)
    )               reduce using rule 111 (valoresMat -> INT .)
    ]               reduce using rule 111 (valoresMat -> INT .)
    ;               reduce using rule 111 (valoresMat -> INT .)
    AND             reduce using rule 111 (valoresMat -> INT .)
    OR              reduce using rule 111 (valoresMat -> INT .)
    ?               reduce using rule 111 (valoresMat -> INT .)
    :               reduce using rule 111 (valoresMat -> INT .)
    }               reduce using rule 111 (valoresMat -> INT .)


state 183

    (114) valoresMat -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS

    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    ,               reduce using rule 114 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 114 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 114 (valoresMat -> varYVals .)
    >               reduce using rule 114 (valoresMat -> varYVals .)
    <               reduce using rule 114 (valoresMat -> varYVals .)
    )               reduce using rule 114 (valoresMat -> varYVals .)
    ]               reduce using rule 114 (valoresMat -> varYVals .)
    ;               reduce using rule 114 (valoresMat -> varYVals .)
    AND             reduce using rule 114 (valoresMat -> varYVals .)
    OR              reduce using rule 114 (valoresMat -> varYVals .)
    ?               reduce using rule 114 (valoresMat -> varYVals .)
    :               reduce using rule 114 (valoresMat -> varYVals .)
    }               reduce using rule 114 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56


state 184

    (156) iSing -> - valoresMat .

    ^               reduce using rule 156 (iSing -> - valoresMat .)
    *               reduce using rule 156 (iSing -> - valoresMat .)
    /               reduce using rule 156 (iSing -> - valoresMat .)
    %               reduce using rule 156 (iSing -> - valoresMat .)
    +               reduce using rule 156 (iSing -> - valoresMat .)
    -               reduce using rule 156 (iSing -> - valoresMat .)
    :               reduce using rule 156 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 156 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 156 (iSing -> - valoresMat .)
    >               reduce using rule 156 (iSing -> - valoresMat .)
    <               reduce using rule 156 (iSing -> - valoresMat .)
    ,               reduce using rule 156 (iSing -> - valoresMat .)
    )               reduce using rule 156 (iSing -> - valoresMat .)
    ]               reduce using rule 156 (iSing -> - valoresMat .)
    ;               reduce using rule 156 (iSing -> - valoresMat .)
    AND             reduce using rule 156 (iSing -> - valoresMat .)
    OR              reduce using rule 156 (iSing -> - valoresMat .)
    ?               reduce using rule 156 (iSing -> - valoresMat .)
    }               reduce using rule 156 (iSing -> - valoresMat .)


state 185

    (154) iSing -> - paren .

    ^               reduce using rule 154 (iSing -> - paren .)
    *               reduce using rule 154 (iSing -> - paren .)
    /               reduce using rule 154 (iSing -> - paren .)
    %               reduce using rule 154 (iSing -> - paren .)
    +               reduce using rule 154 (iSing -> - paren .)
    -               reduce using rule 154 (iSing -> - paren .)
    :               reduce using rule 154 (iSing -> - paren .)
    EQEQ            reduce using rule 154 (iSing -> - paren .)
    DISTINTO        reduce using rule 154 (iSing -> - paren .)
    >               reduce using rule 154 (iSing -> - paren .)
    <               reduce using rule 154 (iSing -> - paren .)
    ,               reduce using rule 154 (iSing -> - paren .)
    )               reduce using rule 154 (iSing -> - paren .)
    ]               reduce using rule 154 (iSing -> - paren .)
    ;               reduce using rule 154 (iSing -> - paren .)
    AND             reduce using rule 154 (iSing -> - paren .)
    OR              reduce using rule 154 (iSing -> - paren .)
    ?               reduce using rule 154 (iSing -> - paren .)
    }               reduce using rule 154 (iSing -> - paren .)


state 186

    (180) expBool -> expBool OR . and
    (182) expBool -> expBool OR . valoresBool
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (90) vecVal -> . ID m
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 123
    (               shift and go to state 119
    AND             reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    ,               reduce using rule 166 (valoresBool -> .)
    )               reduce using rule 166 (valoresBool -> .)
    ;               reduce using rule 166 (valoresBool -> .)
    ]               reduce using rule 166 (valoresBool -> .)
    :               reduce using rule 166 (valoresBool -> .)
    }               reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 292
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 293
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92

state 187

    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 273
    BOOL            shift and go to state 271
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 259
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 294
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 276
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 296
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 188

    (193) eq -> tCompare DISTINTO . mayor
    (197) eq -> tCompare DISTINTO . tCompare
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (90) vecVal -> . ID m
    (214) parenBool -> . ( expBool )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    NOT             shift and go to state 105
    STRING          shift and go to state 117
    -               shift and go to state 85
    +               shift and go to state 84

    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    mayor                          shift and go to state 297
    valoresMat                     shift and go to state 78
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 298
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 247
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 92

state 189

    (192) eq -> tCompare EQEQ . mayor
    (196) eq -> tCompare EQEQ . tCompare
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (90) vecVal -> . ID m
    (214) parenBool -> . ( expBool )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    (               shift and go to state 245
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    NOT             shift and go to state 105
    STRING          shift and go to state 117
    -               shift and go to state 85
    +               shift and go to state 84

    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    mayor                          shift and go to state 299
    valoresMat                     shift and go to state 78
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 300
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 247
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    parenBool                      shift and go to state 92

state 190

    (209) menor -> tCompare < . tCompare
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (90) vecVal -> . ID m
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    (               shift and go to state 301
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    -               shift and go to state 85
    +               shift and go to state 84

    eMat                           shift and go to state 118
    funcInt                        shift and go to state 115
    p                              shift and go to state 102
    tCompare                       shift and go to state 302
    varsOps                        shift and go to state 247
    valoresMat                     shift and go to state 78
    paren                          shift and go to state 94
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 191

    (207) mayor -> tCompare > . tCompare
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (90) vecVal -> . ID m
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    (               shift and go to state 301
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    -               shift and go to state 85
    +               shift and go to state 84

    eMat                           shift and go to state 118
    funcInt                        shift and go to state 115
    p                              shift and go to state 102
    tCompare                       shift and go to state 303
    varsOps                        shift and go to state 247
    valoresMat                     shift and go to state 78
    paren                          shift and go to state 94
    exp                            shift and go to state 106
    varYVals                       shift and go to state 248
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 91

state 192

    (49) elem -> valores . , elem
    (50) elem -> valores .

    ,               shift and go to state 304
    ]               reduce using rule 50 (elem -> valores .)


state 193

    (48) vec -> [ elem . ]

    ]               shift and go to state 305


state 194

    (65) atributos -> ID . . valoresCampos
    (66) valoresCampos -> . varYVals
    (67) valoresCampos -> . END
    (68) valoresCampos -> . BEGIN
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (90) vecVal -> . ID m

    END             shift and go to state 307
    BEGIN           shift and go to state 306
    ID              shift and go to state 46

    varYVals                       shift and go to state 309
    vecVal                         shift and go to state 8
    valoresCampos                  shift and go to state 308

state 195

    (43) funcBool -> COLINEALES ( valores , . valores )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 310
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 196

    (138) p -> p % . exp
    (144) p -> p % . valoresMat
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (90) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    exp                            shift and go to state 312
    funcInt                        shift and go to state 133
    iSing                          shift and go to state 91
    valoresMat                     shift and go to state 311
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 138

state 197

    (136) p -> p * . exp
    (142) p -> p * . valoresMat
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (90) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    exp                            shift and go to state 314
    funcInt                        shift and go to state 133
    iSing                          shift and go to state 91
    valoresMat                     shift and go to state 313
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 138

state 198

    (137) p -> p / . exp
    (143) p -> p / . valoresMat
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (90) vecVal -> . ID m

    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    -               shift and go to state 85
    +               shift and go to state 84
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    exp                            shift and go to state 316
    funcInt                        shift and go to state 133
    iSing                          shift and go to state 91
    valoresMat                     shift and go to state 315
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 138

state 199

    (165) valoresBool -> ( . ternarioBool )
    (214) parenBool -> ( . expBool )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 123
    (               shift and go to state 119
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 118
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 318
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 319

state 200

    (211) not -> NOT not .

    EQEQ            reduce using rule 211 (not -> NOT not .)
    DISTINTO        reduce using rule 211 (not -> NOT not .)
    AND             reduce using rule 211 (not -> NOT not .)
    )               reduce using rule 211 (not -> NOT not .)
    ?               reduce using rule 211 (not -> NOT not .)
    OR              reduce using rule 211 (not -> NOT not .)
    ,               reduce using rule 211 (not -> NOT not .)
    ;               reduce using rule 211 (not -> NOT not .)
    ]               reduce using rule 211 (not -> NOT not .)
    :               reduce using rule 211 (not -> NOT not .)
    }               reduce using rule 211 (not -> NOT not .)


state 201

    (164) valoresBool -> varsOps .

    EQEQ            reduce using rule 164 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 164 (valoresBool -> varsOps .)
    AND             reduce using rule 164 (valoresBool -> varsOps .)
    OR              reduce using rule 164 (valoresBool -> varsOps .)
    ?               reduce using rule 164 (valoresBool -> varsOps .)
    ,               reduce using rule 164 (valoresBool -> varsOps .)
    )               reduce using rule 164 (valoresBool -> varsOps .)
    ;               reduce using rule 164 (valoresBool -> varsOps .)
    ]               reduce using rule 164 (valoresBool -> varsOps .)
    :               reduce using rule 164 (valoresBool -> varsOps .)
    }               reduce using rule 164 (valoresBool -> varsOps .)


state 202

    (163) valoresBool -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS

    EQEQ            reduce using rule 163 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    ,               reduce using rule 163 (valoresBool -> varYVals .)
    )               reduce using rule 163 (valoresBool -> varYVals .)
    ;               reduce using rule 163 (valoresBool -> varYVals .)
    ]               reduce using rule 163 (valoresBool -> varYVals .)
    :               reduce using rule 163 (valoresBool -> varYVals .)
    }               reduce using rule 163 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56


state 203

    (212) not -> NOT valoresBool .

    EQEQ            reduce using rule 212 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 212 (not -> NOT valoresBool .)
    AND             reduce using rule 212 (not -> NOT valoresBool .)
    )               reduce using rule 212 (not -> NOT valoresBool .)
    ?               reduce using rule 212 (not -> NOT valoresBool .)
    OR              reduce using rule 212 (not -> NOT valoresBool .)
    ,               reduce using rule 212 (not -> NOT valoresBool .)
    ;               reduce using rule 212 (not -> NOT valoresBool .)
    ]               reduce using rule 212 (not -> NOT valoresBool .)
    :               reduce using rule 212 (not -> NOT valoresBool .)
    }               reduce using rule 212 (not -> NOT valoresBool .)


state 204

    (149) exp -> exp ^ . iSing
    (151) exp -> exp ^ . valoresMat
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (90) vecVal -> . ID m

    -               shift and go to state 85
    +               shift and go to state 84
    INT             shift and go to state 182
    FLOAT           shift and go to state 137
    STRING          shift and go to state 117
    (               shift and go to state 135
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30

    funcInt                        shift and go to state 133
    iSing                          shift and go to state 321
    valoresMat                     shift and go to state 320
    paren                          shift and go to state 94
    varYVals                       shift and go to state 183
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 138

state 205

    (97) reg -> { campos . }

    }               shift and go to state 322


state 206

    (98) campos -> ID . : valores , campos
    (99) campos -> ID . : valores

    :               shift and go to state 323


state 207

    (25) loop -> WHILE ( valores ) .

    {               reduce using rule 25 (loop -> WHILE ( valores ) .)
    IF              reduce using rule 25 (loop -> WHILE ( valores ) .)
    COMMENT         reduce using rule 25 (loop -> WHILE ( valores ) .)
    DO              reduce using rule 25 (loop -> WHILE ( valores ) .)
    WHILE           reduce using rule 25 (loop -> WHILE ( valores ) .)
    FOR             reduce using rule 25 (loop -> WHILE ( valores ) .)
    RETURN          reduce using rule 25 (loop -> WHILE ( valores ) .)
    ;               reduce using rule 25 (loop -> WHILE ( valores ) .)
    MENOSMENOS      reduce using rule 25 (loop -> WHILE ( valores ) .)
    MASMAS          reduce using rule 25 (loop -> WHILE ( valores ) .)
    ID              reduce using rule 25 (loop -> WHILE ( valores ) .)
    PRINT           reduce using rule 25 (loop -> WHILE ( valores ) .)
    MULTIESCALAR    reduce using rule 25 (loop -> WHILE ( valores ) .)
    LENGTH          reduce using rule 25 (loop -> WHILE ( valores ) .)
    CAPITALIZAR     reduce using rule 25 (loop -> WHILE ( valores ) .)
    COLINEALES      reduce using rule 25 (loop -> WHILE ( valores ) .)


state 208

    (44) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 44 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 44 (funcVoid -> PRINT ( valores ) .)


state 209

    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 324
    OR              shift and go to state 162
    AND             shift and go to state 161


state 210

    (206) tCompare -> ( ternarioMat . )
    (117) valoresMat -> ( ternarioMat . )

    )               shift and go to state 325


state 211

    (165) valoresBool -> ( ternarioBool . )
    (205) tCompare -> ( ternarioBool . )

    )               shift and go to state 326


state 212

    (214) parenBool -> ( expBool . )
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 327
    OR              shift and go to state 186


state 213

    (5) lAbierta -> IF ( cosaBooleana ) . linea
    (6) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (7) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . { g }
    (12) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (13) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 331
    COMMENT         shift and go to state 9
    IF              shift and go to state 329
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 330
    lAbierta                       shift and go to state 29
    linea                          shift and go to state 328
    varYVals                       shift and go to state 25
    loop                           shift and go to state 332

state 214

    (26) loop -> FOR ( primParam ; . valores ; tercerParam )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 333
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 215

    (41) funcInt -> LENGTH ( valores ) .

    )               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    EQEQ            reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    ;               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    ,               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 41 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 41 (funcInt -> LENGTH ( valores ) .)


state 216

    (110) varAsig -> ID . ID = . valoresAsig
    (104) valoresAsig -> . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    valoresAsig                    shift and go to state 334
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 142
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 217

    (95) m -> [ eMat ] . m
    (96) m -> [ eMat ] .
    (91) m -> . [ INT ]
    (92) m -> . [ INT ] m
    (93) m -> . [ varYVals ] m
    (94) m -> . [ varYVals ]
    (95) m -> . [ eMat ] m
    (96) m -> . [ eMat ]

    .               reduce using rule 96 (m -> [ eMat ] .)
    ;               reduce using rule 96 (m -> [ eMat ] .)
    ,               reduce using rule 96 (m -> [ eMat ] .)
    +               reduce using rule 96 (m -> [ eMat ] .)
    -               reduce using rule 96 (m -> [ eMat ] .)
    *               reduce using rule 96 (m -> [ eMat ] .)
    /               reduce using rule 96 (m -> [ eMat ] .)
    %               reduce using rule 96 (m -> [ eMat ] .)
    ^               reduce using rule 96 (m -> [ eMat ] .)
    OR              reduce using rule 96 (m -> [ eMat ] .)
    AND             reduce using rule 96 (m -> [ eMat ] .)
    ?               reduce using rule 96 (m -> [ eMat ] .)
    EQEQ            reduce using rule 96 (m -> [ eMat ] .)
    DISTINTO        reduce using rule 96 (m -> [ eMat ] .)
    >               reduce using rule 96 (m -> [ eMat ] .)
    <               reduce using rule 96 (m -> [ eMat ] .)
    )               reduce using rule 96 (m -> [ eMat ] .)
    ]               reduce using rule 96 (m -> [ eMat ] .)
    :               reduce using rule 96 (m -> [ eMat ] .)
    }               reduce using rule 96 (m -> [ eMat ] .)
    MASMAS          reduce using rule 96 (m -> [ eMat ] .)
    MENOSMENOS      reduce using rule 96 (m -> [ eMat ] .)
    MULEQ           reduce using rule 96 (m -> [ eMat ] .)
    DIVEQ           reduce using rule 96 (m -> [ eMat ] .)
    MASEQ           reduce using rule 96 (m -> [ eMat ] .)
    MENOSEQ         reduce using rule 96 (m -> [ eMat ] .)
    =               reduce using rule 96 (m -> [ eMat ] .)
    [               shift and go to state 52

    m                              shift and go to state 335

state 218

    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 336
    OR              shift and go to state 162
    AND             shift and go to state 161


state 219

    (117) valoresMat -> ( ternarioMat . )

    )               shift and go to state 337


state 220

    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    ?               shift and go to state 338
    OR              shift and go to state 186


state 221

    (91) m -> [ INT ] .
    (92) m -> [ INT ] . m
    (91) m -> . [ INT ]
    (92) m -> . [ INT ] m
    (93) m -> . [ varYVals ] m
    (94) m -> . [ varYVals ]
    (95) m -> . [ eMat ] m
    (96) m -> . [ eMat ]

    .               reduce using rule 91 (m -> [ INT ] .)
    ;               reduce using rule 91 (m -> [ INT ] .)
    ,               reduce using rule 91 (m -> [ INT ] .)
    +               reduce using rule 91 (m -> [ INT ] .)
    -               reduce using rule 91 (m -> [ INT ] .)
    *               reduce using rule 91 (m -> [ INT ] .)
    /               reduce using rule 91 (m -> [ INT ] .)
    %               reduce using rule 91 (m -> [ INT ] .)
    ^               reduce using rule 91 (m -> [ INT ] .)
    OR              reduce using rule 91 (m -> [ INT ] .)
    AND             reduce using rule 91 (m -> [ INT ] .)
    ?               reduce using rule 91 (m -> [ INT ] .)
    EQEQ            reduce using rule 91 (m -> [ INT ] .)
    DISTINTO        reduce using rule 91 (m -> [ INT ] .)
    >               reduce using rule 91 (m -> [ INT ] .)
    <               reduce using rule 91 (m -> [ INT ] .)
    )               reduce using rule 91 (m -> [ INT ] .)
    ]               reduce using rule 91 (m -> [ INT ] .)
    :               reduce using rule 91 (m -> [ INT ] .)
    }               reduce using rule 91 (m -> [ INT ] .)
    MASMAS          reduce using rule 91 (m -> [ INT ] .)
    MENOSMENOS      reduce using rule 91 (m -> [ INT ] .)
    MULEQ           reduce using rule 91 (m -> [ INT ] .)
    DIVEQ           reduce using rule 91 (m -> [ INT ] .)
    MASEQ           reduce using rule 91 (m -> [ INT ] .)
    MENOSEQ         reduce using rule 91 (m -> [ INT ] .)
    =               reduce using rule 91 (m -> [ INT ] .)
    [               shift and go to state 52

    m                              shift and go to state 339

state 222

    (93) m -> [ varYVals ] . m
    (94) m -> [ varYVals ] .
    (91) m -> . [ INT ]
    (92) m -> . [ INT ] m
    (93) m -> . [ varYVals ] m
    (94) m -> . [ varYVals ]
    (95) m -> . [ eMat ] m
    (96) m -> . [ eMat ]

    .               reduce using rule 94 (m -> [ varYVals ] .)
    ;               reduce using rule 94 (m -> [ varYVals ] .)
    ,               reduce using rule 94 (m -> [ varYVals ] .)
    +               reduce using rule 94 (m -> [ varYVals ] .)
    -               reduce using rule 94 (m -> [ varYVals ] .)
    *               reduce using rule 94 (m -> [ varYVals ] .)
    /               reduce using rule 94 (m -> [ varYVals ] .)
    %               reduce using rule 94 (m -> [ varYVals ] .)
    ^               reduce using rule 94 (m -> [ varYVals ] .)
    OR              reduce using rule 94 (m -> [ varYVals ] .)
    AND             reduce using rule 94 (m -> [ varYVals ] .)
    ?               reduce using rule 94 (m -> [ varYVals ] .)
    EQEQ            reduce using rule 94 (m -> [ varYVals ] .)
    DISTINTO        reduce using rule 94 (m -> [ varYVals ] .)
    >               reduce using rule 94 (m -> [ varYVals ] .)
    <               reduce using rule 94 (m -> [ varYVals ] .)
    )               reduce using rule 94 (m -> [ varYVals ] .)
    ]               reduce using rule 94 (m -> [ varYVals ] .)
    :               reduce using rule 94 (m -> [ varYVals ] .)
    }               reduce using rule 94 (m -> [ varYVals ] .)
    MASMAS          reduce using rule 94 (m -> [ varYVals ] .)
    MENOSMENOS      reduce using rule 94 (m -> [ varYVals ] .)
    MULEQ           reduce using rule 94 (m -> [ varYVals ] .)
    DIVEQ           reduce using rule 94 (m -> [ varYVals ] .)
    MASEQ           reduce using rule 94 (m -> [ varYVals ] .)
    MENOSEQ         reduce using rule 94 (m -> [ varYVals ] .)
    =               reduce using rule 94 (m -> [ varYVals ] .)
    [               shift and go to state 52

    m                              shift and go to state 340

state 223

    (40) funcInt -> MULTIESCALAR ( valores , . valores param )
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 341
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 224

    (42) funcString -> CAPITALIZAR ( valores ) .

    ;               reduce using rule 42 (funcString -> CAPITALIZAR ( valores ) .)
    )               reduce using rule 42 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 42 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 42 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 42 (funcString -> CAPITALIZAR ( valores ) .)


state 225

    (16) lCerrada -> loop { g } .

    IF              reduce using rule 16 (lCerrada -> loop { g } .)
    COMMENT         reduce using rule 16 (lCerrada -> loop { g } .)
    DO              reduce using rule 16 (lCerrada -> loop { g } .)
    WHILE           reduce using rule 16 (lCerrada -> loop { g } .)
    FOR             reduce using rule 16 (lCerrada -> loop { g } .)
    RETURN          reduce using rule 16 (lCerrada -> loop { g } .)
    ;               reduce using rule 16 (lCerrada -> loop { g } .)
    MENOSMENOS      reduce using rule 16 (lCerrada -> loop { g } .)
    MASMAS          reduce using rule 16 (lCerrada -> loop { g } .)
    ID              reduce using rule 16 (lCerrada -> loop { g } .)
    PRINT           reduce using rule 16 (lCerrada -> loop { g } .)
    MULTIESCALAR    reduce using rule 16 (lCerrada -> loop { g } .)
    LENGTH          reduce using rule 16 (lCerrada -> loop { g } .)
    CAPITALIZAR     reduce using rule 16 (lCerrada -> loop { g } .)
    COLINEALES      reduce using rule 16 (lCerrada -> loop { g } .)
    }               reduce using rule 16 (lCerrada -> loop { g } .)
    $end            reduce using rule 16 (lCerrada -> loop { g } .)
    ELSE            reduce using rule 16 (lCerrada -> loop { g } .)


state 226

    (12) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (13) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 343
    COMMENT         shift and go to state 9
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 21
    sentencia                      shift and go to state 10
    funcString                     shift and go to state 23
    funcVoid                       shift and go to state 15
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 342
    funcInt                        shift and go to state 5
    varsOps                        shift and go to state 14
    func                           shift and go to state 19
    funcBool                       shift and go to state 3
    varYVals                       shift and go to state 25
    vecVal                         shift and go to state 8
    loop                           shift and go to state 36

state 227

    (19) lCerrada -> DO lCerrada WHILE ( valores . ) ;

    )               shift and go to state 344


state 228

    (18) lCerrada -> DO { g } WHILE . ( valores ) ;

    (               shift and go to state 345


state 229

    (185) and -> and AND eq .
    (190) eq -> eq . EQEQ mayor
    (191) eq -> eq . DISTINTO mayor
    (194) eq -> eq . EQEQ tCompare
    (195) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 185 (and -> and AND eq .)
    OR              reduce using rule 185 (and -> and AND eq .)
    ?               reduce using rule 185 (and -> and AND eq .)
    ,               reduce using rule 185 (and -> and AND eq .)
    )               reduce using rule 185 (and -> and AND eq .)
    ;               reduce using rule 185 (and -> and AND eq .)
    ]               reduce using rule 185 (and -> and AND eq .)
    :               reduce using rule 185 (and -> and AND eq .)
    }               reduce using rule 185 (and -> and AND eq .)
    EQEQ            shift and go to state 159
    DISTINTO        shift and go to state 160


state 230

    (187) and -> and AND valoresBool .

    AND             reduce using rule 187 (and -> and AND valoresBool .)
    OR              reduce using rule 187 (and -> and AND valoresBool .)
    ?               reduce using rule 187 (and -> and AND valoresBool .)
    ,               reduce using rule 187 (and -> and AND valoresBool .)
    )               reduce using rule 187 (and -> and AND valoresBool .)
    ;               reduce using rule 187 (and -> and AND valoresBool .)
    ]               reduce using rule 187 (and -> and AND valoresBool .)
    :               reduce using rule 187 (and -> and AND valoresBool .)
    }               reduce using rule 187 (and -> and AND valoresBool .)


state 231

    (163) valoresBool -> varYVals .
    (201) tCompare -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (114) valoresMat -> varYVals .

    AND             reduce using rule 163 (valoresBool -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    ,               reduce using rule 163 (valoresBool -> varYVals .)
    )               reduce using rule 163 (valoresBool -> varYVals .)
    ;               reduce using rule 163 (valoresBool -> varYVals .)
    ]               reduce using rule 163 (valoresBool -> varYVals .)
    :               reduce using rule 163 (valoresBool -> varYVals .)
    }               reduce using rule 163 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)


state 232

    (147) p -> valoresMat % valoresMat .
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 147 (p -> valoresMat % valoresMat .)
    /               reduce using rule 147 (p -> valoresMat % valoresMat .)
    %               reduce using rule 147 (p -> valoresMat % valoresMat .)
    +               reduce using rule 147 (p -> valoresMat % valoresMat .)
    -               reduce using rule 147 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 147 (p -> valoresMat % valoresMat .)
    )               reduce using rule 147 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 147 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 147 (p -> valoresMat % valoresMat .)
    >               reduce using rule 147 (p -> valoresMat % valoresMat .)
    <               reduce using rule 147 (p -> valoresMat % valoresMat .)
    :               reduce using rule 147 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 147 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 147 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 147 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 147 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 147 (p -> valoresMat % valoresMat .)
    }               reduce using rule 147 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 158


state 233

    (141) p -> valoresMat % exp .
    (149) exp -> exp . ^ iSing
    (151) exp -> exp . ^ valoresMat

    *               reduce using rule 141 (p -> valoresMat % exp .)
    /               reduce using rule 141 (p -> valoresMat % exp .)
    %               reduce using rule 141 (p -> valoresMat % exp .)
    +               reduce using rule 141 (p -> valoresMat % exp .)
    -               reduce using rule 141 (p -> valoresMat % exp .)
    ;               reduce using rule 141 (p -> valoresMat % exp .)
    )               reduce using rule 141 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 141 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 141 (p -> valoresMat % exp .)
    >               reduce using rule 141 (p -> valoresMat % exp .)
    <               reduce using rule 141 (p -> valoresMat % exp .)
    :               reduce using rule 141 (p -> valoresMat % exp .)
    AND             reduce using rule 141 (p -> valoresMat % exp .)
    OR              reduce using rule 141 (p -> valoresMat % exp .)
    ?               reduce using rule 141 (p -> valoresMat % exp .)
    ,               reduce using rule 141 (p -> valoresMat % exp .)
    ]               reduce using rule 141 (p -> valoresMat % exp .)
    }               reduce using rule 141 (p -> valoresMat % exp .)
    ^               shift and go to state 204


state 234

    (133) eMat -> valoresMat + valoresMat .
    (139) p -> valoresMat . * exp
    (140) p -> valoresMat . / exp
    (141) p -> valoresMat . % exp
    (145) p -> valoresMat . * valoresMat
    (146) p -> valoresMat . / valoresMat
    (147) p -> valoresMat . % valoresMat
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    )               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 133 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 235

    (129) eMat -> valoresMat + p .
    (136) p -> p . * exp
    (137) p -> p . / exp
    (138) p -> p . % exp
    (142) p -> p . * valoresMat
    (143) p -> p . / valoresMat
    (144) p -> p . % valoresMat

    +               reduce using rule 129 (eMat -> valoresMat + p .)
    -               reduce using rule 129 (eMat -> valoresMat + p .)
    :               reduce using rule 129 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 129 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 129 (eMat -> valoresMat + p .)
    >               reduce using rule 129 (eMat -> valoresMat + p .)
    <               reduce using rule 129 (eMat -> valoresMat + p .)
    ,               reduce using rule 129 (eMat -> valoresMat + p .)
    )               reduce using rule 129 (eMat -> valoresMat + p .)
    ;               reduce using rule 129 (eMat -> valoresMat + p .)
    ]               reduce using rule 129 (eMat -> valoresMat + p .)
    }               reduce using rule 129 (eMat -> valoresMat + p .)
    AND             reduce using rule 129 (eMat -> valoresMat + p .)
    OR              reduce using rule 129 (eMat -> valoresMat + p .)
    ?               reduce using rule 129 (eMat -> valoresMat + p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 236

    (145) p -> valoresMat * valoresMat .
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 145 (p -> valoresMat * valoresMat .)
    /               reduce using rule 145 (p -> valoresMat * valoresMat .)
    %               reduce using rule 145 (p -> valoresMat * valoresMat .)
    +               reduce using rule 145 (p -> valoresMat * valoresMat .)
    -               reduce using rule 145 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 145 (p -> valoresMat * valoresMat .)
    )               reduce using rule 145 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 145 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 145 (p -> valoresMat * valoresMat .)
    >               reduce using rule 145 (p -> valoresMat * valoresMat .)
    <               reduce using rule 145 (p -> valoresMat * valoresMat .)
    :               reduce using rule 145 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 145 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 145 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 145 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 145 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 145 (p -> valoresMat * valoresMat .)
    }               reduce using rule 145 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 158


state 237

    (139) p -> valoresMat * exp .
    (149) exp -> exp . ^ iSing
    (151) exp -> exp . ^ valoresMat

    *               reduce using rule 139 (p -> valoresMat * exp .)
    /               reduce using rule 139 (p -> valoresMat * exp .)
    %               reduce using rule 139 (p -> valoresMat * exp .)
    +               reduce using rule 139 (p -> valoresMat * exp .)
    -               reduce using rule 139 (p -> valoresMat * exp .)
    ;               reduce using rule 139 (p -> valoresMat * exp .)
    )               reduce using rule 139 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 139 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 139 (p -> valoresMat * exp .)
    >               reduce using rule 139 (p -> valoresMat * exp .)
    <               reduce using rule 139 (p -> valoresMat * exp .)
    :               reduce using rule 139 (p -> valoresMat * exp .)
    AND             reduce using rule 139 (p -> valoresMat * exp .)
    OR              reduce using rule 139 (p -> valoresMat * exp .)
    ?               reduce using rule 139 (p -> valoresMat * exp .)
    ,               reduce using rule 139 (p -> valoresMat * exp .)
    ]               reduce using rule 139 (p -> valoresMat * exp .)
    }               reduce using rule 139 (p -> valoresMat * exp .)
    ^               shift and go to state 204


state 238

    (134) eMat -> valoresMat - valoresMat .
    (139) p -> valoresMat . * exp
    (140) p -> valoresMat . / exp
    (141) p -> valoresMat . % exp
    (145) p -> valoresMat . * valoresMat
    (146) p -> valoresMat . / valoresMat
    (147) p -> valoresMat . % valoresMat
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    )               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 134 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 239

    (130) eMat -> valoresMat - p .
    (136) p -> p . * exp
    (137) p -> p . / exp
    (138) p -> p . % exp
    (142) p -> p . * valoresMat
    (143) p -> p . / valoresMat
    (144) p -> p . % valoresMat

    +               reduce using rule 130 (eMat -> valoresMat - p .)
    -               reduce using rule 130 (eMat -> valoresMat - p .)
    :               reduce using rule 130 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 130 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 130 (eMat -> valoresMat - p .)
    >               reduce using rule 130 (eMat -> valoresMat - p .)
    <               reduce using rule 130 (eMat -> valoresMat - p .)
    ,               reduce using rule 130 (eMat -> valoresMat - p .)
    )               reduce using rule 130 (eMat -> valoresMat - p .)
    ;               reduce using rule 130 (eMat -> valoresMat - p .)
    ]               reduce using rule 130 (eMat -> valoresMat - p .)
    }               reduce using rule 130 (eMat -> valoresMat - p .)
    AND             reduce using rule 130 (eMat -> valoresMat - p .)
    OR              reduce using rule 130 (eMat -> valoresMat - p .)
    ?               reduce using rule 130 (eMat -> valoresMat - p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 240

    (146) p -> valoresMat / valoresMat .
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 146 (p -> valoresMat / valoresMat .)
    /               reduce using rule 146 (p -> valoresMat / valoresMat .)
    %               reduce using rule 146 (p -> valoresMat / valoresMat .)
    +               reduce using rule 146 (p -> valoresMat / valoresMat .)
    -               reduce using rule 146 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 146 (p -> valoresMat / valoresMat .)
    )               reduce using rule 146 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 146 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 146 (p -> valoresMat / valoresMat .)
    >               reduce using rule 146 (p -> valoresMat / valoresMat .)
    <               reduce using rule 146 (p -> valoresMat / valoresMat .)
    :               reduce using rule 146 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 146 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 146 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 146 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 146 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 146 (p -> valoresMat / valoresMat .)
    }               reduce using rule 146 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 158


state 241

    (140) p -> valoresMat / exp .
    (149) exp -> exp . ^ iSing
    (151) exp -> exp . ^ valoresMat

    *               reduce using rule 140 (p -> valoresMat / exp .)
    /               reduce using rule 140 (p -> valoresMat / exp .)
    %               reduce using rule 140 (p -> valoresMat / exp .)
    +               reduce using rule 140 (p -> valoresMat / exp .)
    -               reduce using rule 140 (p -> valoresMat / exp .)
    ;               reduce using rule 140 (p -> valoresMat / exp .)
    )               reduce using rule 140 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 140 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 140 (p -> valoresMat / exp .)
    >               reduce using rule 140 (p -> valoresMat / exp .)
    <               reduce using rule 140 (p -> valoresMat / exp .)
    :               reduce using rule 140 (p -> valoresMat / exp .)
    AND             reduce using rule 140 (p -> valoresMat / exp .)
    OR              reduce using rule 140 (p -> valoresMat / exp .)
    ?               reduce using rule 140 (p -> valoresMat / exp .)
    ,               reduce using rule 140 (p -> valoresMat / exp .)
    ]               reduce using rule 140 (p -> valoresMat / exp .)
    }               reduce using rule 140 (p -> valoresMat / exp .)
    ^               shift and go to state 204


state 242

    (152) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 152 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 152 (exp -> valoresMat ^ valoresMat .)


state 243

    (150) exp -> valoresMat ^ iSing .

    ^               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 150 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 150 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 150 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 150 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 150 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 150 (exp -> valoresMat ^ iSing .)


state 244

    (190) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 190 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 190 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 190 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 190 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 190 (eq -> eq EQEQ mayor .)
    :               reduce using rule 190 (eq -> eq EQEQ mayor .)
    )               reduce using rule 190 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 190 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 190 (eq -> eq EQEQ mayor .)
    }               reduce using rule 190 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 190 (eq -> eq EQEQ mayor .)


state 245

    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (117) valoresMat -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (43) funcBool -> . COLINEALES ( valores , valores )
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 209
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 210
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 346
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 212

state 246

    (194) eq -> eq EQEQ tCompare .
    (207) mayor -> tCompare . > tCompare
    (209) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 194 (eq -> eq EQEQ tCompare .)
    DISTINTO        reduce using rule 194 (eq -> eq EQEQ tCompare .)
    AND             reduce using rule 194 (eq -> eq EQEQ tCompare .)
    ?               reduce using rule 194 (eq -> eq EQEQ tCompare .)
    OR              reduce using rule 194 (eq -> eq EQEQ tCompare .)
    :               reduce using rule 194 (eq -> eq EQEQ tCompare .)
    )               reduce using rule 194 (eq -> eq EQEQ tCompare .)
    ;               reduce using rule 194 (eq -> eq EQEQ tCompare .)
    ,               reduce using rule 194 (eq -> eq EQEQ tCompare .)
    }               reduce using rule 194 (eq -> eq EQEQ tCompare .)
    ]               reduce using rule 194 (eq -> eq EQEQ tCompare .)
    >               shift and go to state 191
    <               shift and go to state 190


state 247

    (200) tCompare -> varsOps .
    (115) valoresMat -> varsOps .

    >               reduce using rule 200 (tCompare -> varsOps .)
    <               reduce using rule 200 (tCompare -> varsOps .)
    EQEQ            reduce using rule 200 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 200 (tCompare -> varsOps .)
    AND             reduce using rule 200 (tCompare -> varsOps .)
    OR              reduce using rule 200 (tCompare -> varsOps .)
    ?               reduce using rule 200 (tCompare -> varsOps .)
    ,               reduce using rule 200 (tCompare -> varsOps .)
    )               reduce using rule 200 (tCompare -> varsOps .)
    ;               reduce using rule 200 (tCompare -> varsOps .)
    ]               reduce using rule 200 (tCompare -> varsOps .)
    :               reduce using rule 200 (tCompare -> varsOps .)
    }               reduce using rule 200 (tCompare -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)


state 248

    (201) tCompare -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (114) valoresMat -> varYVals .

    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    AND             reduce using rule 201 (tCompare -> varYVals .)
    OR              reduce using rule 201 (tCompare -> varYVals .)
    ?               reduce using rule 201 (tCompare -> varYVals .)
    ,               reduce using rule 201 (tCompare -> varYVals .)
    )               reduce using rule 201 (tCompare -> varYVals .)
    ;               reduce using rule 201 (tCompare -> varYVals .)
    ]               reduce using rule 201 (tCompare -> varYVals .)
    :               reduce using rule 201 (tCompare -> varYVals .)
    }               reduce using rule 201 (tCompare -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)


state 249

    (191) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 191 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 191 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 191 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 191 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 191 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 191 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 191 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 191 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 191 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 191 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 191 (eq -> eq DISTINTO mayor .)


state 250

    (195) eq -> eq DISTINTO tCompare .
    (207) mayor -> tCompare . > tCompare
    (209) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    DISTINTO        reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    AND             reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    ?               reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    OR              reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    :               reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    )               reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    ;               reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    ,               reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    }               reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    ]               reduce using rule 195 (eq -> eq DISTINTO tCompare .)
    >               shift and go to state 191
    <               shift and go to state 190


state 251

    (186) and -> valoresBool AND eq .
    (190) eq -> eq . EQEQ mayor
    (191) eq -> eq . DISTINTO mayor
    (194) eq -> eq . EQEQ tCompare
    (195) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 186 (and -> valoresBool AND eq .)
    OR              reduce using rule 186 (and -> valoresBool AND eq .)
    ?               reduce using rule 186 (and -> valoresBool AND eq .)
    ,               reduce using rule 186 (and -> valoresBool AND eq .)
    )               reduce using rule 186 (and -> valoresBool AND eq .)
    ;               reduce using rule 186 (and -> valoresBool AND eq .)
    ]               reduce using rule 186 (and -> valoresBool AND eq .)
    :               reduce using rule 186 (and -> valoresBool AND eq .)
    }               reduce using rule 186 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 159
    DISTINTO        shift and go to state 160


state 252

    (188) and -> valoresBool AND valoresBool .

    AND             reduce using rule 188 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 188 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 188 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 188 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 188 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 188 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 188 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 188 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 188 (and -> valoresBool AND valoresBool .)


state 253

    (181) expBool -> valoresBool OR and .
    (185) and -> and . AND eq
    (187) and -> and . AND valoresBool

    OR              reduce using rule 181 (expBool -> valoresBool OR and .)
    ?               reduce using rule 181 (expBool -> valoresBool OR and .)
    )               reduce using rule 181 (expBool -> valoresBool OR and .)
    ,               reduce using rule 181 (expBool -> valoresBool OR and .)
    ;               reduce using rule 181 (expBool -> valoresBool OR and .)
    ]               reduce using rule 181 (expBool -> valoresBool OR and .)
    :               reduce using rule 181 (expBool -> valoresBool OR and .)
    }               reduce using rule 181 (expBool -> valoresBool OR and .)
    AND             shift and go to state 152


state 254

    (183) expBool -> valoresBool OR valoresBool .
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    OR              reduce using rule 183 (expBool -> valoresBool OR valoresBool .)
    ?               reduce using rule 183 (expBool -> valoresBool OR valoresBool .)
    )               reduce using rule 183 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 183 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 183 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 183 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 183 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 183 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 161


state 255

    (85) valoresTernarioVars -> atributos .

    :               reduce using rule 85 (valoresTernarioVars -> atributos .)
    ,               reduce using rule 85 (valoresTernarioVars -> atributos .)
    )               reduce using rule 85 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 85 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 85 (valoresTernarioVars -> atributos .)
    }               reduce using rule 85 (valoresTernarioVars -> atributos .)


state 256

    (170) valoresTernarioBool -> funcBool .
    (162) valoresBool -> funcBool .

    :               reduce using rule 170 (valoresTernarioBool -> funcBool .)
    ,               reduce using rule 170 (valoresTernarioBool -> funcBool .)
    )               reduce using rule 170 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 170 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 170 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 170 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 162 (valoresBool -> funcBool .)
    OR              reduce using rule 162 (valoresBool -> funcBool .)
    AND             reduce using rule 162 (valoresBool -> funcBool .)


state 257

    (86) valoresTernarioVars -> RES .

    :               reduce using rule 86 (valoresTernarioVars -> RES .)
    ,               reduce using rule 86 (valoresTernarioVars -> RES .)
    )               reduce using rule 86 (valoresTernarioVars -> RES .)
    ;               reduce using rule 86 (valoresTernarioVars -> RES .)
    ]               reduce using rule 86 (valoresTernarioVars -> RES .)
    }               reduce using rule 86 (valoresTernarioVars -> RES .)


state 258

    (122) valoresTernarioMat -> funcInt .
    (113) valoresMat -> funcInt .
    (203) tCompare -> funcInt .

    ,               reduce using rule 122 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 122 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 122 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 122 (valoresTernarioMat -> funcInt .)
    :               reduce using rule 122 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 122 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 113 (valoresMat -> funcInt .)
    -               reduce using rule 113 (valoresMat -> funcInt .)
    *               reduce using rule 113 (valoresMat -> funcInt .)
    /               reduce using rule 113 (valoresMat -> funcInt .)
    %               reduce using rule 113 (valoresMat -> funcInt .)
    ^               reduce using rule 113 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 203 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 203 (tCompare -> funcInt .)
    >               reduce using rule 203 (tCompare -> funcInt .)
    <               reduce using rule 203 (tCompare -> funcInt .)


state 259

    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 163
    OR              shift and go to state 162
    AND             shift and go to state 161


state 260

    (124) valoresTernarioMat -> eMat .
    (127) eMat -> eMat . + p
    (128) eMat -> eMat . - p
    (131) eMat -> eMat . + valoresMat
    (132) eMat -> eMat . - valoresMat
    (199) tCompare -> eMat .

    ,               reduce using rule 124 (valoresTernarioMat -> eMat .)
    )               reduce using rule 124 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 124 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 124 (valoresTernarioMat -> eMat .)
    :               reduce using rule 124 (valoresTernarioMat -> eMat .)
    }               reduce using rule 124 (valoresTernarioMat -> eMat .)
    +               shift and go to state 164
    -               shift and go to state 165
    EQEQ            reduce using rule 199 (tCompare -> eMat .)
    DISTINTO        reduce using rule 199 (tCompare -> eMat .)
    >               reduce using rule 199 (tCompare -> eMat .)
    <               reduce using rule 199 (tCompare -> eMat .)


state 261

    (167) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 347


state 262

    (125) valoresTernarioMat -> ternarioMat .

    ,               reduce using rule 125 (valoresTernarioMat -> ternarioMat .)
    )               reduce using rule 125 (valoresTernarioMat -> ternarioMat .)
    ;               reduce using rule 125 (valoresTernarioMat -> ternarioMat .)
    ]               reduce using rule 125 (valoresTernarioMat -> ternarioMat .)
    :               reduce using rule 125 (valoresTernarioMat -> ternarioMat .)
    }               reduce using rule 125 (valoresTernarioMat -> ternarioMat .)


state 263

    (82) valoresTernarioVars -> vec .

    :               reduce using rule 82 (valoresTernarioVars -> vec .)
    ,               reduce using rule 82 (valoresTernarioVars -> vec .)
    )               reduce using rule 82 (valoresTernarioVars -> vec .)
    ;               reduce using rule 82 (valoresTernarioVars -> vec .)
    ]               reduce using rule 82 (valoresTernarioVars -> vec .)
    }               reduce using rule 82 (valoresTernarioVars -> vec .)


state 264

    (81) valoresTernarioVars -> reg .

    :               reduce using rule 81 (valoresTernarioVars -> reg .)
    ,               reduce using rule 81 (valoresTernarioVars -> reg .)
    )               reduce using rule 81 (valoresTernarioVars -> reg .)
    ;               reduce using rule 81 (valoresTernarioVars -> reg .)
    ]               reduce using rule 81 (valoresTernarioVars -> reg .)
    }               reduce using rule 81 (valoresTernarioVars -> reg .)


state 265

    (69) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioMat
    (72) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 348


state 266

    (123) valoresTernarioMat -> STRING .
    (116) valoresMat -> STRING .

    ,               reduce using rule 123 (valoresTernarioMat -> STRING .)
    )               reduce using rule 123 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 123 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 123 (valoresTernarioMat -> STRING .)
    :               reduce using rule 123 (valoresTernarioMat -> STRING .)
    }               reduce using rule 123 (valoresTernarioMat -> STRING .)
    +               reduce using rule 116 (valoresMat -> STRING .)
    -               reduce using rule 116 (valoresMat -> STRING .)
    *               reduce using rule 116 (valoresMat -> STRING .)
    /               reduce using rule 116 (valoresMat -> STRING .)
    %               reduce using rule 116 (valoresMat -> STRING .)
    ^               reduce using rule 116 (valoresMat -> STRING .)


state 267

    (171) valoresTernarioBool -> ternarioBool .

    :               reduce using rule 171 (valoresTernarioBool -> ternarioBool .)
    ,               reduce using rule 171 (valoresTernarioBool -> ternarioBool .)
    )               reduce using rule 171 (valoresTernarioBool -> ternarioBool .)
    ;               reduce using rule 171 (valoresTernarioBool -> ternarioBool .)
    ]               reduce using rule 171 (valoresTernarioBool -> ternarioBool .)
    }               reduce using rule 171 (valoresTernarioBool -> ternarioBool .)


state 268

    (118) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 349


state 269

    (120) valoresTernarioMat -> INT .
    (111) valoresMat -> INT .
    (202) tCompare -> INT .

    ,               reduce using rule 120 (valoresTernarioMat -> INT .)
    )               reduce using rule 120 (valoresTernarioMat -> INT .)
    ;               reduce using rule 120 (valoresTernarioMat -> INT .)
    ]               reduce using rule 120 (valoresTernarioMat -> INT .)
    :               reduce using rule 120 (valoresTernarioMat -> INT .)
    }               reduce using rule 120 (valoresTernarioMat -> INT .)
    +               reduce using rule 111 (valoresMat -> INT .)
    -               reduce using rule 111 (valoresMat -> INT .)
    *               reduce using rule 111 (valoresMat -> INT .)
    /               reduce using rule 111 (valoresMat -> INT .)
    %               reduce using rule 111 (valoresMat -> INT .)
    ^               reduce using rule 111 (valoresMat -> INT .)
    EQEQ            reduce using rule 202 (tCompare -> INT .)
    DISTINTO        reduce using rule 202 (tCompare -> INT .)
    >               reduce using rule 202 (tCompare -> INT .)
    <               reduce using rule 202 (tCompare -> INT .)


state 270

    (121) valoresTernarioMat -> FLOAT .
    (112) valoresMat -> FLOAT .
    (204) tCompare -> FLOAT .

    ,               reduce using rule 121 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 121 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 121 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 121 (valoresTernarioMat -> FLOAT .)
    :               reduce using rule 121 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 121 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 112 (valoresMat -> FLOAT .)
    -               reduce using rule 112 (valoresMat -> FLOAT .)
    *               reduce using rule 112 (valoresMat -> FLOAT .)
    /               reduce using rule 112 (valoresMat -> FLOAT .)
    %               reduce using rule 112 (valoresMat -> FLOAT .)
    ^               reduce using rule 112 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 204 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 204 (tCompare -> FLOAT .)
    >               reduce using rule 204 (tCompare -> FLOAT .)
    <               reduce using rule 204 (tCompare -> FLOAT .)


state 271

    (169) valoresTernarioBool -> BOOL .
    (161) valoresBool -> BOOL .

    :               reduce using rule 169 (valoresTernarioBool -> BOOL .)
    ,               reduce using rule 169 (valoresTernarioBool -> BOOL .)
    )               reduce using rule 169 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 169 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 169 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 169 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 161 (valoresBool -> BOOL .)
    OR              reduce using rule 161 (valoresBool -> BOOL .)
    AND             reduce using rule 161 (valoresBool -> BOOL .)


state 272

    (79) valoresTernarioVars -> varsOps .
    (115) valoresMat -> varsOps .
    (164) valoresBool -> varsOps .
    (200) tCompare -> varsOps .

    :               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)
    ?               reduce using rule 164 (valoresBool -> varsOps .)
    OR              reduce using rule 164 (valoresBool -> varsOps .)
    AND             reduce using rule 164 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 200 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 200 (tCompare -> varsOps .)
    >               reduce using rule 200 (tCompare -> varsOps .)
    <               reduce using rule 200 (tCompare -> varsOps .)


state 273

    (126) valoresTernarioMat -> ( . ternarioMat )
    (172) valoresTernarioBool -> ( . ternarioBool )
    (84) valoresTernarioVars -> ( . ternarioVars )
    (117) valoresMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 168
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 351
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 178

state 274

    (83) valoresTernarioVars -> ternarioVars .

    :               reduce using rule 83 (valoresTernarioVars -> ternarioVars .)
    ,               reduce using rule 83 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 83 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 83 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 83 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 83 (valoresTernarioVars -> ternarioVars .)


state 275

    (80) valoresTernarioVars -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (114) valoresMat -> varYVals .
    (163) valoresBool -> varYVals .
    (201) tCompare -> varYVals .

    :               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)


state 276

    (173) valoresTernarioBool -> expBool .
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 187
    OR              shift and go to state 186


state 277

    (131) eMat -> eMat + valoresMat .
    (139) p -> valoresMat . * exp
    (140) p -> valoresMat . / exp
    (141) p -> valoresMat . % exp
    (145) p -> valoresMat . * valoresMat
    (146) p -> valoresMat . / valoresMat
    (147) p -> valoresMat . % valoresMat
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 131 (eMat -> eMat + valoresMat .)
    -               reduce using rule 131 (eMat -> eMat + valoresMat .)
    :               reduce using rule 131 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 131 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 131 (eMat -> eMat + valoresMat .)
    >               reduce using rule 131 (eMat -> eMat + valoresMat .)
    <               reduce using rule 131 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 131 (eMat -> eMat + valoresMat .)
    )               reduce using rule 131 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 131 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 131 (eMat -> eMat + valoresMat .)
    }               reduce using rule 131 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 131 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 131 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 131 (eMat -> eMat + valoresMat .)
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 278

    (127) eMat -> eMat + p .
    (136) p -> p . * exp
    (137) p -> p . / exp
    (138) p -> p . % exp
    (142) p -> p . * valoresMat
    (143) p -> p . / valoresMat
    (144) p -> p . % valoresMat

    +               reduce using rule 127 (eMat -> eMat + p .)
    -               reduce using rule 127 (eMat -> eMat + p .)
    :               reduce using rule 127 (eMat -> eMat + p .)
    EQEQ            reduce using rule 127 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 127 (eMat -> eMat + p .)
    >               reduce using rule 127 (eMat -> eMat + p .)
    <               reduce using rule 127 (eMat -> eMat + p .)
    ,               reduce using rule 127 (eMat -> eMat + p .)
    )               reduce using rule 127 (eMat -> eMat + p .)
    ;               reduce using rule 127 (eMat -> eMat + p .)
    ]               reduce using rule 127 (eMat -> eMat + p .)
    }               reduce using rule 127 (eMat -> eMat + p .)
    AND             reduce using rule 127 (eMat -> eMat + p .)
    OR              reduce using rule 127 (eMat -> eMat + p .)
    ?               reduce using rule 127 (eMat -> eMat + p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 279

    (132) eMat -> eMat - valoresMat .
    (139) p -> valoresMat . * exp
    (140) p -> valoresMat . / exp
    (141) p -> valoresMat . % exp
    (145) p -> valoresMat . * valoresMat
    (146) p -> valoresMat . / valoresMat
    (147) p -> valoresMat . % valoresMat
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 132 (eMat -> eMat - valoresMat .)
    -               reduce using rule 132 (eMat -> eMat - valoresMat .)
    :               reduce using rule 132 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 132 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 132 (eMat -> eMat - valoresMat .)
    >               reduce using rule 132 (eMat -> eMat - valoresMat .)
    <               reduce using rule 132 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 132 (eMat -> eMat - valoresMat .)
    )               reduce using rule 132 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 132 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 132 (eMat -> eMat - valoresMat .)
    }               reduce using rule 132 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 132 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 132 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 132 (eMat -> eMat - valoresMat .)
    *               shift and go to state 155
    /               shift and go to state 157
    %               shift and go to state 153
    ^               shift and go to state 158


state 280

    (128) eMat -> eMat - p .
    (136) p -> p . * exp
    (137) p -> p . / exp
    (138) p -> p . % exp
    (142) p -> p . * valoresMat
    (143) p -> p . / valoresMat
    (144) p -> p . % valoresMat

    +               reduce using rule 128 (eMat -> eMat - p .)
    -               reduce using rule 128 (eMat -> eMat - p .)
    :               reduce using rule 128 (eMat -> eMat - p .)
    EQEQ            reduce using rule 128 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 128 (eMat -> eMat - p .)
    >               reduce using rule 128 (eMat -> eMat - p .)
    <               reduce using rule 128 (eMat -> eMat - p .)
    ,               reduce using rule 128 (eMat -> eMat - p .)
    )               reduce using rule 128 (eMat -> eMat - p .)
    ;               reduce using rule 128 (eMat -> eMat - p .)
    ]               reduce using rule 128 (eMat -> eMat - p .)
    }               reduce using rule 128 (eMat -> eMat - p .)
    AND             reduce using rule 128 (eMat -> eMat - p .)
    OR              reduce using rule 128 (eMat -> eMat - p .)
    ?               reduce using rule 128 (eMat -> eMat - p .)
    *               shift and go to state 197
    /               shift and go to state 198
    %               shift and go to state 196


state 281

    (160) paren -> ( valoresMat ) .

    ^               reduce using rule 160 (paren -> ( valoresMat ) .)
    *               reduce using rule 160 (paren -> ( valoresMat ) .)
    /               reduce using rule 160 (paren -> ( valoresMat ) .)
    %               reduce using rule 160 (paren -> ( valoresMat ) .)
    +               reduce using rule 160 (paren -> ( valoresMat ) .)
    -               reduce using rule 160 (paren -> ( valoresMat ) .)
    :               reduce using rule 160 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 160 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 160 (paren -> ( valoresMat ) .)
    >               reduce using rule 160 (paren -> ( valoresMat ) .)
    <               reduce using rule 160 (paren -> ( valoresMat ) .)
    )               reduce using rule 160 (paren -> ( valoresMat ) .)
    ,               reduce using rule 160 (paren -> ( valoresMat ) .)
    ;               reduce using rule 160 (paren -> ( valoresMat ) .)
    ]               reduce using rule 160 (paren -> ( valoresMat ) .)
    }               reduce using rule 160 (paren -> ( valoresMat ) .)
    AND             reduce using rule 160 (paren -> ( valoresMat ) .)
    OR              reduce using rule 160 (paren -> ( valoresMat ) .)
    ?               reduce using rule 160 (paren -> ( valoresMat ) .)


state 282

    (159) paren -> ( eMat ) .

    ^               reduce using rule 159 (paren -> ( eMat ) .)
    *               reduce using rule 159 (paren -> ( eMat ) .)
    /               reduce using rule 159 (paren -> ( eMat ) .)
    %               reduce using rule 159 (paren -> ( eMat ) .)
    +               reduce using rule 159 (paren -> ( eMat ) .)
    -               reduce using rule 159 (paren -> ( eMat ) .)
    :               reduce using rule 159 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 159 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 159 (paren -> ( eMat ) .)
    >               reduce using rule 159 (paren -> ( eMat ) .)
    <               reduce using rule 159 (paren -> ( eMat ) .)
    )               reduce using rule 159 (paren -> ( eMat ) .)
    ,               reduce using rule 159 (paren -> ( eMat ) .)
    ;               reduce using rule 159 (paren -> ( eMat ) .)
    ]               reduce using rule 159 (paren -> ( eMat ) .)
    }               reduce using rule 159 (paren -> ( eMat ) .)
    AND             reduce using rule 159 (paren -> ( eMat ) .)
    OR              reduce using rule 159 (paren -> ( eMat ) .)
    ?               reduce using rule 159 (paren -> ( eMat ) .)


state 283

    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 353
    OR              shift and go to state 162
    AND             shift and go to state 161


state 284

    (117) valoresMat -> ( ternarioMat . )
    (206) tCompare -> ( ternarioMat . )

    )               shift and go to state 354


state 285

    (214) parenBool -> ( expBool . )
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 355
    OR              shift and go to state 186


state 286

    (176) ternario -> ( ternarioMat ) .
    (117) valoresMat -> ( ternarioMat ) .
    (206) tCompare -> ( ternarioMat ) .

    ,               reduce using rule 176 (ternario -> ( ternarioMat ) .)
    ;               reduce using rule 176 (ternario -> ( ternarioMat ) .)
    )               reduce using rule 176 (ternario -> ( ternarioMat ) .)
    }               reduce using rule 176 (ternario -> ( ternarioMat ) .)
    ]               reduce using rule 176 (ternario -> ( ternarioMat ) .)
    +               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 206 (tCompare -> ( ternarioMat ) .)


state 287

    (177) ternario -> ( ternarioBool ) .
    (165) valoresBool -> ( ternarioBool ) .
    (205) tCompare -> ( ternarioBool ) .

    ,               reduce using rule 177 (ternario -> ( ternarioBool ) .)
    ;               reduce using rule 177 (ternario -> ( ternarioBool ) .)
    )               reduce using rule 177 (ternario -> ( ternarioBool ) .)
    }               reduce using rule 177 (ternario -> ( ternarioBool ) .)
    ]               reduce using rule 177 (ternario -> ( ternarioBool ) .)
    OR              reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 205 (tCompare -> ( ternarioBool ) .)


state 288

    (179) ternario -> ( ternarioVars ) .

    ,               reduce using rule 179 (ternario -> ( ternarioVars ) .)
    ;               reduce using rule 179 (ternario -> ( ternarioVars ) .)
    )               reduce using rule 179 (ternario -> ( ternarioVars ) .)
    }               reduce using rule 179 (ternario -> ( ternarioVars ) .)
    ]               reduce using rule 179 (ternario -> ( ternarioVars ) .)


state 289

    (214) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 214 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 214 (parenBool -> ( expBool ) .)
    AND             reduce using rule 214 (parenBool -> ( expBool ) .)
    ?               reduce using rule 214 (parenBool -> ( expBool ) .)
    OR              reduce using rule 214 (parenBool -> ( expBool ) .)
    :               reduce using rule 214 (parenBool -> ( expBool ) .)
    )               reduce using rule 214 (parenBool -> ( expBool ) .)
    ,               reduce using rule 214 (parenBool -> ( expBool ) .)
    ;               reduce using rule 214 (parenBool -> ( expBool ) .)
    ]               reduce using rule 214 (parenBool -> ( expBool ) .)
    }               reduce using rule 214 (parenBool -> ( expBool ) .)


state 290

    (117) valoresMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 284
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 211
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 285

state 291

    (114) valoresMat -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (163) valoresBool -> varYVals .
    (201) tCompare -> varYVals .

    )               reduce using rule 114 (valoresMat -> varYVals .)
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)


state 292

    (180) expBool -> expBool OR and .
    (185) and -> and . AND eq
    (187) and -> and . AND valoresBool

    OR              reduce using rule 180 (expBool -> expBool OR and .)
    ?               reduce using rule 180 (expBool -> expBool OR and .)
    )               reduce using rule 180 (expBool -> expBool OR and .)
    ,               reduce using rule 180 (expBool -> expBool OR and .)
    ;               reduce using rule 180 (expBool -> expBool OR and .)
    ]               reduce using rule 180 (expBool -> expBool OR and .)
    :               reduce using rule 180 (expBool -> expBool OR and .)
    }               reduce using rule 180 (expBool -> expBool OR and .)
    AND             shift and go to state 152


state 293

    (182) expBool -> expBool OR valoresBool .
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    OR              reduce using rule 182 (expBool -> expBool OR valoresBool .)
    ?               reduce using rule 182 (expBool -> expBool OR valoresBool .)
    )               reduce using rule 182 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 182 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 182 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 182 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 182 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 182 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 161


state 294

    (168) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool
    (78) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 356


state 295

    (74) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars
    (75) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioMat
    (77) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioBool

    :               shift and go to state 357


state 296

    (119) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat
    (76) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 358


state 297

    (193) eq -> tCompare DISTINTO mayor .

    EQEQ            reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    DISTINTO        reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    AND             reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    ?               reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    OR              reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    :               reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    )               reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    ;               reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    ,               reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    }               reduce using rule 193 (eq -> tCompare DISTINTO mayor .)
    ]               reduce using rule 193 (eq -> tCompare DISTINTO mayor .)


state 298

    (197) eq -> tCompare DISTINTO tCompare .
    (207) mayor -> tCompare . > tCompare
    (209) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    DISTINTO        reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    AND             reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    ?               reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    OR              reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    :               reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    )               reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    ;               reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    ,               reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    }               reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    ]               reduce using rule 197 (eq -> tCompare DISTINTO tCompare .)
    >               shift and go to state 191
    <               shift and go to state 190


state 299

    (192) eq -> tCompare EQEQ mayor .

    EQEQ            reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    DISTINTO        reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    AND             reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    ?               reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    OR              reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    :               reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    )               reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    ;               reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    ,               reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    }               reduce using rule 192 (eq -> tCompare EQEQ mayor .)
    ]               reduce using rule 192 (eq -> tCompare EQEQ mayor .)


state 300

    (196) eq -> tCompare EQEQ tCompare .
    (207) mayor -> tCompare . > tCompare
    (209) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    DISTINTO        reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    AND             reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    ?               reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    OR              reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    :               reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    )               reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    ;               reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    ,               reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    }               reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    ]               reduce using rule 196 (eq -> tCompare EQEQ tCompare .)
    >               shift and go to state 191
    <               shift and go to state 190


state 301

    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (117) valoresMat -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 209
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 210
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 346
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 359

state 302

    (209) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 209 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 209 (menor -> tCompare < tCompare .)
    AND             reduce using rule 209 (menor -> tCompare < tCompare .)
    ?               reduce using rule 209 (menor -> tCompare < tCompare .)
    OR              reduce using rule 209 (menor -> tCompare < tCompare .)
    :               reduce using rule 209 (menor -> tCompare < tCompare .)
    )               reduce using rule 209 (menor -> tCompare < tCompare .)
    ;               reduce using rule 209 (menor -> tCompare < tCompare .)
    ,               reduce using rule 209 (menor -> tCompare < tCompare .)
    ]               reduce using rule 209 (menor -> tCompare < tCompare .)
    }               reduce using rule 209 (menor -> tCompare < tCompare .)


state 303

    (207) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 207 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 207 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 207 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 207 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 207 (mayor -> tCompare > tCompare .)
    :               reduce using rule 207 (mayor -> tCompare > tCompare .)
    )               reduce using rule 207 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 207 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 207 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 207 (mayor -> tCompare > tCompare .)
    }               reduce using rule 207 (mayor -> tCompare > tCompare .)


state 304

    (49) elem -> valores , . elem
    (49) elem -> . valores , elem
    (50) elem -> . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    elem                           shift and go to state 360
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 192
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 305

    (48) vec -> [ elem ] .

    )               reduce using rule 48 (vec -> [ elem ] .)
    ;               reduce using rule 48 (vec -> [ elem ] .)
    ,               reduce using rule 48 (vec -> [ elem ] .)
    ]               reduce using rule 48 (vec -> [ elem ] .)
    :               reduce using rule 48 (vec -> [ elem ] .)
    }               reduce using rule 48 (vec -> [ elem ] .)


state 306

    (68) valoresCampos -> BEGIN .

    ,               reduce using rule 68 (valoresCampos -> BEGIN .)
    )               reduce using rule 68 (valoresCampos -> BEGIN .)
    ;               reduce using rule 68 (valoresCampos -> BEGIN .)
    ]               reduce using rule 68 (valoresCampos -> BEGIN .)
    :               reduce using rule 68 (valoresCampos -> BEGIN .)
    }               reduce using rule 68 (valoresCampos -> BEGIN .)


state 307

    (67) valoresCampos -> END .

    ,               reduce using rule 67 (valoresCampos -> END .)
    )               reduce using rule 67 (valoresCampos -> END .)
    ;               reduce using rule 67 (valoresCampos -> END .)
    ]               reduce using rule 67 (valoresCampos -> END .)
    :               reduce using rule 67 (valoresCampos -> END .)
    }               reduce using rule 67 (valoresCampos -> END .)


state 308

    (65) atributos -> ID . valoresCampos .

    ,               reduce using rule 65 (atributos -> ID . valoresCampos .)
    )               reduce using rule 65 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 65 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 65 (atributos -> ID . valoresCampos .)
    :               reduce using rule 65 (atributos -> ID . valoresCampos .)
    }               reduce using rule 65 (atributos -> ID . valoresCampos .)


state 309

    (66) valoresCampos -> varYVals .

    ,               reduce using rule 66 (valoresCampos -> varYVals .)
    )               reduce using rule 66 (valoresCampos -> varYVals .)
    ;               reduce using rule 66 (valoresCampos -> varYVals .)
    ]               reduce using rule 66 (valoresCampos -> varYVals .)
    :               reduce using rule 66 (valoresCampos -> varYVals .)
    }               reduce using rule 66 (valoresCampos -> varYVals .)


state 310

    (43) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 361


state 311

    (144) p -> p % valoresMat .
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 144 (p -> p % valoresMat .)
    /               reduce using rule 144 (p -> p % valoresMat .)
    %               reduce using rule 144 (p -> p % valoresMat .)
    +               reduce using rule 144 (p -> p % valoresMat .)
    -               reduce using rule 144 (p -> p % valoresMat .)
    ;               reduce using rule 144 (p -> p % valoresMat .)
    )               reduce using rule 144 (p -> p % valoresMat .)
    EQEQ            reduce using rule 144 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 144 (p -> p % valoresMat .)
    >               reduce using rule 144 (p -> p % valoresMat .)
    <               reduce using rule 144 (p -> p % valoresMat .)
    :               reduce using rule 144 (p -> p % valoresMat .)
    AND             reduce using rule 144 (p -> p % valoresMat .)
    OR              reduce using rule 144 (p -> p % valoresMat .)
    ?               reduce using rule 144 (p -> p % valoresMat .)
    ,               reduce using rule 144 (p -> p % valoresMat .)
    ]               reduce using rule 144 (p -> p % valoresMat .)
    }               reduce using rule 144 (p -> p % valoresMat .)
    ^               shift and go to state 158


state 312

    (138) p -> p % exp .
    (149) exp -> exp . ^ iSing
    (151) exp -> exp . ^ valoresMat

    *               reduce using rule 138 (p -> p % exp .)
    /               reduce using rule 138 (p -> p % exp .)
    %               reduce using rule 138 (p -> p % exp .)
    +               reduce using rule 138 (p -> p % exp .)
    -               reduce using rule 138 (p -> p % exp .)
    ;               reduce using rule 138 (p -> p % exp .)
    )               reduce using rule 138 (p -> p % exp .)
    EQEQ            reduce using rule 138 (p -> p % exp .)
    DISTINTO        reduce using rule 138 (p -> p % exp .)
    >               reduce using rule 138 (p -> p % exp .)
    <               reduce using rule 138 (p -> p % exp .)
    :               reduce using rule 138 (p -> p % exp .)
    AND             reduce using rule 138 (p -> p % exp .)
    OR              reduce using rule 138 (p -> p % exp .)
    ?               reduce using rule 138 (p -> p % exp .)
    ,               reduce using rule 138 (p -> p % exp .)
    ]               reduce using rule 138 (p -> p % exp .)
    }               reduce using rule 138 (p -> p % exp .)
    ^               shift and go to state 204


state 313

    (142) p -> p * valoresMat .
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 142 (p -> p * valoresMat .)
    /               reduce using rule 142 (p -> p * valoresMat .)
    %               reduce using rule 142 (p -> p * valoresMat .)
    +               reduce using rule 142 (p -> p * valoresMat .)
    -               reduce using rule 142 (p -> p * valoresMat .)
    ;               reduce using rule 142 (p -> p * valoresMat .)
    )               reduce using rule 142 (p -> p * valoresMat .)
    EQEQ            reduce using rule 142 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 142 (p -> p * valoresMat .)
    >               reduce using rule 142 (p -> p * valoresMat .)
    <               reduce using rule 142 (p -> p * valoresMat .)
    :               reduce using rule 142 (p -> p * valoresMat .)
    AND             reduce using rule 142 (p -> p * valoresMat .)
    OR              reduce using rule 142 (p -> p * valoresMat .)
    ?               reduce using rule 142 (p -> p * valoresMat .)
    ,               reduce using rule 142 (p -> p * valoresMat .)
    ]               reduce using rule 142 (p -> p * valoresMat .)
    }               reduce using rule 142 (p -> p * valoresMat .)
    ^               shift and go to state 158


state 314

    (136) p -> p * exp .
    (149) exp -> exp . ^ iSing
    (151) exp -> exp . ^ valoresMat

    *               reduce using rule 136 (p -> p * exp .)
    /               reduce using rule 136 (p -> p * exp .)
    %               reduce using rule 136 (p -> p * exp .)
    +               reduce using rule 136 (p -> p * exp .)
    -               reduce using rule 136 (p -> p * exp .)
    ;               reduce using rule 136 (p -> p * exp .)
    )               reduce using rule 136 (p -> p * exp .)
    EQEQ            reduce using rule 136 (p -> p * exp .)
    DISTINTO        reduce using rule 136 (p -> p * exp .)
    >               reduce using rule 136 (p -> p * exp .)
    <               reduce using rule 136 (p -> p * exp .)
    :               reduce using rule 136 (p -> p * exp .)
    AND             reduce using rule 136 (p -> p * exp .)
    OR              reduce using rule 136 (p -> p * exp .)
    ?               reduce using rule 136 (p -> p * exp .)
    ,               reduce using rule 136 (p -> p * exp .)
    ]               reduce using rule 136 (p -> p * exp .)
    }               reduce using rule 136 (p -> p * exp .)
    ^               shift and go to state 204


state 315

    (143) p -> p / valoresMat .
    (150) exp -> valoresMat . ^ iSing
    (152) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 143 (p -> p / valoresMat .)
    /               reduce using rule 143 (p -> p / valoresMat .)
    %               reduce using rule 143 (p -> p / valoresMat .)
    +               reduce using rule 143 (p -> p / valoresMat .)
    -               reduce using rule 143 (p -> p / valoresMat .)
    ;               reduce using rule 143 (p -> p / valoresMat .)
    )               reduce using rule 143 (p -> p / valoresMat .)
    EQEQ            reduce using rule 143 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 143 (p -> p / valoresMat .)
    >               reduce using rule 143 (p -> p / valoresMat .)
    <               reduce using rule 143 (p -> p / valoresMat .)
    :               reduce using rule 143 (p -> p / valoresMat .)
    AND             reduce using rule 143 (p -> p / valoresMat .)
    OR              reduce using rule 143 (p -> p / valoresMat .)
    ?               reduce using rule 143 (p -> p / valoresMat .)
    ,               reduce using rule 143 (p -> p / valoresMat .)
    ]               reduce using rule 143 (p -> p / valoresMat .)
    }               reduce using rule 143 (p -> p / valoresMat .)
    ^               shift and go to state 158


state 316

    (137) p -> p / exp .
    (149) exp -> exp . ^ iSing
    (151) exp -> exp . ^ valoresMat

    *               reduce using rule 137 (p -> p / exp .)
    /               reduce using rule 137 (p -> p / exp .)
    %               reduce using rule 137 (p -> p / exp .)
    +               reduce using rule 137 (p -> p / exp .)
    -               reduce using rule 137 (p -> p / exp .)
    ;               reduce using rule 137 (p -> p / exp .)
    )               reduce using rule 137 (p -> p / exp .)
    EQEQ            reduce using rule 137 (p -> p / exp .)
    DISTINTO        reduce using rule 137 (p -> p / exp .)
    >               reduce using rule 137 (p -> p / exp .)
    <               reduce using rule 137 (p -> p / exp .)
    :               reduce using rule 137 (p -> p / exp .)
    AND             reduce using rule 137 (p -> p / exp .)
    OR              reduce using rule 137 (p -> p / exp .)
    ?               reduce using rule 137 (p -> p / exp .)
    ,               reduce using rule 137 (p -> p / exp .)
    ]               reduce using rule 137 (p -> p / exp .)
    }               reduce using rule 137 (p -> p / exp .)
    ^               shift and go to state 204


state 317

    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 362
    OR              shift and go to state 162
    AND             shift and go to state 161


state 318

    (165) valoresBool -> ( ternarioBool . )

    )               shift and go to state 363


state 319

    (214) parenBool -> ( expBool . )
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 364
    OR              shift and go to state 186


state 320

    (151) exp -> exp ^ valoresMat .

    ^               reduce using rule 151 (exp -> exp ^ valoresMat .)
    *               reduce using rule 151 (exp -> exp ^ valoresMat .)
    /               reduce using rule 151 (exp -> exp ^ valoresMat .)
    %               reduce using rule 151 (exp -> exp ^ valoresMat .)
    +               reduce using rule 151 (exp -> exp ^ valoresMat .)
    -               reduce using rule 151 (exp -> exp ^ valoresMat .)
    :               reduce using rule 151 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 151 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 151 (exp -> exp ^ valoresMat .)
    >               reduce using rule 151 (exp -> exp ^ valoresMat .)
    <               reduce using rule 151 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 151 (exp -> exp ^ valoresMat .)
    }               reduce using rule 151 (exp -> exp ^ valoresMat .)
    )               reduce using rule 151 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 151 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 151 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 151 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 151 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 151 (exp -> exp ^ valoresMat .)


state 321

    (149) exp -> exp ^ iSing .

    ^               reduce using rule 149 (exp -> exp ^ iSing .)
    *               reduce using rule 149 (exp -> exp ^ iSing .)
    /               reduce using rule 149 (exp -> exp ^ iSing .)
    %               reduce using rule 149 (exp -> exp ^ iSing .)
    +               reduce using rule 149 (exp -> exp ^ iSing .)
    -               reduce using rule 149 (exp -> exp ^ iSing .)
    :               reduce using rule 149 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 149 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 149 (exp -> exp ^ iSing .)
    >               reduce using rule 149 (exp -> exp ^ iSing .)
    <               reduce using rule 149 (exp -> exp ^ iSing .)
    ,               reduce using rule 149 (exp -> exp ^ iSing .)
    }               reduce using rule 149 (exp -> exp ^ iSing .)
    )               reduce using rule 149 (exp -> exp ^ iSing .)
    ]               reduce using rule 149 (exp -> exp ^ iSing .)
    ;               reduce using rule 149 (exp -> exp ^ iSing .)
    AND             reduce using rule 149 (exp -> exp ^ iSing .)
    OR              reduce using rule 149 (exp -> exp ^ iSing .)
    ?               reduce using rule 149 (exp -> exp ^ iSing .)


state 322

    (97) reg -> { campos } .

    :               reduce using rule 97 (reg -> { campos } .)
    ,               reduce using rule 97 (reg -> { campos } .)
    ]               reduce using rule 97 (reg -> { campos } .)
    )               reduce using rule 97 (reg -> { campos } .)
    ;               reduce using rule 97 (reg -> { campos } .)
    }               reduce using rule 97 (reg -> { campos } .)


state 323

    (98) campos -> ID : . valores , campos
    (99) campos -> ID : . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 365
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 324

    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 370
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 366
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 367
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 368
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 369
    exp                            shift and go to state 106
    varYVals                       shift and go to state 371
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 372

state 325

    (206) tCompare -> ( ternarioMat ) .
    (117) valoresMat -> ( ternarioMat ) .

    EQEQ            reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    AND             reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    OR              reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    ?               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    ,               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    )               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    ;               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    ]               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    :               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    }               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    +               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)


state 326

    (165) valoresBool -> ( ternarioBool ) .
    (205) tCompare -> ( ternarioBool ) .

    ?               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 205 (tCompare -> ( ternarioBool ) .)


state 327

    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 370
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 366
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 373
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 374
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 369
    exp                            shift and go to state 106
    varYVals                       shift and go to state 371
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 372

state 328

    (5) lAbierta -> IF ( cosaBooleana ) linea .

    IF              reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    COMMENT         reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)


state 329

    (12) lCerrada -> IF . ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> IF . ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> IF . ( cosaBooleana ) lCerrada ELSE lCerrada
    (5) lAbierta -> IF . ( cosaBooleana ) linea
    (6) lAbierta -> IF . ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> IF . ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> IF . ( cosaBooleana ) { g }

    (               shift and go to state 375


state 330

    (7) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (13) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (4) linea -> lCerrada .

    ELSE            shift and go to state 376
    IF              reduce using rule 4 (linea -> lCerrada .)
    COMMENT         reduce using rule 4 (linea -> lCerrada .)
    DO              reduce using rule 4 (linea -> lCerrada .)
    WHILE           reduce using rule 4 (linea -> lCerrada .)
    FOR             reduce using rule 4 (linea -> lCerrada .)
    RETURN          reduce using rule 4 (linea -> lCerrada .)
    ;               reduce using rule 4 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 4 (linea -> lCerrada .)
    MASMAS          reduce using rule 4 (linea -> lCerrada .)
    ID              reduce using rule 4 (linea -> lCerrada .)
    PRINT           reduce using rule 4 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 4 (linea -> lCerrada .)
    LENGTH          reduce using rule 4 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 4 (linea -> lCerrada .)
    COLINEALES      reduce using rule 4 (linea -> lCerrada .)
    $end            reduce using rule 4 (linea -> lCerrada .)
    }               reduce using rule 4 (linea -> lCerrada .)


state 331

    (6) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) { . g }
    (12) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    }               reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 377
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 25
    loop                           shift and go to state 31

state 332

    (16) lCerrada -> loop . { g }
    (17) lCerrada -> loop . lCerrada
    (9) lAbierta -> loop . lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 66
    COMMENT         shift and go to state 9
    IF              shift and go to state 329
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 64
    lAbierta                       shift and go to state 65
    loop                           shift and go to state 332
    varYVals                       shift and go to state 25

state 333

    (26) loop -> FOR ( primParam ; valores . ; tercerParam )

    ;               shift and go to state 378


state 334

    (110) varAsig -> ID . ID = valoresAsig .

    ;               reduce using rule 110 (varAsig -> ID . ID = valoresAsig .)
    )               reduce using rule 110 (varAsig -> ID . ID = valoresAsig .)


state 335

    (95) m -> [ eMat ] m .

    .               reduce using rule 95 (m -> [ eMat ] m .)
    ;               reduce using rule 95 (m -> [ eMat ] m .)
    ,               reduce using rule 95 (m -> [ eMat ] m .)
    +               reduce using rule 95 (m -> [ eMat ] m .)
    -               reduce using rule 95 (m -> [ eMat ] m .)
    *               reduce using rule 95 (m -> [ eMat ] m .)
    /               reduce using rule 95 (m -> [ eMat ] m .)
    %               reduce using rule 95 (m -> [ eMat ] m .)
    ^               reduce using rule 95 (m -> [ eMat ] m .)
    OR              reduce using rule 95 (m -> [ eMat ] m .)
    AND             reduce using rule 95 (m -> [ eMat ] m .)
    ?               reduce using rule 95 (m -> [ eMat ] m .)
    EQEQ            reduce using rule 95 (m -> [ eMat ] m .)
    DISTINTO        reduce using rule 95 (m -> [ eMat ] m .)
    >               reduce using rule 95 (m -> [ eMat ] m .)
    <               reduce using rule 95 (m -> [ eMat ] m .)
    )               reduce using rule 95 (m -> [ eMat ] m .)
    ]               reduce using rule 95 (m -> [ eMat ] m .)
    :               reduce using rule 95 (m -> [ eMat ] m .)
    }               reduce using rule 95 (m -> [ eMat ] m .)
    MASMAS          reduce using rule 95 (m -> [ eMat ] m .)
    MENOSMENOS      reduce using rule 95 (m -> [ eMat ] m .)
    MULEQ           reduce using rule 95 (m -> [ eMat ] m .)
    DIVEQ           reduce using rule 95 (m -> [ eMat ] m .)
    MASEQ           reduce using rule 95 (m -> [ eMat ] m .)
    MENOSEQ         reduce using rule 95 (m -> [ eMat ] m .)
    =               reduce using rule 95 (m -> [ eMat ] m .)


state 336

    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 379
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 260
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 368
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 220

state 337

    (117) valoresMat -> ( ternarioMat ) .

    *               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ,               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    >               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    <               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    )               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ]               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ;               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    AND             reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    OR              reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ?               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    :               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    }               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)


state 338

    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 379
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 260
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 374
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 220

state 339

    (92) m -> [ INT ] m .

    .               reduce using rule 92 (m -> [ INT ] m .)
    ;               reduce using rule 92 (m -> [ INT ] m .)
    ,               reduce using rule 92 (m -> [ INT ] m .)
    +               reduce using rule 92 (m -> [ INT ] m .)
    -               reduce using rule 92 (m -> [ INT ] m .)
    *               reduce using rule 92 (m -> [ INT ] m .)
    /               reduce using rule 92 (m -> [ INT ] m .)
    %               reduce using rule 92 (m -> [ INT ] m .)
    ^               reduce using rule 92 (m -> [ INT ] m .)
    OR              reduce using rule 92 (m -> [ INT ] m .)
    AND             reduce using rule 92 (m -> [ INT ] m .)
    ?               reduce using rule 92 (m -> [ INT ] m .)
    EQEQ            reduce using rule 92 (m -> [ INT ] m .)
    DISTINTO        reduce using rule 92 (m -> [ INT ] m .)
    >               reduce using rule 92 (m -> [ INT ] m .)
    <               reduce using rule 92 (m -> [ INT ] m .)
    )               reduce using rule 92 (m -> [ INT ] m .)
    ]               reduce using rule 92 (m -> [ INT ] m .)
    :               reduce using rule 92 (m -> [ INT ] m .)
    }               reduce using rule 92 (m -> [ INT ] m .)
    MASMAS          reduce using rule 92 (m -> [ INT ] m .)
    MENOSMENOS      reduce using rule 92 (m -> [ INT ] m .)
    MULEQ           reduce using rule 92 (m -> [ INT ] m .)
    DIVEQ           reduce using rule 92 (m -> [ INT ] m .)
    MASEQ           reduce using rule 92 (m -> [ INT ] m .)
    MENOSEQ         reduce using rule 92 (m -> [ INT ] m .)
    =               reduce using rule 92 (m -> [ INT ] m .)


state 340

    (93) m -> [ varYVals ] m .

    .               reduce using rule 93 (m -> [ varYVals ] m .)
    ;               reduce using rule 93 (m -> [ varYVals ] m .)
    ,               reduce using rule 93 (m -> [ varYVals ] m .)
    +               reduce using rule 93 (m -> [ varYVals ] m .)
    -               reduce using rule 93 (m -> [ varYVals ] m .)
    *               reduce using rule 93 (m -> [ varYVals ] m .)
    /               reduce using rule 93 (m -> [ varYVals ] m .)
    %               reduce using rule 93 (m -> [ varYVals ] m .)
    ^               reduce using rule 93 (m -> [ varYVals ] m .)
    OR              reduce using rule 93 (m -> [ varYVals ] m .)
    AND             reduce using rule 93 (m -> [ varYVals ] m .)
    ?               reduce using rule 93 (m -> [ varYVals ] m .)
    EQEQ            reduce using rule 93 (m -> [ varYVals ] m .)
    DISTINTO        reduce using rule 93 (m -> [ varYVals ] m .)
    >               reduce using rule 93 (m -> [ varYVals ] m .)
    <               reduce using rule 93 (m -> [ varYVals ] m .)
    )               reduce using rule 93 (m -> [ varYVals ] m .)
    ]               reduce using rule 93 (m -> [ varYVals ] m .)
    :               reduce using rule 93 (m -> [ varYVals ] m .)
    }               reduce using rule 93 (m -> [ varYVals ] m .)
    MASMAS          reduce using rule 93 (m -> [ varYVals ] m .)
    MENOSMENOS      reduce using rule 93 (m -> [ varYVals ] m .)
    MULEQ           reduce using rule 93 (m -> [ varYVals ] m .)
    DIVEQ           reduce using rule 93 (m -> [ varYVals ] m .)
    MASEQ           reduce using rule 93 (m -> [ varYVals ] m .)
    MENOSEQ         reduce using rule 93 (m -> [ varYVals ] m .)
    =               reduce using rule 93 (m -> [ varYVals ] m .)


state 341

    (40) funcInt -> MULTIESCALAR ( valores , valores . param )
    (45) param -> . , valores
    (46) param -> . empty
    (47) empty -> .

    ,               shift and go to state 381
    )               reduce using rule 47 (empty -> .)

    empty                          shift and go to state 382
    param                          shift and go to state 380

state 342

    (13) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada

    ELSE            shift and go to state 383


state 343

    (12) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    }               reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 384
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 25
    linea                          shift and go to state 32

state 344

    (19) lCerrada -> DO lCerrada WHILE ( valores ) . ;

    ;               shift and go to state 385


state 345

    (18) lCerrada -> DO { g } WHILE ( . valores ) ;
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 386
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 346

    (205) tCompare -> ( ternarioBool . )

    )               shift and go to state 387


state 347

    (167) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (73) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 393
    RES             shift and go to state 257
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    mayor                          shift and go to state 108
    valoresBool                    shift and go to state 388
    eMat                           shift and go to state 118
    valoresTernarioBool            shift and go to state 389
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 390
    expBool                        shift and go to state 391
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 392
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 394
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 348

    (69) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (70) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioMat
    (72) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 396
    valoresBool                    shift and go to state 395
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 397
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 398
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 399

state 349

    (118) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (71) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 404
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresBool                    shift and go to state 403
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 405
    exp                            shift and go to state 106
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 406
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 407

state 350

    (126) valoresTernarioMat -> ( ternarioMat . )
    (117) valoresMat -> ( ternarioMat . )
    (206) tCompare -> ( ternarioMat . )

    )               shift and go to state 408


state 351

    (172) valoresTernarioBool -> ( ternarioBool . )
    (165) valoresBool -> ( ternarioBool . )
    (205) tCompare -> ( ternarioBool . )

    )               shift and go to state 409


state 352

    (84) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 410


state 353

    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 411
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 367
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 368
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 412

state 354

    (117) valoresMat -> ( ternarioMat ) .
    (206) tCompare -> ( ternarioMat ) .

    )               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    +               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 206 (tCompare -> ( ternarioMat ) .)


state 355

    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 411
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 373
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 374
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 412

state 356

    (168) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (78) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 393
    RES             shift and go to state 257
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 115
    not                            shift and go to state 95
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    mayor                          shift and go to state 108
    eMat                           shift and go to state 118
    valoresTernarioBool            shift and go to state 413
    valoresBool                    shift and go to state 388
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 414
    expBool                        shift and go to state 391
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    vecVal                         shift and go to state 8
    p                              shift and go to state 102
    varsOps                        shift and go to state 392
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 394
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 357

    (74) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (75) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioMat
    (77) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 395
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 415
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 417
    expBool                        shift and go to state 399
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 416
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 358

    (119) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (76) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 404
    RES             shift and go to state 257
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 403
    eMat                           shift and go to state 260
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 419
    expBool                        shift and go to state 407
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 418
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 359

    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    ?               shift and go to state 327
    OR              shift and go to state 186


state 360

    (49) elem -> valores , elem .

    ]               reduce using rule 49 (elem -> valores , elem .)


state 361

    (43) funcBool -> COLINEALES ( valores , valores ) .

    ;               reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    ?               reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    ]               reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    :               reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 43 (funcBool -> COLINEALES ( valores , valores ) .)


state 362

    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 420
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 118
    valoresTernarioBool            shift and go to state 367
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 421

state 363

    (165) valoresBool -> ( ternarioBool ) .

    EQEQ            reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    ?               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    ,               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    )               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    ;               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    ]               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    :               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    }               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)


state 364

    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 420
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 118
    valoresTernarioBool            shift and go to state 373
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 421

state 365

    (98) campos -> ID : valores . , campos
    (99) campos -> ID : valores .

    ,               shift and go to state 422
    }               reduce using rule 99 (campos -> ID : valores .)


state 366

    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 324
    OR              shift and go to state 162
    AND             shift and go to state 161


state 367

    (167) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 423


state 368

    (118) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 424


state 369

    (164) valoresBool -> varsOps .
    (115) valoresMat -> varsOps .
    (200) tCompare -> varsOps .

    ?               reduce using rule 164 (valoresBool -> varsOps .)
    OR              reduce using rule 164 (valoresBool -> varsOps .)
    AND             reduce using rule 164 (valoresBool -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 200 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 200 (tCompare -> varsOps .)
    >               reduce using rule 200 (tCompare -> varsOps .)
    <               reduce using rule 200 (tCompare -> varsOps .)


state 370

    (172) valoresTernarioBool -> ( . ternarioBool )
    (126) valoresTernarioMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (117) valoresMat -> ( . ternarioMat )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 209
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 351
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 212

state 371

    (163) valoresBool -> varYVals .
    (114) valoresMat -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (201) tCompare -> varYVals .

    ?               reduce using rule 163 (valoresBool -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)


state 372

    (173) valoresTernarioBool -> expBool .
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 327
    OR              shift and go to state 186


state 373

    (168) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 425


state 374

    (119) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 426


state 375

    (12) lCerrada -> IF ( . cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> IF ( . cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> IF ( . cosaBooleana ) lCerrada ELSE lCerrada
    (5) lAbierta -> IF ( . cosaBooleana ) linea
    (6) lAbierta -> IF ( . cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> IF ( . cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> IF ( . cosaBooleana ) { g }
    (27) cosaBooleana -> . expBool
    (28) cosaBooleana -> . valoresBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 123
    (               shift and go to state 119
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    )               reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 116
    eMat                           shift and go to state 118
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    varsOps                        shift and go to state 124
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    cosaBooleana                   shift and go to state 427
    p                              shift and go to state 102
    expBool                        shift and go to state 126
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92

state 376

    (7) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (13) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 430
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 428
    lAbierta                       shift and go to state 429
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 25
    loop                           shift and go to state 31

state 377

    (6) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) { g . }
    (12) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 431


state 378

    (26) loop -> FOR ( primParam ; valores ; . tercerParam )
    (31) tercerParam -> . varsOps
    (32) tercerParam -> . varAsig
    (33) tercerParam -> . func
    (34) tercerParam -> . empty
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (47) empty -> .
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    )               reduce using rule 47 (empty -> .)
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 434
    funcVoid                       shift and go to state 15
    funcBool                       shift and go to state 3
    funcString                     shift and go to state 23
    funcInt                        shift and go to state 5
    funcReturn                     shift and go to state 26
    varsOps                        shift and go to state 436
    func                           shift and go to state 432
    varYVals                       shift and go to state 25
    vecVal                         shift and go to state 8
    empty                          shift and go to state 435
    tercerParam                    shift and go to state 433

state 379

    (126) valoresTernarioMat -> ( . ternarioMat )
    (117) valoresMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 211
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 285

state 380

    (40) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 437


state 381

    (45) param -> , . valores
    (51) valores -> . eMat
    (52) valores -> . expBool
    (53) valores -> . funcReturn
    (54) valores -> . reg
    (55) valores -> . INT
    (56) valores -> . FLOAT
    (57) valores -> . STRING
    (58) valores -> . BOOL
    (59) valores -> . varYVals
    (60) valores -> . varsOps
    (61) valores -> . vec
    (62) valores -> . ternario
    (63) valores -> . atributos
    (64) valores -> . RES
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (97) reg -> . { campos }
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (48) vec -> . [ elem ]
    (174) ternario -> . ternarioMat
    (175) ternario -> . ternarioBool
    (176) ternario -> . ( ternarioMat )
    (177) ternario -> . ( ternarioBool )
    (178) ternario -> . ternarioVars
    (179) ternario -> . ( ternarioVars )
    (65) atributos -> . ID . valoresCampos
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (90) vecVal -> . ID m
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 98
    FLOAT           shift and go to state 100
    STRING          shift and go to state 81
    BOOL            shift and go to state 103
    RES             shift and go to state 74
    {               shift and go to state 107
    ID              shift and go to state 97
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    [               shift and go to state 96
    (               shift and go to state 83
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ?               reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    ternario                       shift and go to state 72
    funcBool                       shift and go to state 73
    funcInt                        shift and go to state 75
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 80
    eMat                           shift and go to state 82
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 86
    vec                            shift and go to state 87
    paren                          shift and go to state 94
    reg                            shift and go to state 88
    expBool                        shift and go to state 89
    ternarioBool                   shift and go to state 90
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 99
    valores                        shift and go to state 438
    p                              shift and go to state 102
    varsOps                        shift and go to state 104
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 77
    varYVals                       shift and go to state 109
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 110

state 382

    (46) param -> empty .

    )               reduce using rule 46 (param -> empty .)


state 383

    (13) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 430
    COMMENT         shift and go to state 9
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 21
    sentencia                      shift and go to state 10
    funcString                     shift and go to state 23
    funcVoid                       shift and go to state 15
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 428
    funcInt                        shift and go to state 5
    varsOps                        shift and go to state 14
    func                           shift and go to state 19
    funcBool                       shift and go to state 3
    varYVals                       shift and go to state 25
    vecVal                         shift and go to state 8
    loop                           shift and go to state 36

state 384

    (12) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada

    }               shift and go to state 439


state 385

    (19) lCerrada -> DO lCerrada WHILE ( valores ) ; .

    IF              reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COMMENT         reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    DO              reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    WHILE           reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    FOR             reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    RETURN          reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ;               reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MASMAS          reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ID              reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    PRINT           reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    LENGTH          reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    }               reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    $end            reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)
    ELSE            reduce using rule 19 (lCerrada -> DO lCerrada WHILE ( valores ) ; .)


state 386

    (18) lCerrada -> DO { g } WHILE ( valores . ) ;

    )               shift and go to state 440


state 387

    (205) tCompare -> ( ternarioBool ) .

    >               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    EQEQ            reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    AND             reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    OR              reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    ?               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    ,               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    )               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    ;               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    ]               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    :               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    }               reduce using rule 205 (tCompare -> ( ternarioBool ) .)


state 388

    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 441
    OR              shift and go to state 162
    AND             shift and go to state 161


state 389

    (167) ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .

    )               reduce using rule 167 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 167 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 167 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 167 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 167 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 167 (ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool .)


state 390

    (73) ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .

    :               reduce using rule 73 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ,               reduce using rule 73 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 73 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 73 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 73 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 73 (ternarioVars -> valoresBool ? valoresTernarioBool : valoresTernarioVars .)


state 391

    (173) valoresTernarioBool -> expBool .
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars

    ,               reduce using rule 173 (valoresTernarioBool -> expBool .)
    )               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 173 (valoresTernarioBool -> expBool .)
    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    }               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 442
    OR              shift and go to state 186


state 392

    (79) valoresTernarioVars -> varsOps .
    (164) valoresBool -> varsOps .
    (200) tCompare -> varsOps .
    (115) valoresMat -> varsOps .

    ,               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 164 (valoresBool -> varsOps .)
    OR              reduce using rule 164 (valoresBool -> varsOps .)
    AND             reduce using rule 164 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 200 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 200 (tCompare -> varsOps .)
    >               reduce using rule 200 (tCompare -> varsOps .)
    <               reduce using rule 200 (tCompare -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)


state 393

    (172) valoresTernarioBool -> ( . ternarioBool )
    (84) valoresTernarioVars -> ( . ternarioVars )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (117) valoresMat -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (43) funcBool -> . COLINEALES ( valores , valores )
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 443
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 210
    paren                          shift and go to state 94
    ternarioBool                   shift and go to state 351
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 444

state 394

    (80) valoresTernarioVars -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (163) valoresBool -> varYVals .
    (201) tCompare -> varYVals .
    (114) valoresMat -> varYVals .

    ,               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)


state 395

    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 445
    OR              shift and go to state 162
    AND             shift and go to state 161


state 396

    (72) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .

    :               reduce using rule 72 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ,               reduce using rule 72 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 72 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 72 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 72 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 72 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioBool .)


state 397

    (69) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    :               reduce using rule 69 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ,               reduce using rule 69 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 69 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 69 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 69 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 69 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 398

    (70) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .

    :               reduce using rule 70 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ,               reduce using rule 70 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 70 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 70 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 70 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 70 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioMat .)


state 399

    (173) valoresTernarioBool -> expBool .
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ,               reduce using rule 173 (valoresTernarioBool -> expBool .)
    )               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 173 (valoresTernarioBool -> expBool .)
    }               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 446
    OR              shift and go to state 186


state 400

    (79) valoresTernarioVars -> varsOps .
    (164) valoresBool -> varsOps .
    (115) valoresMat -> varsOps .
    (200) tCompare -> varsOps .

    :               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ,               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 79 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 164 (valoresBool -> varsOps .)
    OR              reduce using rule 164 (valoresBool -> varsOps .)
    AND             reduce using rule 164 (valoresBool -> varsOps .)
    +               reduce using rule 115 (valoresMat -> varsOps .)
    -               reduce using rule 115 (valoresMat -> varsOps .)
    *               reduce using rule 115 (valoresMat -> varsOps .)
    /               reduce using rule 115 (valoresMat -> varsOps .)
    %               reduce using rule 115 (valoresMat -> varsOps .)
    ^               reduce using rule 115 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 200 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 200 (tCompare -> varsOps .)
    >               reduce using rule 200 (tCompare -> varsOps .)
    <               reduce using rule 200 (tCompare -> varsOps .)


state 401

    (84) valoresTernarioVars -> ( . ternarioVars )
    (126) valoresTernarioMat -> ( . ternarioMat )
    (172) valoresTernarioBool -> ( . ternarioBool )
    (165) valoresBool -> ( . ternarioBool )
    (117) valoresMat -> ( . ternarioMat )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 395
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 351
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 447

state 402

    (80) valoresTernarioVars -> varYVals .
    (102) varsOps -> varYVals . MASMAS
    (103) varsOps -> varYVals . MENOSMENOS
    (163) valoresBool -> varYVals .
    (114) valoresMat -> varYVals .
    (201) tCompare -> varYVals .

    :               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    ,               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 80 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 59
    MENOSMENOS      shift and go to state 56
    ?               reduce using rule 163 (valoresBool -> varYVals .)
    OR              reduce using rule 163 (valoresBool -> varYVals .)
    AND             reduce using rule 163 (valoresBool -> varYVals .)
    +               reduce using rule 114 (valoresMat -> varYVals .)
    -               reduce using rule 114 (valoresMat -> varYVals .)
    *               reduce using rule 114 (valoresMat -> varYVals .)
    /               reduce using rule 114 (valoresMat -> varYVals .)
    %               reduce using rule 114 (valoresMat -> varYVals .)
    ^               reduce using rule 114 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 201 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 201 (tCompare -> varYVals .)
    >               reduce using rule 201 (tCompare -> varYVals .)
    <               reduce using rule 201 (tCompare -> varYVals .)


state 403

    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 448
    OR              shift and go to state 162
    AND             shift and go to state 161


state 404

    (126) valoresTernarioMat -> ( . ternarioMat )
    (84) valoresTernarioVars -> ( . ternarioVars )
    (117) valoresMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 449
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 211
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 450

state 405

    (71) ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .

    :               reduce using rule 71 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ,               reduce using rule 71 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 71 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 71 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 71 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 71 (ternarioVars -> valoresBool ? valoresTernarioMat : valoresTernarioVars .)


state 406

    (118) ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 118 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 118 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 118 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 118 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 118 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 118 (ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat .)


state 407

    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    ?               shift and go to state 451
    OR              shift and go to state 186


state 408

    (126) valoresTernarioMat -> ( ternarioMat ) .
    (117) valoresMat -> ( ternarioMat ) .
    (206) tCompare -> ( ternarioMat ) .

    ,               reduce using rule 126 (valoresTernarioMat -> ( ternarioMat ) .)
    )               reduce using rule 126 (valoresTernarioMat -> ( ternarioMat ) .)
    ;               reduce using rule 126 (valoresTernarioMat -> ( ternarioMat ) .)
    ]               reduce using rule 126 (valoresTernarioMat -> ( ternarioMat ) .)
    :               reduce using rule 126 (valoresTernarioMat -> ( ternarioMat ) .)
    }               reduce using rule 126 (valoresTernarioMat -> ( ternarioMat ) .)
    +               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    -               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    *               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    /               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    %               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    ^               reduce using rule 117 (valoresMat -> ( ternarioMat ) .)
    EQEQ            reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    DISTINTO        reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    >               reduce using rule 206 (tCompare -> ( ternarioMat ) .)
    <               reduce using rule 206 (tCompare -> ( ternarioMat ) .)


state 409

    (172) valoresTernarioBool -> ( ternarioBool ) .
    (165) valoresBool -> ( ternarioBool ) .
    (205) tCompare -> ( ternarioBool ) .

    :               reduce using rule 172 (valoresTernarioBool -> ( ternarioBool ) .)
    ,               reduce using rule 172 (valoresTernarioBool -> ( ternarioBool ) .)
    )               reduce using rule 172 (valoresTernarioBool -> ( ternarioBool ) .)
    ;               reduce using rule 172 (valoresTernarioBool -> ( ternarioBool ) .)
    ]               reduce using rule 172 (valoresTernarioBool -> ( ternarioBool ) .)
    }               reduce using rule 172 (valoresTernarioBool -> ( ternarioBool ) .)
    ?               reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    OR              reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    AND             reduce using rule 165 (valoresBool -> ( ternarioBool ) .)
    EQEQ            reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    DISTINTO        reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    >               reduce using rule 205 (tCompare -> ( ternarioBool ) .)
    <               reduce using rule 205 (tCompare -> ( ternarioBool ) .)


state 410

    (84) valoresTernarioVars -> ( ternarioVars ) .

    :               reduce using rule 84 (valoresTernarioVars -> ( ternarioVars ) .)
    ,               reduce using rule 84 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 84 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 84 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 84 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 84 (valoresTernarioVars -> ( ternarioVars ) .)


state 411

    (126) valoresTernarioMat -> ( . ternarioMat )
    (172) valoresTernarioBool -> ( . ternarioBool )
    (117) valoresMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 283
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 351
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 285

state 412

    (173) valoresTernarioBool -> expBool .
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 355
    OR              shift and go to state 186


state 413

    (168) ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .

    )               reduce using rule 168 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    :               reduce using rule 168 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ,               reduce using rule 168 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ]               reduce using rule 168 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    ;               reduce using rule 168 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)
    }               reduce using rule 168 (ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool .)


state 414

    (78) ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .

    :               reduce using rule 78 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ,               reduce using rule 78 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    )               reduce using rule 78 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ;               reduce using rule 78 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    ]               reduce using rule 78 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)
    }               reduce using rule 78 (ternarioVars -> expBool ? valoresTernarioBool : valoresTernarioVars .)


state 415

    (77) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .

    :               reduce using rule 77 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ,               reduce using rule 77 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    )               reduce using rule 77 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ;               reduce using rule 77 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    ]               reduce using rule 77 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)
    }               reduce using rule 77 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioBool .)


state 416

    (75) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .

    :               reduce using rule 75 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ,               reduce using rule 75 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    )               reduce using rule 75 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ;               reduce using rule 75 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    ]               reduce using rule 75 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)
    }               reduce using rule 75 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioMat .)


state 417

    (74) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    :               reduce using rule 74 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ,               reduce using rule 74 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 74 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 74 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 74 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 74 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 418

    (119) ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .

    )               reduce using rule 119 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ,               reduce using rule 119 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ]               reduce using rule 119 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    :               reduce using rule 119 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    ;               reduce using rule 119 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)
    }               reduce using rule 119 (ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat .)


state 419

    (76) ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .

    :               reduce using rule 76 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ,               reduce using rule 76 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    )               reduce using rule 76 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ;               reduce using rule 76 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    ]               reduce using rule 76 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)
    }               reduce using rule 76 (ternarioVars -> expBool ? valoresTernarioMat : valoresTernarioVars .)


state 420

    (172) valoresTernarioBool -> ( . ternarioBool )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (117) valoresMat -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (43) funcBool -> . COLINEALES ( valores , valores )
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 209
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 210
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 351
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 212

state 421

    (173) valoresTernarioBool -> expBool .
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               reduce using rule 173 (valoresTernarioBool -> expBool .)
    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 364
    OR              shift and go to state 186


state 422

    (98) campos -> ID : valores , . campos
    (98) campos -> . ID : valores , campos
    (99) campos -> . ID : valores

    ID              shift and go to state 206

    campos                         shift and go to state 452

state 423

    (167) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 420
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 118
    valoresTernarioBool            shift and go to state 389
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 421

state 424

    (118) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 379
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 260
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 406
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 220

state 425

    (168) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    BOOL            shift and go to state 271
    (               shift and go to state 420
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 317
    eMat                           shift and go to state 118
    valoresTernarioBool            shift and go to state 413
    mayor                          shift and go to state 108
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    ternarioBool                   shift and go to state 267
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 124
    exp                            shift and go to state 106
    varYVals                       shift and go to state 125
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 421

state 426

    (119) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 379
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 218
    eMat                           shift and go to state 260
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 262
    paren                          shift and go to state 94
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 418
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 220

state 427

    (12) lCerrada -> IF ( cosaBooleana . ) { g } ELSE { g }
    (13) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana . ) { g } ELSE lCerrada
    (15) lCerrada -> IF ( cosaBooleana . ) lCerrada ELSE lCerrada
    (5) lAbierta -> IF ( cosaBooleana . ) linea
    (6) lAbierta -> IF ( cosaBooleana . ) { g } ELSE lAbierta
    (7) lAbierta -> IF ( cosaBooleana . ) lCerrada ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana . ) { g }

    )               shift and go to state 453


state 428

    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .

    IF              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COMMENT         reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    DO              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    WHILE           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    FOR             reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    RETURN          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ;               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MENOSMENOS      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MASMAS          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ID              reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    PRINT           reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    LENGTH          reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    COLINEALES      reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    }               reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    $end            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)
    ELSE            reduce using rule 15 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE lCerrada .)


state 429

    (7) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .

    IF              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COMMENT         reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    DO              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    WHILE           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    FOR             reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    RETURN          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ;               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MASMAS          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    ID              reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    PRINT           reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    LENGTH          reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    COLINEALES      reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    }               reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)
    $end            reduce using rule 7 (lAbierta -> IF ( cosaBooleana ) lCerrada ELSE lAbierta .)


state 430

    (13) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { . g }
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    }               reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 454
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 25
    linea                          shift and go to state 32

state 431

    (6) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) { g } .
    (12) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 455
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 432

    (33) tercerParam -> func .

    )               reduce using rule 33 (tercerParam -> func .)


state 433

    (26) loop -> FOR ( primParam ; valores ; tercerParam . )

    )               shift and go to state 456


state 434

    (32) tercerParam -> varAsig .

    )               reduce using rule 32 (tercerParam -> varAsig .)


state 435

    (34) tercerParam -> empty .

    )               reduce using rule 34 (tercerParam -> empty .)


state 436

    (31) tercerParam -> varsOps .

    )               reduce using rule 31 (tercerParam -> varsOps .)


state 437

    (40) funcInt -> MULTIESCALAR ( valores , valores param ) .

    )               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    EQEQ            reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ;               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ,               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 40 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 438

    (45) param -> , valores .

    )               reduce using rule 45 (param -> , valores .)


state 439

    (12) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada

    ELSE            shift and go to state 457


state 440

    (18) lCerrada -> DO { g } WHILE ( valores ) . ;

    ;               shift and go to state 458


state 441

    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 462
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    valoresBool                    shift and go to state 459
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    expBool                        shift and go to state 460
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 461
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 442

    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 462
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 459
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 294
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 460
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 463
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 443

    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 464
    OR              shift and go to state 162
    AND             shift and go to state 161


state 444

    (214) parenBool -> ( expBool . )
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 465
    OR              shift and go to state 186


state 445

    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 466
    valoresBool                    shift and go to state 395
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 467
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 399

state 446

    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 395
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 468
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 399
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 469
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 447

    (214) parenBool -> ( expBool . )
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 446
    OR              shift and go to state 186


state 448

    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (90) vecVal -> . ID m
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 472
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 470
    valoresBool                    shift and go to state 449
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 268
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 471

state 449

    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 473
    OR              shift and go to state 162
    AND             shift and go to state 161


state 450

    (214) parenBool -> ( expBool . )
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 474
    OR              shift and go to state 186


state 451

    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (90) vecVal -> . ID m
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 472
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 449
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 475
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 471
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 296
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 452

    (98) campos -> ID : valores , campos .

    }               reduce using rule 98 (campos -> ID : valores , campos .)


state 453

    (12) lCerrada -> IF ( cosaBooleana ) . { g } ELSE { g }
    (13) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) . { g } ELSE lCerrada
    (15) lCerrada -> IF ( cosaBooleana ) . lCerrada ELSE lCerrada
    (5) lAbierta -> IF ( cosaBooleana ) . linea
    (6) lAbierta -> IF ( cosaBooleana ) . { g } ELSE lAbierta
    (7) lAbierta -> IF ( cosaBooleana ) . lCerrada ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) . { g }
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 477
    COMMENT         shift and go to state 9
    IF              shift and go to state 329
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 476
    lAbierta                       shift and go to state 29
    linea                          shift and go to state 328
    varYVals                       shift and go to state 25
    loop                           shift and go to state 332

state 454

    (13) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g . }

    }               shift and go to state 478


state 455

    (6) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (12) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 481
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 479
    lAbierta                       shift and go to state 480
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 25
    loop                           shift and go to state 31

state 456

    (26) loop -> FOR ( primParam ; valores ; tercerParam ) .

    {               reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    IF              reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COMMENT         reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    DO              reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    WHILE           reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    FOR             reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    RETURN          reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ;               reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MENOSMENOS      reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MASMAS          reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    ID              reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    PRINT           reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    LENGTH          reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)
    COLINEALES      reduce using rule 26 (loop -> FOR ( primParam ; valores ; tercerParam ) .)


state 457

    (12) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 481
    COMMENT         shift and go to state 9
    IF              shift and go to state 33
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 21
    sentencia                      shift and go to state 10
    funcString                     shift and go to state 23
    funcVoid                       shift and go to state 15
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 479
    funcInt                        shift and go to state 5
    varsOps                        shift and go to state 14
    func                           shift and go to state 19
    funcBool                       shift and go to state 3
    varYVals                       shift and go to state 25
    vecVal                         shift and go to state 8
    loop                           shift and go to state 36

state 458

    (18) lCerrada -> DO { g } WHILE ( valores ) ; .

    IF              reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COMMENT         reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    DO              reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    WHILE           reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    FOR             reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    RETURN          reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ;               reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MENOSMENOS      reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MASMAS          reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ID              reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    PRINT           reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    MULTIESCALAR    reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    LENGTH          reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    CAPITALIZAR     reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    COLINEALES      reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    }               reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    $end            reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)
    ELSE            reduce using rule 18 (lCerrada -> DO { g } WHILE ( valores ) ; .)


state 459

    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 464
    OR              shift and go to state 162
    AND             shift and go to state 161


state 460

    (173) valoresTernarioBool -> expBool .
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat

    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 465
    OR              shift and go to state 186


state 461

    (71) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 482


state 462

    (172) valoresTernarioBool -> ( . ternarioBool )
    (84) valoresTernarioVars -> ( . ternarioVars )
    (126) valoresTernarioMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (117) valoresMat -> ( . ternarioMat )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 443
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 351
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 444

state 463

    (76) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars

    :               shift and go to state 483


state 464

    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 462
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 261
    valoresBool                    shift and go to state 459
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    expBool                        shift and go to state 460
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 467
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 465

    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (90) vecVal -> . ID m
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    BOOL            shift and go to state 271
    (               shift and go to state 462
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    COLINEALES      shift and go to state 4
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 459
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 294
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 460
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 469
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 466

    (73) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars
    (167) ternarioBool -> valoresBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 484


state 467

    (71) ternarioVars -> valoresBool ? valoresTernarioMat . : valoresTernarioVars
    (118) ternarioMat -> valoresBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 485


state 468

    (78) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars
    (168) ternarioBool -> expBool ? valoresTernarioBool . : valoresTernarioBool

    :               shift and go to state 486


state 469

    (76) ternarioVars -> expBool ? valoresTernarioMat . : valoresTernarioVars
    (119) ternarioMat -> expBool ? valoresTernarioMat . : valoresTernarioMat

    :               shift and go to state 487


state 470

    (73) ternarioVars -> valoresBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 488


state 471

    (173) valoresTernarioBool -> expBool .
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 474
    OR              shift and go to state 186


state 472

    (126) valoresTernarioMat -> ( . ternarioMat )
    (84) valoresTernarioVars -> ( . ternarioVars )
    (172) valoresTernarioBool -> ( . ternarioBool )
    (117) valoresMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 449
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 351
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 450

state 473

    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (90) vecVal -> . ID m
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 472
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 466
    valoresBool                    shift and go to state 449
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 268
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 471

state 474

    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (90) vecVal -> . ID m
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    (               shift and go to state 472
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 449
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 468
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 471
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 296
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 272
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 275
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 475

    (78) ternarioVars -> expBool ? valoresTernarioBool . : valoresTernarioVars

    :               shift and go to state 489


state 476

    (13) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE { g }
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada . ELSE lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) lCerrada . ELSE lAbierta
    (4) linea -> lCerrada .

    ELSE            shift and go to state 490
    IF              reduce using rule 4 (linea -> lCerrada .)
    COMMENT         reduce using rule 4 (linea -> lCerrada .)
    DO              reduce using rule 4 (linea -> lCerrada .)
    WHILE           reduce using rule 4 (linea -> lCerrada .)
    FOR             reduce using rule 4 (linea -> lCerrada .)
    RETURN          reduce using rule 4 (linea -> lCerrada .)
    ;               reduce using rule 4 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 4 (linea -> lCerrada .)
    MASMAS          reduce using rule 4 (linea -> lCerrada .)
    ID              reduce using rule 4 (linea -> lCerrada .)
    PRINT           reduce using rule 4 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 4 (linea -> lCerrada .)
    LENGTH          reduce using rule 4 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 4 (linea -> lCerrada .)
    COLINEALES      reduce using rule 4 (linea -> lCerrada .)
    $end            reduce using rule 4 (linea -> lCerrada .)
    }               reduce using rule 4 (linea -> lCerrada .)


state 477

    (12) lCerrada -> IF ( cosaBooleana ) { . g } ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { . g } ELSE lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) { . g } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) { . g }
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    }               reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    linea                          shift and go to state 32
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 491
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 25
    loop                           shift and go to state 31

state 478

    (13) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .

    IF              reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COMMENT         reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    DO              reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    WHILE           reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    FOR             reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    RETURN          reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ;               reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MENOSMENOS      reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MASMAS          reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ID              reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    PRINT           reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    MULTIESCALAR    reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    LENGTH          reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    CAPITALIZAR     reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    COLINEALES      reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    }               reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    $end            reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)
    ELSE            reduce using rule 13 (lCerrada -> IF ( cosaBooleana ) lCerrada ELSE { g } .)


state 479

    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .

    IF              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COMMENT         reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    DO              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    WHILE           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    FOR             reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    RETURN          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ;               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MENOSMENOS      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MASMAS          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ID              reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    PRINT           reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    MULTIESCALAR    reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    LENGTH          reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    CAPITALIZAR     reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    COLINEALES      reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    }               reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    $end            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)
    ELSE            reduce using rule 14 (lCerrada -> IF ( cosaBooleana ) { g } ELSE lCerrada .)


state 480

    (6) lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .

    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) { g } ELSE lAbierta .)


state 481

    (12) lCerrada -> IF ( cosaBooleana ) { g } ELSE { . g }
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (47) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    }               reduce using rule 47 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 492
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 28
    lAbierta                       shift and go to state 29
    loop                           shift and go to state 31
    varYVals                       shift and go to state 25
    linea                          shift and go to state 32

state 482

    (71) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    (               shift and go to state 494
    RES             shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 493
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 405
    exp                            shift and go to state 106
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    varYVals                       shift and go to state 394
    p                              shift and go to state 102
    varsOps                        shift and go to state 392
    ternarioVars                   shift and go to state 274
    mayor                          shift and go to state 108
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 495

state 483

    (76) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    (               shift and go to state 494
    RES             shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 493
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 419
    expBool                        shift and go to state 495
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    varYVals                       shift and go to state 394
    p                              shift and go to state 102
    varsOps                        shift and go to state 392
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    mayor                          shift and go to state 108
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 484

    (73) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (167) ternarioBool -> valoresBool ? valoresTernarioBool : . valoresTernarioBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    (               shift and go to state 498
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 496
    eMat                           shift and go to state 118
    valoresTernarioBool            shift and go to state 389
    mayor                          shift and go to state 108
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 390
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 392
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 394
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 497

state 485

    (71) ternarioVars -> valoresBool ? valoresTernarioMat : . valoresTernarioVars
    (118) ternarioMat -> valoresBool ? valoresTernarioMat : . valoresTernarioMat
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 500
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 499
    eMat                           shift and go to state 260
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 405
    exp                            shift and go to state 106
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 406
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 501

state 486

    (78) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (168) ternarioBool -> expBool ? valoresTernarioBool : . valoresTernarioBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    (               shift and go to state 498
    RES             shift and go to state 257
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 496
    eMat                           shift and go to state 118
    valoresTernarioBool            shift and go to state 413
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 414
    expBool                        shift and go to state 497
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    varYVals                       shift and go to state 394
    p                              shift and go to state 102
    varsOps                        shift and go to state 392
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    mayor                          shift and go to state 108
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 487

    (76) ternarioVars -> expBool ? valoresTernarioMat : . valoresTernarioVars
    (119) ternarioMat -> expBool ? valoresTernarioMat : . valoresTernarioMat
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 500
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 499
    eMat                           shift and go to state 260
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 419
    expBool                        shift and go to state 501
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 418
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 488

    (73) ternarioVars -> valoresBool ? valoresTernarioBool : . valoresTernarioVars
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    (               shift and go to state 494
    RES             shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 493
    eMat                           shift and go to state 118
    mayor                          shift and go to state 108
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 390
    exp                            shift and go to state 106
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 392
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 394
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 495

state 489

    (78) ternarioVars -> expBool ? valoresTernarioBool : . valoresTernarioVars
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (43) funcBool -> . COLINEALES ( valores , valores )
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (214) parenBool -> . ( expBool )
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )

    (               shift and go to state 494
    RES             shift and go to state 257
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    COLINEALES      shift and go to state 4
    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 117
    NOT             shift and go to state 105
    -               shift and go to state 85
    +               shift and go to state 84

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 115
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 493
    eMat                           shift and go to state 118
    vecVal                         shift and go to state 8
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 414
    expBool                        shift and go to state 495
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    varYVals                       shift and go to state 394
    p                              shift and go to state 102
    varsOps                        shift and go to state 392
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    mayor                          shift and go to state 108
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 490

    (13) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . { g }
    (15) lCerrada -> IF ( cosaBooleana ) lCerrada ELSE . lCerrada
    (7) lAbierta -> IF ( cosaBooleana ) lCerrada ELSE . lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 430
    COMMENT         shift and go to state 9
    IF              shift and go to state 329
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 428
    lAbierta                       shift and go to state 429
    loop                           shift and go to state 332
    varYVals                       shift and go to state 25

state 491

    (12) lCerrada -> IF ( cosaBooleana ) { g . } ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g . } ELSE lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) { g . } ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) { g . }

    }               shift and go to state 502


state 492

    (12) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g . }

    }               shift and go to state 503


state 493

    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 504
    OR              shift and go to state 162
    AND             shift and go to state 161


state 494

    (84) valoresTernarioVars -> ( . ternarioVars )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (117) valoresMat -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (43) funcBool -> . COLINEALES ( valores , valores )
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 505
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 210
    paren                          shift and go to state 94
    ternarioBool                   shift and go to state 211
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 506

state 495

    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    ?               shift and go to state 507
    OR              shift and go to state 186


state 496

    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 508
    OR              shift and go to state 162
    AND             shift and go to state 161


state 497

    (173) valoresTernarioBool -> expBool .
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    ,               reduce using rule 173 (valoresTernarioBool -> expBool .)
    )               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 173 (valoresTernarioBool -> expBool .)
    :               reduce using rule 173 (valoresTernarioBool -> expBool .)
    }               reduce using rule 173 (valoresTernarioBool -> expBool .)
    ?               shift and go to state 509
    OR              shift and go to state 186


state 498

    (84) valoresTernarioVars -> ( . ternarioVars )
    (172) valoresTernarioBool -> ( . ternarioBool )
    (165) valoresBool -> ( . ternarioBool )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (117) valoresMat -> ( . ternarioMat )
    (214) parenBool -> ( . expBool )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (43) funcBool -> . COLINEALES ( valores , valores )
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 505
    eMat                           shift and go to state 169
    mayor                          shift and go to state 108
    ternarioMat                    shift and go to state 210
    paren                          shift and go to state 94
    ternarioBool                   shift and go to state 351
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 175
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 506

state 499

    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 510
    OR              shift and go to state 162
    AND             shift and go to state 161


state 500

    (84) valoresTernarioVars -> ( . ternarioVars )
    (126) valoresTernarioMat -> ( . ternarioMat )
    (165) valoresBool -> ( . ternarioBool )
    (117) valoresMat -> ( . ternarioMat )
    (205) tCompare -> ( . ternarioBool )
    (206) tCompare -> ( . ternarioMat )
    (159) paren -> ( . eMat )
    (160) paren -> ( . valoresMat )
    (214) parenBool -> ( . expBool )
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (43) funcBool -> . COLINEALES ( valores , valores )
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (90) vecVal -> . ID m
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    INT             shift and go to state 173
    FLOAT           shift and go to state 174
    STRING          shift and go to state 117
    (               shift and go to state 170
    BOOL            shift and go to state 123
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    COLINEALES      shift and go to state 4
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 114
    funcInt                        shift and go to state 166
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 167
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 169
    valoresBool                    shift and go to state 395
    ternarioMat                    shift and go to state 350
    paren                          shift and go to state 94
    varsOps                        shift and go to state 175
    ternarioBool                   shift and go to state 211
    tCompare                       shift and go to state 93
    not                            shift and go to state 95
    p                              shift and go to state 102
    iSing                          shift and go to state 91
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 352
    varYVals                       shift and go to state 177
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 447

state 501

    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    ?               shift and go to state 511
    OR              shift and go to state 186


state 502

    (12) lCerrada -> IF ( cosaBooleana ) { g } . ELSE { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g } . ELSE lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) { g } . ELSE lAbierta
    (8) lAbierta -> IF ( cosaBooleana ) { g } .

    ELSE            shift and go to state 512
    IF              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COMMENT         reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    DO              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    WHILE           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    FOR             reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    RETURN          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ;               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MENOSMENOS      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MASMAS          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    ID              reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    PRINT           reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    MULTIESCALAR    reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    LENGTH          reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    CAPITALIZAR     reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    COLINEALES      reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    $end            reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)
    }               reduce using rule 8 (lAbierta -> IF ( cosaBooleana ) { g } .)


state 503

    (12) lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .

    IF              reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COMMENT         reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    DO              reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    WHILE           reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    FOR             reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    RETURN          reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ;               reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MENOSMENOS      reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MASMAS          reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ID              reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    PRINT           reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    MULTIESCALAR    reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    LENGTH          reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    CAPITALIZAR     reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    COLINEALES      reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    }               reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    $end            reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)
    ELSE            reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) { g } ELSE { g } .)


state 504

    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 470
    valoresBool                    shift and go to state 395
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 461
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 399

state 505

    (69) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool . ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool . ? valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> valoresBool . ? valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> valoresBool . ? valoresTernarioMat : valoresTernarioMat
    (181) expBool -> valoresBool . OR and
    (183) expBool -> valoresBool . OR valoresBool
    (186) and -> valoresBool . AND eq
    (188) and -> valoresBool . AND valoresBool

    ?               shift and go to state 513
    OR              shift and go to state 162
    AND             shift and go to state 161


state 506

    (214) parenBool -> ( expBool . )
    (74) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool . ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool . ? valoresTernarioBool : valoresTernarioVars
    (168) ternarioBool -> expBool . ? valoresTernarioBool : valoresTernarioBool
    (119) ternarioMat -> expBool . ? valoresTernarioMat : valoresTernarioMat
    (180) expBool -> expBool . OR and
    (182) expBool -> expBool . OR valoresBool

    )               shift and go to state 289
    ?               shift and go to state 514
    OR              shift and go to state 186


state 507

    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 395
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 475
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 399
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 463
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 508

    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 466
    valoresBool                    shift and go to state 395
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 461
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 399

state 509

    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 395
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 468
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 399
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 463
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 510

    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 470
    valoresBool                    shift and go to state 395
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 467
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 399

state 511

    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 395
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 475
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 399
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 469
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255

state 512

    (12) lCerrada -> IF ( cosaBooleana ) { g } ELSE . { g }
    (14) lCerrada -> IF ( cosaBooleana ) { g } ELSE . lCerrada
    (6) lAbierta -> IF ( cosaBooleana ) { g } ELSE . lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT lCerrada
    (12) lCerrada -> . IF ( cosaBooleana ) { g } ELSE { g }
    (13) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE { g }
    (14) lCerrada -> . IF ( cosaBooleana ) { g } ELSE lCerrada
    (15) lCerrada -> . IF ( cosaBooleana ) lCerrada ELSE lCerrada
    (16) lCerrada -> . loop { g }
    (17) lCerrada -> . loop lCerrada
    (18) lCerrada -> . DO { g } WHILE ( valores ) ;
    (19) lCerrada -> . DO lCerrada WHILE ( valores ) ;
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) { g } ELSE lAbierta
    (7) lAbierta -> . IF ( cosaBooleana ) lCerrada ELSE lAbierta
    (8) lAbierta -> . IF ( cosaBooleana ) { g }
    (9) lAbierta -> . loop lAbierta
    (20) sentencia -> . varsOps ;
    (21) sentencia -> . func ;
    (22) sentencia -> . varAsig ;
    (23) sentencia -> . RETURN ;
    (24) sentencia -> . ;
    (25) loop -> . WHILE ( valores )
    (26) loop -> . FOR ( primParam ; valores ; tercerParam )
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (35) func -> . funcReturn
    (36) func -> . funcVoid
    (105) varAsig -> . varYVals MULEQ valoresAsig
    (106) varAsig -> . varYVals DIVEQ valoresAsig
    (107) varAsig -> . varYVals MASEQ valoresAsig
    (108) varAsig -> . varYVals MENOSEQ valoresAsig
    (109) varAsig -> . varYVals = valoresAsig
    (110) varAsig -> . ID . ID = valoresAsig
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (37) funcReturn -> . funcInt
    (38) funcReturn -> . funcString
    (39) funcReturn -> . funcBool
    (44) funcVoid -> . PRINT ( valores )
    (90) vecVal -> . ID m
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (42) funcString -> . CAPITALIZAR ( valores )
    (43) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 481
    COMMENT         shift and go to state 9
    IF              shift and go to state 329
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 27
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 26
    lCerrada                       shift and go to state 479
    lAbierta                       shift and go to state 480
    loop                           shift and go to state 332
    varYVals                       shift and go to state 25

state 513

    (69) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> valoresBool ? . valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> valoresBool ? . valoresTernarioBool : valoresTernarioVars
    (167) ternarioBool -> valoresBool ? . valoresTernarioBool : valoresTernarioBool
    (118) ternarioMat -> valoresBool ? . valoresTernarioMat : valoresTernarioMat
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    atributos                      shift and go to state 255
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    vecVal                         shift and go to state 8
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 466
    valoresBool                    shift and go to state 395
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 265
    exp                            shift and go to state 106
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 467
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    expBool                        shift and go to state 399

state 514

    (74) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> expBool ? . valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> expBool ? . valoresTernarioBool : valoresTernarioVars
    (168) ternarioBool -> expBool ? . valoresTernarioBool : valoresTernarioBool
    (119) ternarioMat -> expBool ? . valoresTernarioMat : valoresTernarioMat
    (79) valoresTernarioVars -> . varsOps
    (80) valoresTernarioVars -> . varYVals
    (81) valoresTernarioVars -> . reg
    (82) valoresTernarioVars -> . vec
    (83) valoresTernarioVars -> . ternarioVars
    (84) valoresTernarioVars -> . ( ternarioVars )
    (85) valoresTernarioVars -> . atributos
    (86) valoresTernarioVars -> . RES
    (120) valoresTernarioMat -> . INT
    (121) valoresTernarioMat -> . FLOAT
    (122) valoresTernarioMat -> . funcInt
    (123) valoresTernarioMat -> . STRING
    (124) valoresTernarioMat -> . eMat
    (125) valoresTernarioMat -> . ternarioMat
    (126) valoresTernarioMat -> . ( ternarioMat )
    (169) valoresTernarioBool -> . BOOL
    (170) valoresTernarioBool -> . funcBool
    (171) valoresTernarioBool -> . ternarioBool
    (172) valoresTernarioBool -> . ( ternarioBool )
    (173) valoresTernarioBool -> . expBool
    (100) varsOps -> . MENOSMENOS varYVals
    (101) varsOps -> . MASMAS varYVals
    (102) varsOps -> . varYVals MASMAS
    (103) varsOps -> . varYVals MENOSMENOS
    (87) varYVals -> . ID
    (88) varYVals -> . vecVal
    (89) varYVals -> . vecVal . varYVals
    (97) reg -> . { campos }
    (48) vec -> . [ elem ]
    (69) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (70) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioMat
    (71) ternarioVars -> . valoresBool ? valoresTernarioMat : valoresTernarioVars
    (72) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioBool
    (73) ternarioVars -> . valoresBool ? valoresTernarioBool : valoresTernarioVars
    (74) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (75) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioMat
    (76) ternarioVars -> . expBool ? valoresTernarioMat : valoresTernarioVars
    (77) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioBool
    (78) ternarioVars -> . expBool ? valoresTernarioBool : valoresTernarioVars
    (65) atributos -> . ID . valoresCampos
    (40) funcInt -> . MULTIESCALAR ( valores , valores param )
    (41) funcInt -> . LENGTH ( valores )
    (127) eMat -> . eMat + p
    (128) eMat -> . eMat - p
    (129) eMat -> . valoresMat + p
    (130) eMat -> . valoresMat - p
    (131) eMat -> . eMat + valoresMat
    (132) eMat -> . eMat - valoresMat
    (133) eMat -> . valoresMat + valoresMat
    (134) eMat -> . valoresMat - valoresMat
    (135) eMat -> . p
    (118) ternarioMat -> . valoresBool ? valoresTernarioMat : valoresTernarioMat
    (119) ternarioMat -> . expBool ? valoresTernarioMat : valoresTernarioMat
    (43) funcBool -> . COLINEALES ( valores , valores )
    (167) ternarioBool -> . valoresBool ? valoresTernarioBool : valoresTernarioBool
    (168) ternarioBool -> . expBool ? valoresTernarioBool : valoresTernarioBool
    (180) expBool -> . expBool OR and
    (181) expBool -> . valoresBool OR and
    (182) expBool -> . expBool OR valoresBool
    (183) expBool -> . valoresBool OR valoresBool
    (184) expBool -> . and
    (90) vecVal -> . ID m
    (161) valoresBool -> . BOOL
    (162) valoresBool -> . funcBool
    (163) valoresBool -> . varYVals
    (164) valoresBool -> . varsOps
    (165) valoresBool -> . ( ternarioBool )
    (166) valoresBool -> .
    (111) valoresMat -> . INT
    (112) valoresMat -> . FLOAT
    (113) valoresMat -> . funcInt
    (114) valoresMat -> . varYVals
    (115) valoresMat -> . varsOps
    (116) valoresMat -> . STRING
    (117) valoresMat -> . ( ternarioMat )
    (136) p -> . p * exp
    (137) p -> . p / exp
    (138) p -> . p % exp
    (139) p -> . valoresMat * exp
    (140) p -> . valoresMat / exp
    (141) p -> . valoresMat % exp
    (142) p -> . p * valoresMat
    (143) p -> . p / valoresMat
    (144) p -> . p % valoresMat
    (145) p -> . valoresMat * valoresMat
    (146) p -> . valoresMat / valoresMat
    (147) p -> . valoresMat % valoresMat
    (148) p -> . exp
    (185) and -> . and AND eq
    (186) and -> . valoresBool AND eq
    (187) and -> . and AND valoresBool
    (188) and -> . valoresBool AND valoresBool
    (189) and -> . eq
    (149) exp -> . exp ^ iSing
    (150) exp -> . valoresMat ^ iSing
    (151) exp -> . exp ^ valoresMat
    (152) exp -> . valoresMat ^ valoresMat
    (153) exp -> . iSing
    (190) eq -> . eq EQEQ mayor
    (191) eq -> . eq DISTINTO mayor
    (192) eq -> . tCompare EQEQ mayor
    (193) eq -> . tCompare DISTINTO mayor
    (194) eq -> . eq EQEQ tCompare
    (195) eq -> . eq DISTINTO tCompare
    (196) eq -> . tCompare EQEQ tCompare
    (197) eq -> . tCompare DISTINTO tCompare
    (198) eq -> . mayor
    (154) iSing -> . - paren
    (155) iSing -> . + paren
    (156) iSing -> . - valoresMat
    (157) iSing -> . + valoresMat
    (158) iSing -> . paren
    (199) tCompare -> . eMat
    (200) tCompare -> . varsOps
    (201) tCompare -> . varYVals
    (202) tCompare -> . INT
    (203) tCompare -> . funcInt
    (204) tCompare -> . FLOAT
    (205) tCompare -> . ( ternarioBool )
    (206) tCompare -> . ( ternarioMat )
    (207) mayor -> . tCompare > tCompare
    (208) mayor -> . menor
    (159) paren -> . ( eMat )
    (160) paren -> . ( valoresMat )
    (209) menor -> . tCompare < tCompare
    (210) menor -> . not
    (211) not -> . NOT not
    (212) not -> . NOT valoresBool
    (213) not -> . parenBool
    (214) parenBool -> . ( expBool )

    (               shift and go to state 401
    RES             shift and go to state 257
    INT             shift and go to state 269
    FLOAT           shift and go to state 270
    STRING          shift and go to state 266
    BOOL            shift and go to state 271
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 30
    ID              shift and go to state 97
    {               shift and go to state 107
    [               shift and go to state 96
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    ?               reduce using rule 166 (valoresBool -> .)
    OR              reduce using rule 166 (valoresBool -> .)
    AND             reduce using rule 166 (valoresBool -> .)
    -               shift and go to state 85
    +               shift and go to state 84
    NOT             shift and go to state 105

    and                            shift and go to state 71
    funcBool                       shift and go to state 256
    funcInt                        shift and go to state 258
    menor                          shift and go to state 76
    mayor                          shift and go to state 108
    valoresMat                     shift and go to state 78
    eq                             shift and go to state 79
    valoresBool                    shift and go to state 395
    eMat                           shift and go to state 260
    valoresTernarioBool            shift and go to state 468
    vecVal                         shift and go to state 8
    ternarioMat                    shift and go to state 262
    vec                            shift and go to state 263
    paren                          shift and go to state 94
    reg                            shift and go to state 264
    valoresTernarioVars            shift and go to state 295
    expBool                        shift and go to state 399
    ternarioBool                   shift and go to state 267
    iSing                          shift and go to state 91
    tCompare                       shift and go to state 93
    valoresTernarioMat             shift and go to state 469
    not                            shift and go to state 95
    p                              shift and go to state 102
    varsOps                        shift and go to state 400
    exp                            shift and go to state 106
    ternarioVars                   shift and go to state 274
    varYVals                       shift and go to state 402
    parenBool                      shift and go to state 92
    atributos                      shift and go to state 255
