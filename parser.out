Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> g
Rule 1     g -> linea g
Rule 2     g -> empty
Rule 3     linea -> lAbierta
Rule 4     linea -> lCerrada
Rule 5     lAbierta -> IF ( cosaBooleana ) linea
Rule 6     lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta
Rule 7     lAbierta -> loop lAbierta
Rule 8     bloqueCerrado -> lCerrada
Rule 9     bloqueCerrado -> { g }
Rule 10    lCerrada -> sentencia
Rule 11    lCerrada -> COMMENT
Rule 12    lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
Rule 13    lCerrada -> loop bloqueCerrado
Rule 14    lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ;
Rule 15    sentencia -> varsOps ;
Rule 16    sentencia -> func ;
Rule 17    sentencia -> varAsig ;
Rule 18    sentencia -> RETURN ;
Rule 19    sentencia -> ;
Rule 20    loop -> WHILE ( cosaBooleana )
Rule 21    loop -> FOR ( primParam ; cosaBooleana ; tercerParam )
Rule 22    cosaBooleana -> expBool
Rule 23    cosaBooleana -> valoresBool
Rule 24    primParam -> varAsig
Rule 25    primParam -> empty
Rule 26    tercerParam -> varsOps
Rule 27    tercerParam -> varAsig
Rule 28    tercerParam -> func
Rule 29    tercerParam -> empty
Rule 30    func -> funcReturn
Rule 31    func -> funcVoid
Rule 32    funcReturn -> funcInt
Rule 33    funcReturn -> funcString
Rule 34    funcReturn -> funcBool
Rule 35    funcInt -> MULTIESCALAR ( valores , valores param )
Rule 36    funcInt -> LENGTH ( valores )
Rule 37    funcString -> CAPITALIZAR ( valores )
Rule 38    funcBool -> COLINEALES ( valores , valores )
Rule 39    funcVoid -> PRINT ( valores )
Rule 40    param -> , valores
Rule 41    param -> empty
Rule 42    empty -> <empty>
Rule 43    vec -> [ elem ]
Rule 44    elem -> valores , elem
Rule 45    elem -> valores
Rule 46    valores -> eMat
Rule 47    valores -> expBool
Rule 48    valores -> funcReturn
Rule 49    valores -> reg
Rule 50    valores -> INT
Rule 51    valores -> FLOAT
Rule 52    valores -> STRING
Rule 53    valores -> BOOL
Rule 54    valores -> varYVals
Rule 55    valores -> varsOps
Rule 56    valores -> vec
Rule 57    valores -> ternarioVars
Rule 58    valores -> ( ternarioVars )
Rule 59    valores -> atributos
Rule 60    valores -> RES
Rule 61    atributos -> ID . valoresCampos
Rule 62    valoresCampos -> varYVals
Rule 63    valoresCampos -> END
Rule 64    valoresCampos -> BEGIN
Rule 65    ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars
Rule 66    ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars
Rule 67    valoresTernarioVars -> varsOps
Rule 68    valoresTernarioVars -> varYVals
Rule 69    valoresTernarioVars -> reg
Rule 70    valoresTernarioVars -> vec
Rule 71    valoresTernarioVars -> ternarioVars
Rule 72    valoresTernarioVars -> ( ternarioVars )
Rule 73    valoresTernarioVars -> valoresTernarioMat
Rule 74    valoresTernarioVars -> valoresTernarioBool
Rule 75    valoresTernarioVars -> atributos
Rule 76    valoresTernarioVars -> RES
Rule 77    varYVals -> ID
Rule 78    varYVals -> vecVal
Rule 79    varYVals -> vecVal . varYVals
Rule 80    vecVal -> ID m
Rule 81    m -> [ INT ]
Rule 82    m -> [ INT ] m
Rule 83    m -> [ varYVals ] m
Rule 84    m -> [ varYVals ]
Rule 85    m -> [ eMat ] m
Rule 86    m -> [ eMat ]
Rule 87    reg -> { campos }
Rule 88    campos -> ID : valores , campos
Rule 89    campos -> ID : valores
Rule 90    varsOps -> MENOSMENOS varYVals
Rule 91    varsOps -> MASMAS varYVals
Rule 92    varsOps -> varYVals MASMAS
Rule 93    varsOps -> varYVals MENOSMENOS
Rule 94    valoresAsig -> valores
Rule 95    varAsig -> varYVals MULEQ valoresAsig
Rule 96    varAsig -> varYVals DIVEQ valoresAsig
Rule 97    varAsig -> varYVals MASEQ valoresAsig
Rule 98    varAsig -> varYVals MENOSEQ valoresAsig
Rule 99    varAsig -> varYVals = valoresAsig
Rule 100   varAsig -> ID . ID = valoresAsig
Rule 101   valoresMat -> INT
Rule 102   valoresMat -> FLOAT
Rule 103   valoresMat -> funcInt
Rule 104   valoresMat -> varYVals
Rule 105   valoresMat -> varsOps
Rule 106   valoresMat -> STRING
Rule 107   ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat
Rule 108   ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat
Rule 109   valoresTernarioMat -> INT
Rule 110   valoresTernarioMat -> FLOAT
Rule 111   valoresTernarioMat -> funcInt
Rule 112   valoresTernarioMat -> STRING
Rule 113   valoresTernarioMat -> eMat
Rule 114   eMat -> eMat + p
Rule 115   eMat -> eMat - p
Rule 116   eMat -> valoresMat + p
Rule 117   eMat -> valoresMat - p
Rule 118   eMat -> eMat + valoresMat
Rule 119   eMat -> eMat - valoresMat
Rule 120   eMat -> valoresMat + valoresMat
Rule 121   eMat -> valoresMat - valoresMat
Rule 122   eMat -> p
Rule 123   p -> p * exp
Rule 124   p -> p / exp
Rule 125   p -> p % exp
Rule 126   p -> valoresMat * exp
Rule 127   p -> valoresMat / exp
Rule 128   p -> valoresMat % exp
Rule 129   p -> p * valoresMat
Rule 130   p -> p / valoresMat
Rule 131   p -> p % valoresMat
Rule 132   p -> valoresMat * valoresMat
Rule 133   p -> valoresMat / valoresMat
Rule 134   p -> valoresMat % valoresMat
Rule 135   p -> exp
Rule 136   exp -> exp ^ iSing
Rule 137   exp -> valoresMat ^ iSing
Rule 138   exp -> exp ^ valoresMat
Rule 139   exp -> valoresMat ^ valoresMat
Rule 140   exp -> iSing
Rule 141   iSing -> - paren
Rule 142   iSing -> + paren
Rule 143   iSing -> - valoresMat
Rule 144   iSing -> + valoresMat
Rule 145   iSing -> paren
Rule 146   paren -> ( eMat )
Rule 147   paren -> ( valoresMat )
Rule 148   valoresBool -> BOOL
Rule 149   valoresBool -> funcBool
Rule 150   valoresBool -> varYVals
Rule 151   valoresBool -> varsOps
Rule 152   ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool
Rule 153   ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool
Rule 154   valoresTernarioBool -> BOOL
Rule 155   valoresTernarioBool -> funcBool
Rule 156   valoresTernarioBool -> expBool
Rule 157   ternario -> valoresBool ? valores : valores
Rule 158   ternario -> expBool ? valores : valores
Rule 159   ternario -> ( ternario )
Rule 160   expBool -> expBool OR and
Rule 161   expBool -> valoresBool OR and
Rule 162   expBool -> expBool OR valoresBool
Rule 163   expBool -> valoresBool OR valoresBool
Rule 164   expBool -> and
Rule 165   and -> and AND eq
Rule 166   and -> valoresBool AND eq
Rule 167   and -> and AND valoresBool
Rule 168   and -> valoresBool AND valoresBool
Rule 169   and -> eq
Rule 170   eq -> eq EQEQ mayor
Rule 171   eq -> eq DISTINTO mayor
Rule 172   eq -> tCompare EQEQ mayor
Rule 173   eq -> tCompare DISTINTO mayor
Rule 174   eq -> eq EQEQ tCompare
Rule 175   eq -> eq DISTINTO tCompare
Rule 176   eq -> tCompare EQEQ tCompare
Rule 177   eq -> tCompare DISTINTO tCompare
Rule 178   eq -> mayor
Rule 179   tCompare -> eMat
Rule 180   tCompare -> varsOps
Rule 181   tCompare -> varYVals
Rule 182   tCompare -> INT
Rule 183   tCompare -> funcInt
Rule 184   tCompare -> FLOAT
Rule 185   mayor -> tCompare > tCompare
Rule 186   mayor -> menor
Rule 187   menor -> tCompare < tCompare
Rule 188   menor -> not
Rule 189   not -> NOT not
Rule 190   not -> NOT valoresBool
Rule 191   not -> parenBool
Rule 192   parenBool -> ( expBool )

Terminals, with rules where they appear

%                    : 125 128 131 134
(                    : 5 6 12 14 20 21 35 36 37 38 39 58 72 146 147 159 192
)                    : 5 6 12 14 20 21 35 36 37 38 39 58 72 146 147 159 192
*                    : 123 126 129 132
+                    : 114 116 118 120 142 144
,                    : 35 38 40 44 88
-                    : 115 117 119 121 141 143
.                    : 61 79 100
/                    : 124 127 130 133
:                    : 65 66 88 89 107 108 152 153 157 158
;                    : 14 15 16 17 18 19 21 21
<                    : 187
=                    : 99 100
>                    : 185
?                    : 65 66 107 108 152 153 157 158
AND                  : 165 166 167 168
BEGIN                : 64
BOOL                 : 53 148 154
CAPITALIZAR          : 37
COLINEALES           : 38
COMMENT              : 11
DISTINTO             : 171 173 175 177
DIVEQ                : 96
DO                   : 14
ELSE                 : 6 12
END                  : 63
EQEQ                 : 170 172 174 176
FLOAT                : 51 102 110 184
FOR                  : 21
ID                   : 61 77 80 88 89 100 100
IF                   : 5 6 12
INT                  : 50 81 82 101 109 182
LENGTH               : 36
MASEQ                : 97
MASMAS               : 91 92
MENOSEQ              : 98
MENOSMENOS           : 90 93
MULEQ                : 95
MULTIESCALAR         : 35
NOT                  : 189 190
OR                   : 160 161 162 163
PRINT                : 39
RES                  : 60 76
RETURN               : 18
STRING               : 52 106 112
WHILE                : 14 20
[                    : 43 81 82 83 84 85 86
]                    : 43 81 82 83 84 85 86
^                    : 136 137 138 139
error                : 
{                    : 9 87
}                    : 9 87

Nonterminals, with rules where they appear

and                  : 160 161 164 165 167
atributos            : 59 75
bloqueCerrado        : 6 12 12 13 14
campos               : 87 88
cosaBooleana         : 5 6 12 14 20 21
eMat                 : 46 85 86 113 114 115 118 119 146 179
elem                 : 43 44
empty                : 2 25 29 41
eq                   : 165 166 169 170 171 174 175
exp                  : 123 124 125 126 127 128 135 136 138
expBool              : 22 47 66 108 153 156 158 160 162 192
func                 : 16 28
funcBool             : 34 149 155
funcInt              : 32 103 111 183
funcReturn           : 30 48
funcString           : 33
funcVoid             : 31
g                    : 1 9 0
iSing                : 136 137 140
lAbierta             : 3 6 7
lCerrada             : 4 8
linea                : 1 5
loop                 : 7 13
m                    : 80 82 83 85
mayor                : 170 171 172 173 178
menor                : 186
not                  : 188 189
p                    : 114 115 116 117 122 123 124 125 129 130 131
param                : 35
paren                : 141 142 145
parenBool            : 191
primParam            : 21
reg                  : 49 69
sentencia            : 10
tCompare             : 172 173 174 175 176 176 177 177 185 185 187 187
tercerParam          : 21
ternario             : 159
ternarioBool         : 
ternarioMat          : 
ternarioVars         : 57 58 71 72
valores              : 35 35 36 37 38 38 39 40 44 45 88 89 94 157 157 158 158
valoresAsig          : 95 96 97 98 99 100
valoresBool          : 23 65 107 152 157 161 162 163 163 166 167 168 168 190
valoresCampos        : 61
valoresMat           : 116 117 118 119 120 120 121 121 126 127 128 129 130 131 132 132 133 133 134 134 137 138 139 139 143 144 147
valoresTernarioBool  : 74 152 152 153 153
valoresTernarioMat   : 73 107 107 108 108
valoresTernarioVars  : 65 65 66 66
varAsig              : 17 24 27
varYVals             : 54 62 68 79 83 84 90 91 92 93 95 96 97 98 99 104 150 181
varsOps              : 15 26 55 67 105 151 180
vec                  : 56 70
vecVal               : 78 79

Parsing method: LALR

state 0

    (0) S' -> . g
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (42) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta
    (7) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    $end            reduce using rule 42 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 22
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 27
    lAbierta                       shift and go to state 28
    loop                           shift and go to state 30
    varYVals                       shift and go to state 31
    linea                          shift and go to state 32

state 1

    (14) lCerrada -> DO . bloqueCerrado WHILE ( cosaBooleana ) ;
    (8) bloqueCerrado -> . lCerrada
    (9) bloqueCerrado -> . { g }
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 36
    COMMENT         shift and go to state 9
    IF              shift and go to state 34
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    bloqueCerrado                  shift and go to state 33
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 35
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 31
    loop                           shift and go to state 37

state 2

    (18) sentencia -> RETURN . ;

    ;               shift and go to state 38


state 3

    (34) funcReturn -> funcBool .

    ;               reduce using rule 34 (funcReturn -> funcBool .)
    )               reduce using rule 34 (funcReturn -> funcBool .)


state 4

    (38) funcBool -> COLINEALES . ( valores , valores )

    (               shift and go to state 39


state 5

    (32) funcReturn -> funcInt .

    ;               reduce using rule 32 (funcReturn -> funcInt .)
    )               reduce using rule 32 (funcReturn -> funcInt .)


state 6

    (20) loop -> WHILE . ( cosaBooleana )

    (               shift and go to state 40


state 7

    (39) funcVoid -> PRINT . ( valores )

    (               shift and go to state 41


state 8

    (78) varYVals -> vecVal .
    (79) varYVals -> vecVal . . varYVals

    MASMAS          reduce using rule 78 (varYVals -> vecVal .)
    MENOSMENOS      reduce using rule 78 (varYVals -> vecVal .)
    ;               reduce using rule 78 (varYVals -> vecVal .)
    )               reduce using rule 78 (varYVals -> vecVal .)
    +               reduce using rule 78 (varYVals -> vecVal .)
    -               reduce using rule 78 (varYVals -> vecVal .)
    *               reduce using rule 78 (varYVals -> vecVal .)
    /               reduce using rule 78 (varYVals -> vecVal .)
    %               reduce using rule 78 (varYVals -> vecVal .)
    ^               reduce using rule 78 (varYVals -> vecVal .)
    OR              reduce using rule 78 (varYVals -> vecVal .)
    ?               reduce using rule 78 (varYVals -> vecVal .)
    AND             reduce using rule 78 (varYVals -> vecVal .)
    EQEQ            reduce using rule 78 (varYVals -> vecVal .)
    DISTINTO        reduce using rule 78 (varYVals -> vecVal .)
    >               reduce using rule 78 (varYVals -> vecVal .)
    <               reduce using rule 78 (varYVals -> vecVal .)
    ,               reduce using rule 78 (varYVals -> vecVal .)
    ]               reduce using rule 78 (varYVals -> vecVal .)
    :               reduce using rule 78 (varYVals -> vecVal .)
    }               reduce using rule 78 (varYVals -> vecVal .)
    MULEQ           reduce using rule 78 (varYVals -> vecVal .)
    DIVEQ           reduce using rule 78 (varYVals -> vecVal .)
    MASEQ           reduce using rule 78 (varYVals -> vecVal .)
    MENOSEQ         reduce using rule 78 (varYVals -> vecVal .)
    =               reduce using rule 78 (varYVals -> vecVal .)
    .               shift and go to state 42


state 9

    (11) lCerrada -> COMMENT .

    WHILE           reduce using rule 11 (lCerrada -> COMMENT .)
    ELSE            reduce using rule 11 (lCerrada -> COMMENT .)
    IF              reduce using rule 11 (lCerrada -> COMMENT .)
    COMMENT         reduce using rule 11 (lCerrada -> COMMENT .)
    DO              reduce using rule 11 (lCerrada -> COMMENT .)
    FOR             reduce using rule 11 (lCerrada -> COMMENT .)
    RETURN          reduce using rule 11 (lCerrada -> COMMENT .)
    ;               reduce using rule 11 (lCerrada -> COMMENT .)
    MENOSMENOS      reduce using rule 11 (lCerrada -> COMMENT .)
    MASMAS          reduce using rule 11 (lCerrada -> COMMENT .)
    ID              reduce using rule 11 (lCerrada -> COMMENT .)
    PRINT           reduce using rule 11 (lCerrada -> COMMENT .)
    MULTIESCALAR    reduce using rule 11 (lCerrada -> COMMENT .)
    LENGTH          reduce using rule 11 (lCerrada -> COMMENT .)
    CAPITALIZAR     reduce using rule 11 (lCerrada -> COMMENT .)
    COLINEALES      reduce using rule 11 (lCerrada -> COMMENT .)
    $end            reduce using rule 11 (lCerrada -> COMMENT .)
    }               reduce using rule 11 (lCerrada -> COMMENT .)


state 10

    (10) lCerrada -> sentencia .

    WHILE           reduce using rule 10 (lCerrada -> sentencia .)
    ELSE            reduce using rule 10 (lCerrada -> sentencia .)
    IF              reduce using rule 10 (lCerrada -> sentencia .)
    COMMENT         reduce using rule 10 (lCerrada -> sentencia .)
    DO              reduce using rule 10 (lCerrada -> sentencia .)
    FOR             reduce using rule 10 (lCerrada -> sentencia .)
    RETURN          reduce using rule 10 (lCerrada -> sentencia .)
    ;               reduce using rule 10 (lCerrada -> sentencia .)
    MENOSMENOS      reduce using rule 10 (lCerrada -> sentencia .)
    MASMAS          reduce using rule 10 (lCerrada -> sentencia .)
    ID              reduce using rule 10 (lCerrada -> sentencia .)
    PRINT           reduce using rule 10 (lCerrada -> sentencia .)
    MULTIESCALAR    reduce using rule 10 (lCerrada -> sentencia .)
    LENGTH          reduce using rule 10 (lCerrada -> sentencia .)
    CAPITALIZAR     reduce using rule 10 (lCerrada -> sentencia .)
    COLINEALES      reduce using rule 10 (lCerrada -> sentencia .)
    $end            reduce using rule 10 (lCerrada -> sentencia .)
    }               reduce using rule 10 (lCerrada -> sentencia .)


state 11

    (19) sentencia -> ; .

    WHILE           reduce using rule 19 (sentencia -> ; .)
    ELSE            reduce using rule 19 (sentencia -> ; .)
    IF              reduce using rule 19 (sentencia -> ; .)
    COMMENT         reduce using rule 19 (sentencia -> ; .)
    DO              reduce using rule 19 (sentencia -> ; .)
    FOR             reduce using rule 19 (sentencia -> ; .)
    RETURN          reduce using rule 19 (sentencia -> ; .)
    ;               reduce using rule 19 (sentencia -> ; .)
    MENOSMENOS      reduce using rule 19 (sentencia -> ; .)
    MASMAS          reduce using rule 19 (sentencia -> ; .)
    ID              reduce using rule 19 (sentencia -> ; .)
    PRINT           reduce using rule 19 (sentencia -> ; .)
    MULTIESCALAR    reduce using rule 19 (sentencia -> ; .)
    LENGTH          reduce using rule 19 (sentencia -> ; .)
    CAPITALIZAR     reduce using rule 19 (sentencia -> ; .)
    COLINEALES      reduce using rule 19 (sentencia -> ; .)
    $end            reduce using rule 19 (sentencia -> ; .)
    }               reduce using rule 19 (sentencia -> ; .)


state 12

    (5) lAbierta -> IF . ( cosaBooleana ) linea
    (6) lAbierta -> IF . ( cosaBooleana ) bloqueCerrado ELSE lAbierta
    (12) lCerrada -> IF . ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado

    (               shift and go to state 43


state 13

    (2) g -> empty .

    }               reduce using rule 2 (g -> empty .)
    $end            reduce using rule 2 (g -> empty .)


state 14

    (15) sentencia -> varsOps . ;

    ;               shift and go to state 44


state 15

    (31) func -> funcVoid .

    ;               reduce using rule 31 (func -> funcVoid .)
    )               reduce using rule 31 (func -> funcVoid .)


state 16

    (90) varsOps -> MENOSMENOS . varYVals
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (80) vecVal -> . ID m

    ID              shift and go to state 46

    varYVals                       shift and go to state 45
    vecVal                         shift and go to state 8

state 17

    (21) loop -> FOR . ( primParam ; cosaBooleana ; tercerParam )

    (               shift and go to state 47


state 18

    (36) funcInt -> LENGTH . ( valores )

    (               shift and go to state 48


state 19

    (16) sentencia -> func . ;

    ;               shift and go to state 49


state 20

    (100) varAsig -> ID . . ID = valoresAsig
    (77) varYVals -> ID .
    (80) vecVal -> ID . m
    (81) m -> . [ INT ]
    (82) m -> . [ INT ] m
    (83) m -> . [ varYVals ] m
    (84) m -> . [ varYVals ]
    (85) m -> . [ eMat ] m
    (86) m -> . [ eMat ]

    .               shift and go to state 51
    MASMAS          reduce using rule 77 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 77 (varYVals -> ID .)
    MULEQ           reduce using rule 77 (varYVals -> ID .)
    DIVEQ           reduce using rule 77 (varYVals -> ID .)
    MASEQ           reduce using rule 77 (varYVals -> ID .)
    MENOSEQ         reduce using rule 77 (varYVals -> ID .)
    =               reduce using rule 77 (varYVals -> ID .)
    [               shift and go to state 52

    m                              shift and go to state 50

state 21

    (17) sentencia -> varAsig . ;

    ;               shift and go to state 53


state 22

    (0) S' -> g .



state 23

    (33) funcReturn -> funcString .

    ;               reduce using rule 33 (funcReturn -> funcString .)
    ,               reduce using rule 33 (funcReturn -> funcString .)
    )               reduce using rule 33 (funcReturn -> funcString .)
    }               reduce using rule 33 (funcReturn -> funcString .)
    ]               reduce using rule 33 (funcReturn -> funcString .)


state 24

    (35) funcInt -> MULTIESCALAR . ( valores , valores param )

    (               shift and go to state 54


state 25

    (30) func -> funcReturn .

    ;               reduce using rule 30 (func -> funcReturn .)
    )               reduce using rule 30 (func -> funcReturn .)


state 26

    (37) funcString -> CAPITALIZAR . ( valores )

    (               shift and go to state 55


state 27

    (4) linea -> lCerrada .

    IF              reduce using rule 4 (linea -> lCerrada .)
    COMMENT         reduce using rule 4 (linea -> lCerrada .)
    DO              reduce using rule 4 (linea -> lCerrada .)
    WHILE           reduce using rule 4 (linea -> lCerrada .)
    FOR             reduce using rule 4 (linea -> lCerrada .)
    RETURN          reduce using rule 4 (linea -> lCerrada .)
    ;               reduce using rule 4 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 4 (linea -> lCerrada .)
    MASMAS          reduce using rule 4 (linea -> lCerrada .)
    ID              reduce using rule 4 (linea -> lCerrada .)
    PRINT           reduce using rule 4 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 4 (linea -> lCerrada .)
    LENGTH          reduce using rule 4 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 4 (linea -> lCerrada .)
    COLINEALES      reduce using rule 4 (linea -> lCerrada .)
    $end            reduce using rule 4 (linea -> lCerrada .)
    }               reduce using rule 4 (linea -> lCerrada .)


state 28

    (3) linea -> lAbierta .

    IF              reduce using rule 3 (linea -> lAbierta .)
    COMMENT         reduce using rule 3 (linea -> lAbierta .)
    DO              reduce using rule 3 (linea -> lAbierta .)
    WHILE           reduce using rule 3 (linea -> lAbierta .)
    FOR             reduce using rule 3 (linea -> lAbierta .)
    RETURN          reduce using rule 3 (linea -> lAbierta .)
    ;               reduce using rule 3 (linea -> lAbierta .)
    MENOSMENOS      reduce using rule 3 (linea -> lAbierta .)
    MASMAS          reduce using rule 3 (linea -> lAbierta .)
    ID              reduce using rule 3 (linea -> lAbierta .)
    PRINT           reduce using rule 3 (linea -> lAbierta .)
    MULTIESCALAR    reduce using rule 3 (linea -> lAbierta .)
    LENGTH          reduce using rule 3 (linea -> lAbierta .)
    CAPITALIZAR     reduce using rule 3 (linea -> lAbierta .)
    COLINEALES      reduce using rule 3 (linea -> lAbierta .)
    $end            reduce using rule 3 (linea -> lAbierta .)
    }               reduce using rule 3 (linea -> lAbierta .)


state 29

    (91) varsOps -> MASMAS . varYVals
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (80) vecVal -> . ID m

    ID              shift and go to state 46

    varYVals                       shift and go to state 56
    vecVal                         shift and go to state 8

state 30

    (7) lAbierta -> loop . lAbierta
    (13) lCerrada -> loop . bloqueCerrado
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta
    (7) lAbierta -> . loop lAbierta
    (8) bloqueCerrado -> . lCerrada
    (9) bloqueCerrado -> . { g }
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    IF              shift and go to state 12
    {               shift and go to state 36
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    bloqueCerrado                  shift and go to state 57
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 35
    lAbierta                       shift and go to state 58
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 31
    loop                           shift and go to state 30

state 31

    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS
    (95) varAsig -> varYVals . MULEQ valoresAsig
    (96) varAsig -> varYVals . DIVEQ valoresAsig
    (97) varAsig -> varYVals . MASEQ valoresAsig
    (98) varAsig -> varYVals . MENOSEQ valoresAsig
    (99) varAsig -> varYVals . = valoresAsig

    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60
    MULEQ           shift and go to state 64
    DIVEQ           shift and go to state 65
    MASEQ           shift and go to state 61
    MENOSEQ         shift and go to state 59
    =               shift and go to state 62


state 32

    (1) g -> linea . g
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (42) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta
    (7) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    $end            reduce using rule 42 (empty -> .)
    }               reduce using rule 42 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 66
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 27
    lAbierta                       shift and go to state 28
    loop                           shift and go to state 30
    varYVals                       shift and go to state 31
    linea                          shift and go to state 32

state 33

    (14) lCerrada -> DO bloqueCerrado . WHILE ( cosaBooleana ) ;

    WHILE           shift and go to state 67


state 34

    (12) lCerrada -> IF . ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado

    (               shift and go to state 68


state 35

    (8) bloqueCerrado -> lCerrada .

    WHILE           reduce using rule 8 (bloqueCerrado -> lCerrada .)
    ELSE            reduce using rule 8 (bloqueCerrado -> lCerrada .)
    IF              reduce using rule 8 (bloqueCerrado -> lCerrada .)
    COMMENT         reduce using rule 8 (bloqueCerrado -> lCerrada .)
    DO              reduce using rule 8 (bloqueCerrado -> lCerrada .)
    FOR             reduce using rule 8 (bloqueCerrado -> lCerrada .)
    RETURN          reduce using rule 8 (bloqueCerrado -> lCerrada .)
    ;               reduce using rule 8 (bloqueCerrado -> lCerrada .)
    MENOSMENOS      reduce using rule 8 (bloqueCerrado -> lCerrada .)
    MASMAS          reduce using rule 8 (bloqueCerrado -> lCerrada .)
    ID              reduce using rule 8 (bloqueCerrado -> lCerrada .)
    PRINT           reduce using rule 8 (bloqueCerrado -> lCerrada .)
    MULTIESCALAR    reduce using rule 8 (bloqueCerrado -> lCerrada .)
    LENGTH          reduce using rule 8 (bloqueCerrado -> lCerrada .)
    CAPITALIZAR     reduce using rule 8 (bloqueCerrado -> lCerrada .)
    COLINEALES      reduce using rule 8 (bloqueCerrado -> lCerrada .)
    $end            reduce using rule 8 (bloqueCerrado -> lCerrada .)
    }               reduce using rule 8 (bloqueCerrado -> lCerrada .)


state 36

    (9) bloqueCerrado -> { . g }
    (1) g -> . linea g
    (2) g -> . empty
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (42) empty -> .
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta
    (7) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    }               reduce using rule 42 (empty -> .)
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    empty                          shift and go to state 13
    varsOps                        shift and go to state 14
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    g                              shift and go to state 69
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 27
    lAbierta                       shift and go to state 28
    loop                           shift and go to state 30
    varYVals                       shift and go to state 31
    linea                          shift and go to state 32

state 37

    (13) lCerrada -> loop . bloqueCerrado
    (8) bloqueCerrado -> . lCerrada
    (9) bloqueCerrado -> . { g }
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 36
    COMMENT         shift and go to state 9
    IF              shift and go to state 34
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    bloqueCerrado                  shift and go to state 57
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 35
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 31
    loop                           shift and go to state 37

state 38

    (18) sentencia -> RETURN ; .

    WHILE           reduce using rule 18 (sentencia -> RETURN ; .)
    ELSE            reduce using rule 18 (sentencia -> RETURN ; .)
    IF              reduce using rule 18 (sentencia -> RETURN ; .)
    COMMENT         reduce using rule 18 (sentencia -> RETURN ; .)
    DO              reduce using rule 18 (sentencia -> RETURN ; .)
    FOR             reduce using rule 18 (sentencia -> RETURN ; .)
    RETURN          reduce using rule 18 (sentencia -> RETURN ; .)
    ;               reduce using rule 18 (sentencia -> RETURN ; .)
    MENOSMENOS      reduce using rule 18 (sentencia -> RETURN ; .)
    MASMAS          reduce using rule 18 (sentencia -> RETURN ; .)
    ID              reduce using rule 18 (sentencia -> RETURN ; .)
    PRINT           reduce using rule 18 (sentencia -> RETURN ; .)
    MULTIESCALAR    reduce using rule 18 (sentencia -> RETURN ; .)
    LENGTH          reduce using rule 18 (sentencia -> RETURN ; .)
    CAPITALIZAR     reduce using rule 18 (sentencia -> RETURN ; .)
    COLINEALES      reduce using rule 18 (sentencia -> RETURN ; .)
    $end            reduce using rule 18 (sentencia -> RETURN ; .)
    }               reduce using rule 18 (sentencia -> RETURN ; .)


state 39

    (38) funcBool -> COLINEALES ( . valores , valores )
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 96
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 40

    (20) loop -> WHILE ( . cosaBooleana )
    (22) cosaBooleana -> . expBool
    (23) cosaBooleana -> . valoresBool
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (80) vecVal -> . ID m
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 110
    eMat                           shift and go to state 111
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    cosaBooleana                   shift and go to state 114
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 119
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 113

state 41

    (39) funcVoid -> PRINT ( . valores )
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 120
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 42

    (79) varYVals -> vecVal . . varYVals
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (80) vecVal -> . ID m

    ID              shift and go to state 46

    varYVals                       shift and go to state 121
    vecVal                         shift and go to state 8

state 43

    (5) lAbierta -> IF ( . cosaBooleana ) linea
    (6) lAbierta -> IF ( . cosaBooleana ) bloqueCerrado ELSE lAbierta
    (12) lCerrada -> IF ( . cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (22) cosaBooleana -> . expBool
    (23) cosaBooleana -> . valoresBool
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (80) vecVal -> . ID m
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 110
    eMat                           shift and go to state 111
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    varsOps                        shift and go to state 118
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    cosaBooleana                   shift and go to state 122
    p                              shift and go to state 97
    expBool                        shift and go to state 113
    exp                            shift and go to state 102
    varYVals                       shift and go to state 119
    parenBool                      shift and go to state 100

state 44

    (15) sentencia -> varsOps ; .

    WHILE           reduce using rule 15 (sentencia -> varsOps ; .)
    ELSE            reduce using rule 15 (sentencia -> varsOps ; .)
    IF              reduce using rule 15 (sentencia -> varsOps ; .)
    COMMENT         reduce using rule 15 (sentencia -> varsOps ; .)
    DO              reduce using rule 15 (sentencia -> varsOps ; .)
    FOR             reduce using rule 15 (sentencia -> varsOps ; .)
    RETURN          reduce using rule 15 (sentencia -> varsOps ; .)
    ;               reduce using rule 15 (sentencia -> varsOps ; .)
    MENOSMENOS      reduce using rule 15 (sentencia -> varsOps ; .)
    MASMAS          reduce using rule 15 (sentencia -> varsOps ; .)
    ID              reduce using rule 15 (sentencia -> varsOps ; .)
    PRINT           reduce using rule 15 (sentencia -> varsOps ; .)
    MULTIESCALAR    reduce using rule 15 (sentencia -> varsOps ; .)
    LENGTH          reduce using rule 15 (sentencia -> varsOps ; .)
    CAPITALIZAR     reduce using rule 15 (sentencia -> varsOps ; .)
    COLINEALES      reduce using rule 15 (sentencia -> varsOps ; .)
    $end            reduce using rule 15 (sentencia -> varsOps ; .)
    }               reduce using rule 15 (sentencia -> varsOps ; .)


state 45

    (90) varsOps -> MENOSMENOS varYVals .

    ^               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    *               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    /               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    %               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    +               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    -               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    ,               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    EQEQ            reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    DISTINTO        reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    >               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    <               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    )               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    ]               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    ;               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    AND             reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    OR              reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    ?               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    :               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)
    }               reduce using rule 90 (varsOps -> MENOSMENOS varYVals .)


state 46

    (77) varYVals -> ID .
    (80) vecVal -> ID . m
    (81) m -> . [ INT ]
    (82) m -> . [ INT ] m
    (83) m -> . [ varYVals ] m
    (84) m -> . [ varYVals ]
    (85) m -> . [ eMat ] m
    (86) m -> . [ eMat ]

    MASMAS          reduce using rule 77 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 77 (varYVals -> ID .)
    *               reduce using rule 77 (varYVals -> ID .)
    /               reduce using rule 77 (varYVals -> ID .)
    %               reduce using rule 77 (varYVals -> ID .)
    ^               reduce using rule 77 (varYVals -> ID .)
    +               reduce using rule 77 (varYVals -> ID .)
    -               reduce using rule 77 (varYVals -> ID .)
    ,               reduce using rule 77 (varYVals -> ID .)
    EQEQ            reduce using rule 77 (varYVals -> ID .)
    DISTINTO        reduce using rule 77 (varYVals -> ID .)
    >               reduce using rule 77 (varYVals -> ID .)
    <               reduce using rule 77 (varYVals -> ID .)
    )               reduce using rule 77 (varYVals -> ID .)
    ]               reduce using rule 77 (varYVals -> ID .)
    ;               reduce using rule 77 (varYVals -> ID .)
    AND             reduce using rule 77 (varYVals -> ID .)
    OR              reduce using rule 77 (varYVals -> ID .)
    ?               reduce using rule 77 (varYVals -> ID .)
    :               reduce using rule 77 (varYVals -> ID .)
    }               reduce using rule 77 (varYVals -> ID .)
    MULEQ           reduce using rule 77 (varYVals -> ID .)
    DIVEQ           reduce using rule 77 (varYVals -> ID .)
    MASEQ           reduce using rule 77 (varYVals -> ID .)
    MENOSEQ         reduce using rule 77 (varYVals -> ID .)
    =               reduce using rule 77 (varYVals -> ID .)
    [               shift and go to state 52

    m                              shift and go to state 50

state 47

    (21) loop -> FOR ( . primParam ; cosaBooleana ; tercerParam )
    (24) primParam -> . varAsig
    (25) primParam -> . empty
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (42) empty -> .
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (80) vecVal -> . ID m

    ID              shift and go to state 20
    ;               reduce using rule 42 (empty -> .)

    varAsig                        shift and go to state 123
    primParam                      shift and go to state 124
    varYVals                       shift and go to state 125
    vecVal                         shift and go to state 8
    empty                          shift and go to state 126

state 48

    (36) funcInt -> LENGTH ( . valores )
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 127
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 49

    (16) sentencia -> func ; .

    WHILE           reduce using rule 16 (sentencia -> func ; .)
    ELSE            reduce using rule 16 (sentencia -> func ; .)
    IF              reduce using rule 16 (sentencia -> func ; .)
    COMMENT         reduce using rule 16 (sentencia -> func ; .)
    DO              reduce using rule 16 (sentencia -> func ; .)
    FOR             reduce using rule 16 (sentencia -> func ; .)
    RETURN          reduce using rule 16 (sentencia -> func ; .)
    ;               reduce using rule 16 (sentencia -> func ; .)
    MENOSMENOS      reduce using rule 16 (sentencia -> func ; .)
    MASMAS          reduce using rule 16 (sentencia -> func ; .)
    ID              reduce using rule 16 (sentencia -> func ; .)
    PRINT           reduce using rule 16 (sentencia -> func ; .)
    MULTIESCALAR    reduce using rule 16 (sentencia -> func ; .)
    LENGTH          reduce using rule 16 (sentencia -> func ; .)
    CAPITALIZAR     reduce using rule 16 (sentencia -> func ; .)
    COLINEALES      reduce using rule 16 (sentencia -> func ; .)
    $end            reduce using rule 16 (sentencia -> func ; .)
    }               reduce using rule 16 (sentencia -> func ; .)


state 50

    (80) vecVal -> ID m .

    .               reduce using rule 80 (vecVal -> ID m .)
    MASMAS          reduce using rule 80 (vecVal -> ID m .)
    MENOSMENOS      reduce using rule 80 (vecVal -> ID m .)
    MULEQ           reduce using rule 80 (vecVal -> ID m .)
    DIVEQ           reduce using rule 80 (vecVal -> ID m .)
    MASEQ           reduce using rule 80 (vecVal -> ID m .)
    MENOSEQ         reduce using rule 80 (vecVal -> ID m .)
    =               reduce using rule 80 (vecVal -> ID m .)
    ;               reduce using rule 80 (vecVal -> ID m .)
    )               reduce using rule 80 (vecVal -> ID m .)
    +               reduce using rule 80 (vecVal -> ID m .)
    -               reduce using rule 80 (vecVal -> ID m .)
    *               reduce using rule 80 (vecVal -> ID m .)
    /               reduce using rule 80 (vecVal -> ID m .)
    %               reduce using rule 80 (vecVal -> ID m .)
    ^               reduce using rule 80 (vecVal -> ID m .)
    OR              reduce using rule 80 (vecVal -> ID m .)
    ?               reduce using rule 80 (vecVal -> ID m .)
    AND             reduce using rule 80 (vecVal -> ID m .)
    EQEQ            reduce using rule 80 (vecVal -> ID m .)
    DISTINTO        reduce using rule 80 (vecVal -> ID m .)
    >               reduce using rule 80 (vecVal -> ID m .)
    <               reduce using rule 80 (vecVal -> ID m .)
    ,               reduce using rule 80 (vecVal -> ID m .)
    ]               reduce using rule 80 (vecVal -> ID m .)
    :               reduce using rule 80 (vecVal -> ID m .)
    }               reduce using rule 80 (vecVal -> ID m .)


state 51

    (100) varAsig -> ID . . ID = valoresAsig

    ID              shift and go to state 128


state 52

    (81) m -> [ . INT ]
    (82) m -> [ . INT ] m
    (83) m -> [ . varYVals ] m
    (84) m -> [ . varYVals ]
    (85) m -> [ . eMat ] m
    (86) m -> [ . eMat ]
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (80) vecVal -> . ID m
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 132
    ID              shift and go to state 46
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 131

    eMat                           shift and go to state 130
    funcInt                        shift and go to state 129
    p                              shift and go to state 97
    varsOps                        shift and go to state 134
    valoresMat                     shift and go to state 76
    paren                          shift and go to state 90
    exp                            shift and go to state 102
    varYVals                       shift and go to state 135
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 53

    (17) sentencia -> varAsig ; .

    WHILE           reduce using rule 17 (sentencia -> varAsig ; .)
    ELSE            reduce using rule 17 (sentencia -> varAsig ; .)
    IF              reduce using rule 17 (sentencia -> varAsig ; .)
    COMMENT         reduce using rule 17 (sentencia -> varAsig ; .)
    DO              reduce using rule 17 (sentencia -> varAsig ; .)
    FOR             reduce using rule 17 (sentencia -> varAsig ; .)
    RETURN          reduce using rule 17 (sentencia -> varAsig ; .)
    ;               reduce using rule 17 (sentencia -> varAsig ; .)
    MENOSMENOS      reduce using rule 17 (sentencia -> varAsig ; .)
    MASMAS          reduce using rule 17 (sentencia -> varAsig ; .)
    ID              reduce using rule 17 (sentencia -> varAsig ; .)
    PRINT           reduce using rule 17 (sentencia -> varAsig ; .)
    MULTIESCALAR    reduce using rule 17 (sentencia -> varAsig ; .)
    LENGTH          reduce using rule 17 (sentencia -> varAsig ; .)
    CAPITALIZAR     reduce using rule 17 (sentencia -> varAsig ; .)
    COLINEALES      reduce using rule 17 (sentencia -> varAsig ; .)
    $end            reduce using rule 17 (sentencia -> varAsig ; .)
    }               reduce using rule 17 (sentencia -> varAsig ; .)


state 54

    (35) funcInt -> MULTIESCALAR ( . valores , valores param )
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 136
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 55

    (37) funcString -> CAPITALIZAR ( . valores )
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 137
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 56

    (91) varsOps -> MASMAS varYVals .

    ^               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    *               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    /               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    %               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    +               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    -               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    ,               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    EQEQ            reduce using rule 91 (varsOps -> MASMAS varYVals .)
    DISTINTO        reduce using rule 91 (varsOps -> MASMAS varYVals .)
    >               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    <               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    )               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    ]               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    ;               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    AND             reduce using rule 91 (varsOps -> MASMAS varYVals .)
    OR              reduce using rule 91 (varsOps -> MASMAS varYVals .)
    ?               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    :               reduce using rule 91 (varsOps -> MASMAS varYVals .)
    }               reduce using rule 91 (varsOps -> MASMAS varYVals .)


state 57

    (13) lCerrada -> loop bloqueCerrado .

    WHILE           reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    ELSE            reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    IF              reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    COMMENT         reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    DO              reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    FOR             reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    RETURN          reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    ;               reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    MENOSMENOS      reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    MASMAS          reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    ID              reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    PRINT           reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    MULTIESCALAR    reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    LENGTH          reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    CAPITALIZAR     reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    COLINEALES      reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    $end            reduce using rule 13 (lCerrada -> loop bloqueCerrado .)
    }               reduce using rule 13 (lCerrada -> loop bloqueCerrado .)


state 58

    (7) lAbierta -> loop lAbierta .

    IF              reduce using rule 7 (lAbierta -> loop lAbierta .)
    COMMENT         reduce using rule 7 (lAbierta -> loop lAbierta .)
    DO              reduce using rule 7 (lAbierta -> loop lAbierta .)
    WHILE           reduce using rule 7 (lAbierta -> loop lAbierta .)
    FOR             reduce using rule 7 (lAbierta -> loop lAbierta .)
    RETURN          reduce using rule 7 (lAbierta -> loop lAbierta .)
    ;               reduce using rule 7 (lAbierta -> loop lAbierta .)
    MENOSMENOS      reduce using rule 7 (lAbierta -> loop lAbierta .)
    MASMAS          reduce using rule 7 (lAbierta -> loop lAbierta .)
    ID              reduce using rule 7 (lAbierta -> loop lAbierta .)
    PRINT           reduce using rule 7 (lAbierta -> loop lAbierta .)
    MULTIESCALAR    reduce using rule 7 (lAbierta -> loop lAbierta .)
    LENGTH          reduce using rule 7 (lAbierta -> loop lAbierta .)
    CAPITALIZAR     reduce using rule 7 (lAbierta -> loop lAbierta .)
    COLINEALES      reduce using rule 7 (lAbierta -> loop lAbierta .)
    $end            reduce using rule 7 (lAbierta -> loop lAbierta .)
    }               reduce using rule 7 (lAbierta -> loop lAbierta .)


state 59

    (98) varAsig -> varYVals MENOSEQ . valoresAsig
    (94) valoresAsig -> . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    valoresAsig                    shift and go to state 138
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 139
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 60

    (93) varsOps -> varYVals MENOSMENOS .

    ^               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    *               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    /               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    %               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    +               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    -               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    ,               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    EQEQ            reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    DISTINTO        reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    >               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    <               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    )               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    ]               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    ;               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    AND             reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    OR              reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    ?               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    :               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)
    }               reduce using rule 93 (varsOps -> varYVals MENOSMENOS .)


state 61

    (97) varAsig -> varYVals MASEQ . valoresAsig
    (94) valoresAsig -> . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    valoresAsig                    shift and go to state 140
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 139
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 62

    (99) varAsig -> varYVals = . valoresAsig
    (94) valoresAsig -> . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    valoresAsig                    shift and go to state 141
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 139
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 63

    (92) varsOps -> varYVals MASMAS .

    ^               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    *               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    /               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    %               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    +               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    -               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    ,               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    EQEQ            reduce using rule 92 (varsOps -> varYVals MASMAS .)
    DISTINTO        reduce using rule 92 (varsOps -> varYVals MASMAS .)
    >               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    <               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    )               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    ]               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    ;               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    AND             reduce using rule 92 (varsOps -> varYVals MASMAS .)
    OR              reduce using rule 92 (varsOps -> varYVals MASMAS .)
    ?               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    :               reduce using rule 92 (varsOps -> varYVals MASMAS .)
    }               reduce using rule 92 (varsOps -> varYVals MASMAS .)


state 64

    (95) varAsig -> varYVals MULEQ . valoresAsig
    (94) valoresAsig -> . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    valoresAsig                    shift and go to state 142
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 139
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 65

    (96) varAsig -> varYVals DIVEQ . valoresAsig
    (94) valoresAsig -> . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    valoresAsig                    shift and go to state 143
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 139
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 66

    (1) g -> linea g .

    }               reduce using rule 1 (g -> linea g .)
    $end            reduce using rule 1 (g -> linea g .)


state 67

    (14) lCerrada -> DO bloqueCerrado WHILE . ( cosaBooleana ) ;

    (               shift and go to state 144


state 68

    (12) lCerrada -> IF ( . cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (22) cosaBooleana -> . expBool
    (23) cosaBooleana -> . valoresBool
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (80) vecVal -> . ID m
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 110
    eMat                           shift and go to state 111
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    cosaBooleana                   shift and go to state 145
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 119
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 113

state 69

    (9) bloqueCerrado -> { g . }

    }               shift and go to state 146


state 70

    (164) expBool -> and .
    (165) and -> and . AND eq
    (167) and -> and . AND valoresBool

    OR              reduce using rule 164 (expBool -> and .)
    )               reduce using rule 164 (expBool -> and .)
    ?               reduce using rule 164 (expBool -> and .)
    ;               reduce using rule 164 (expBool -> and .)
    ,               reduce using rule 164 (expBool -> and .)
    ]               reduce using rule 164 (expBool -> and .)
    }               reduce using rule 164 (expBool -> and .)
    :               reduce using rule 164 (expBool -> and .)
    AND             shift and go to state 147


state 71

    (34) funcReturn -> funcBool .
    (149) valoresBool -> funcBool .

    ,               reduce using rule 34 (funcReturn -> funcBool .)
    ;               reduce using rule 34 (funcReturn -> funcBool .)
    )               reduce using rule 34 (funcReturn -> funcBool .)
    }               reduce using rule 34 (funcReturn -> funcBool .)
    ]               reduce using rule 34 (funcReturn -> funcBool .)
    OR              reduce using rule 149 (valoresBool -> funcBool .)
    ?               reduce using rule 149 (valoresBool -> funcBool .)
    AND             reduce using rule 149 (valoresBool -> funcBool .)


state 72

    (60) valores -> RES .

    )               reduce using rule 60 (valores -> RES .)
    ;               reduce using rule 60 (valores -> RES .)
    ,               reduce using rule 60 (valores -> RES .)
    }               reduce using rule 60 (valores -> RES .)
    ]               reduce using rule 60 (valores -> RES .)


state 73

    (32) funcReturn -> funcInt .
    (103) valoresMat -> funcInt .
    (183) tCompare -> funcInt .

    ,               reduce using rule 32 (funcReturn -> funcInt .)
    ;               reduce using rule 32 (funcReturn -> funcInt .)
    )               reduce using rule 32 (funcReturn -> funcInt .)
    }               reduce using rule 32 (funcReturn -> funcInt .)
    ]               reduce using rule 32 (funcReturn -> funcInt .)
    +               reduce using rule 103 (valoresMat -> funcInt .)
    -               reduce using rule 103 (valoresMat -> funcInt .)
    *               reduce using rule 103 (valoresMat -> funcInt .)
    /               reduce using rule 103 (valoresMat -> funcInt .)
    %               reduce using rule 103 (valoresMat -> funcInt .)
    ^               reduce using rule 103 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 183 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 183 (tCompare -> funcInt .)
    >               reduce using rule 183 (tCompare -> funcInt .)
    <               reduce using rule 183 (tCompare -> funcInt .)


state 74

    (188) menor -> not .

    EQEQ            reduce using rule 188 (menor -> not .)
    DISTINTO        reduce using rule 188 (menor -> not .)
    AND             reduce using rule 188 (menor -> not .)
    OR              reduce using rule 188 (menor -> not .)
    ?               reduce using rule 188 (menor -> not .)
    ,               reduce using rule 188 (menor -> not .)
    ;               reduce using rule 188 (menor -> not .)
    )               reduce using rule 188 (menor -> not .)
    ]               reduce using rule 188 (menor -> not .)
    :               reduce using rule 188 (menor -> not .)
    }               reduce using rule 188 (menor -> not .)


state 75

    (186) mayor -> menor .

    EQEQ            reduce using rule 186 (mayor -> menor .)
    DISTINTO        reduce using rule 186 (mayor -> menor .)
    AND             reduce using rule 186 (mayor -> menor .)
    ?               reduce using rule 186 (mayor -> menor .)
    OR              reduce using rule 186 (mayor -> menor .)
    ,               reduce using rule 186 (mayor -> menor .)
    )               reduce using rule 186 (mayor -> menor .)
    ;               reduce using rule 186 (mayor -> menor .)
    ]               reduce using rule 186 (mayor -> menor .)
    :               reduce using rule 186 (mayor -> menor .)
    }               reduce using rule 186 (mayor -> menor .)


state 76

    (116) eMat -> valoresMat . + p
    (117) eMat -> valoresMat . - p
    (120) eMat -> valoresMat . + valoresMat
    (121) eMat -> valoresMat . - valoresMat
    (126) p -> valoresMat . * exp
    (127) p -> valoresMat . / exp
    (128) p -> valoresMat . % exp
    (132) p -> valoresMat . * valoresMat
    (133) p -> valoresMat . / valoresMat
    (134) p -> valoresMat . % valoresMat
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    +               shift and go to state 149
    -               shift and go to state 151
    *               shift and go to state 150
    /               shift and go to state 152
    %               shift and go to state 148
    ^               shift and go to state 153


state 77

    (169) and -> eq .
    (170) eq -> eq . EQEQ mayor
    (171) eq -> eq . DISTINTO mayor
    (174) eq -> eq . EQEQ tCompare
    (175) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 169 (and -> eq .)
    ?               reduce using rule 169 (and -> eq .)
    OR              reduce using rule 169 (and -> eq .)
    ,               reduce using rule 169 (and -> eq .)
    )               reduce using rule 169 (and -> eq .)
    ;               reduce using rule 169 (and -> eq .)
    ]               reduce using rule 169 (and -> eq .)
    :               reduce using rule 169 (and -> eq .)
    }               reduce using rule 169 (and -> eq .)
    EQEQ            shift and go to state 154
    DISTINTO        shift and go to state 155


state 78

    (161) expBool -> valoresBool . OR and
    (163) expBool -> valoresBool . OR valoresBool
    (65) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (166) and -> valoresBool . AND eq
    (168) and -> valoresBool . AND valoresBool

    OR              shift and go to state 157
    ?               shift and go to state 158
    AND             shift and go to state 156


state 79

    (52) valores -> STRING .
    (106) valoresMat -> STRING .

    )               reduce using rule 52 (valores -> STRING .)
    ;               reduce using rule 52 (valores -> STRING .)
    ,               reduce using rule 52 (valores -> STRING .)
    }               reduce using rule 52 (valores -> STRING .)
    ]               reduce using rule 52 (valores -> STRING .)
    +               reduce using rule 106 (valoresMat -> STRING .)
    -               reduce using rule 106 (valoresMat -> STRING .)
    *               reduce using rule 106 (valoresMat -> STRING .)
    /               reduce using rule 106 (valoresMat -> STRING .)
    %               reduce using rule 106 (valoresMat -> STRING .)
    ^               reduce using rule 106 (valoresMat -> STRING .)


state 80

    (46) valores -> eMat .
    (114) eMat -> eMat . + p
    (115) eMat -> eMat . - p
    (118) eMat -> eMat . + valoresMat
    (119) eMat -> eMat . - valoresMat
    (179) tCompare -> eMat .

    )               reduce using rule 46 (valores -> eMat .)
    ;               reduce using rule 46 (valores -> eMat .)
    ,               reduce using rule 46 (valores -> eMat .)
    }               reduce using rule 46 (valores -> eMat .)
    ]               reduce using rule 46 (valores -> eMat .)
    +               shift and go to state 159
    -               shift and go to state 160
    EQEQ            reduce using rule 179 (tCompare -> eMat .)
    DISTINTO        reduce using rule 179 (tCompare -> eMat .)
    >               reduce using rule 179 (tCompare -> eMat .)
    <               reduce using rule 179 (tCompare -> eMat .)


state 81

    (58) valores -> ( . ternarioVars )
    (146) paren -> ( . eMat )
    (147) paren -> ( . valoresMat )
    (192) parenBool -> ( . expBool )
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (38) funcBool -> . COLINEALES ( valores , valores )
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (80) vecVal -> . ID m
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 166
    FLOAT           shift and go to state 167
    STRING          shift and go to state 109
    BOOL            shift and go to state 117
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 165
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 161
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 162
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 163
    eMat                           shift and go to state 164
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    varsOps                        shift and go to state 168
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    iSing                          shift and go to state 88
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 169
    varYVals                       shift and go to state 170
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 171

state 82

    (142) iSing -> + . paren
    (144) iSing -> + . valoresMat
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (80) vecVal -> . ID m

    (               shift and go to state 131
    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29

    funcInt                        shift and go to state 129
    varsOps                        shift and go to state 134
    valoresMat                     shift and go to state 172
    paren                          shift and go to state 173
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8

state 83

    (141) iSing -> - . paren
    (143) iSing -> - . valoresMat
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (80) vecVal -> . ID m

    (               shift and go to state 131
    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29

    funcInt                        shift and go to state 129
    varsOps                        shift and go to state 134
    valoresMat                     shift and go to state 176
    paren                          shift and go to state 177
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8

state 84

    (77) varYVals -> ID .
    (61) atributos -> ID . . valoresCampos
    (80) vecVal -> ID . m
    (81) m -> . [ INT ]
    (82) m -> . [ INT ] m
    (83) m -> . [ varYVals ] m
    (84) m -> . [ varYVals ]
    (85) m -> . [ eMat ] m
    (86) m -> . [ eMat ]

    MASMAS          reduce using rule 77 (varYVals -> ID .)
    MENOSMENOS      reduce using rule 77 (varYVals -> ID .)
    ;               reduce using rule 77 (varYVals -> ID .)
    )               reduce using rule 77 (varYVals -> ID .)
    +               reduce using rule 77 (varYVals -> ID .)
    -               reduce using rule 77 (varYVals -> ID .)
    *               reduce using rule 77 (varYVals -> ID .)
    /               reduce using rule 77 (varYVals -> ID .)
    %               reduce using rule 77 (varYVals -> ID .)
    ^               reduce using rule 77 (varYVals -> ID .)
    OR              reduce using rule 77 (varYVals -> ID .)
    ?               reduce using rule 77 (varYVals -> ID .)
    AND             reduce using rule 77 (varYVals -> ID .)
    EQEQ            reduce using rule 77 (varYVals -> ID .)
    DISTINTO        reduce using rule 77 (varYVals -> ID .)
    >               reduce using rule 77 (varYVals -> ID .)
    <               reduce using rule 77 (varYVals -> ID .)
    ,               reduce using rule 77 (varYVals -> ID .)
    ]               reduce using rule 77 (varYVals -> ID .)
    :               reduce using rule 77 (varYVals -> ID .)
    }               reduce using rule 77 (varYVals -> ID .)
    .               shift and go to state 178
    [               shift and go to state 52

    m                              shift and go to state 50

state 85

    (56) valores -> vec .

    )               reduce using rule 56 (valores -> vec .)
    ;               reduce using rule 56 (valores -> vec .)
    ,               reduce using rule 56 (valores -> vec .)
    }               reduce using rule 56 (valores -> vec .)
    ]               reduce using rule 56 (valores -> vec .)


state 86

    (49) valores -> reg .

    )               reduce using rule 49 (valores -> reg .)
    ;               reduce using rule 49 (valores -> reg .)
    ,               reduce using rule 49 (valores -> reg .)
    }               reduce using rule 49 (valores -> reg .)
    ]               reduce using rule 49 (valores -> reg .)


state 87

    (47) valores -> expBool .
    (160) expBool -> expBool . OR and
    (162) expBool -> expBool . OR valoresBool
    (66) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars

    )               reduce using rule 47 (valores -> expBool .)
    ;               reduce using rule 47 (valores -> expBool .)
    ,               reduce using rule 47 (valores -> expBool .)
    }               reduce using rule 47 (valores -> expBool .)
    ]               reduce using rule 47 (valores -> expBool .)
    OR              shift and go to state 179
    ?               shift and go to state 180


state 88

    (140) exp -> iSing .

    ^               reduce using rule 140 (exp -> iSing .)
    *               reduce using rule 140 (exp -> iSing .)
    /               reduce using rule 140 (exp -> iSing .)
    %               reduce using rule 140 (exp -> iSing .)
    +               reduce using rule 140 (exp -> iSing .)
    -               reduce using rule 140 (exp -> iSing .)
    ,               reduce using rule 140 (exp -> iSing .)
    }               reduce using rule 140 (exp -> iSing .)
    EQEQ            reduce using rule 140 (exp -> iSing .)
    DISTINTO        reduce using rule 140 (exp -> iSing .)
    >               reduce using rule 140 (exp -> iSing .)
    <               reduce using rule 140 (exp -> iSing .)
    ;               reduce using rule 140 (exp -> iSing .)
    )               reduce using rule 140 (exp -> iSing .)
    AND             reduce using rule 140 (exp -> iSing .)
    OR              reduce using rule 140 (exp -> iSing .)
    ?               reduce using rule 140 (exp -> iSing .)
    ]               reduce using rule 140 (exp -> iSing .)
    :               reduce using rule 140 (exp -> iSing .)


state 89

    (172) eq -> tCompare . EQEQ mayor
    (173) eq -> tCompare . DISTINTO mayor
    (176) eq -> tCompare . EQEQ tCompare
    (177) eq -> tCompare . DISTINTO tCompare
    (185) mayor -> tCompare . > tCompare
    (187) menor -> tCompare . < tCompare

    EQEQ            shift and go to state 182
    DISTINTO        shift and go to state 181
    >               shift and go to state 184
    <               shift and go to state 183


state 90

    (145) iSing -> paren .

    ^               reduce using rule 145 (iSing -> paren .)
    *               reduce using rule 145 (iSing -> paren .)
    /               reduce using rule 145 (iSing -> paren .)
    %               reduce using rule 145 (iSing -> paren .)
    +               reduce using rule 145 (iSing -> paren .)
    -               reduce using rule 145 (iSing -> paren .)
    ,               reduce using rule 145 (iSing -> paren .)
    )               reduce using rule 145 (iSing -> paren .)
    ;               reduce using rule 145 (iSing -> paren .)
    ]               reduce using rule 145 (iSing -> paren .)
    :               reduce using rule 145 (iSing -> paren .)
    }               reduce using rule 145 (iSing -> paren .)
    EQEQ            reduce using rule 145 (iSing -> paren .)
    DISTINTO        reduce using rule 145 (iSing -> paren .)
    >               reduce using rule 145 (iSing -> paren .)
    <               reduce using rule 145 (iSing -> paren .)
    AND             reduce using rule 145 (iSing -> paren .)
    OR              reduce using rule 145 (iSing -> paren .)
    ?               reduce using rule 145 (iSing -> paren .)


state 91

    (43) vec -> [ . elem ]
    (44) elem -> . valores , elem
    (45) elem -> . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    valores                        shift and go to state 185
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    elem                           shift and go to state 186
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 92

    (87) reg -> { . campos }
    (88) campos -> . ID : valores , campos
    (89) campos -> . ID : valores

    ID              shift and go to state 188

    campos                         shift and go to state 187

state 93

    (50) valores -> INT .
    (101) valoresMat -> INT .
    (182) tCompare -> INT .

    )               reduce using rule 50 (valores -> INT .)
    ;               reduce using rule 50 (valores -> INT .)
    ,               reduce using rule 50 (valores -> INT .)
    }               reduce using rule 50 (valores -> INT .)
    ]               reduce using rule 50 (valores -> INT .)
    +               reduce using rule 101 (valoresMat -> INT .)
    -               reduce using rule 101 (valoresMat -> INT .)
    *               reduce using rule 101 (valoresMat -> INT .)
    /               reduce using rule 101 (valoresMat -> INT .)
    %               reduce using rule 101 (valoresMat -> INT .)
    ^               reduce using rule 101 (valoresMat -> INT .)
    EQEQ            reduce using rule 182 (tCompare -> INT .)
    DISTINTO        reduce using rule 182 (tCompare -> INT .)
    >               reduce using rule 182 (tCompare -> INT .)
    <               reduce using rule 182 (tCompare -> INT .)


state 94

    (48) valores -> funcReturn .

    )               reduce using rule 48 (valores -> funcReturn .)
    ;               reduce using rule 48 (valores -> funcReturn .)
    ,               reduce using rule 48 (valores -> funcReturn .)
    }               reduce using rule 48 (valores -> funcReturn .)
    ]               reduce using rule 48 (valores -> funcReturn .)


state 95

    (51) valores -> FLOAT .
    (102) valoresMat -> FLOAT .
    (184) tCompare -> FLOAT .

    )               reduce using rule 51 (valores -> FLOAT .)
    ;               reduce using rule 51 (valores -> FLOAT .)
    ,               reduce using rule 51 (valores -> FLOAT .)
    }               reduce using rule 51 (valores -> FLOAT .)
    ]               reduce using rule 51 (valores -> FLOAT .)
    +               reduce using rule 102 (valoresMat -> FLOAT .)
    -               reduce using rule 102 (valoresMat -> FLOAT .)
    *               reduce using rule 102 (valoresMat -> FLOAT .)
    /               reduce using rule 102 (valoresMat -> FLOAT .)
    %               reduce using rule 102 (valoresMat -> FLOAT .)
    ^               reduce using rule 102 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 184 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 184 (tCompare -> FLOAT .)
    >               reduce using rule 184 (tCompare -> FLOAT .)
    <               reduce using rule 184 (tCompare -> FLOAT .)


state 96

    (38) funcBool -> COLINEALES ( valores . , valores )

    ,               shift and go to state 189


state 97

    (122) eMat -> p .
    (123) p -> p . * exp
    (124) p -> p . / exp
    (125) p -> p . % exp
    (129) p -> p . * valoresMat
    (130) p -> p . / valoresMat
    (131) p -> p . % valoresMat

    +               reduce using rule 122 (eMat -> p .)
    -               reduce using rule 122 (eMat -> p .)
    >               reduce using rule 122 (eMat -> p .)
    <               reduce using rule 122 (eMat -> p .)
    EQEQ            reduce using rule 122 (eMat -> p .)
    DISTINTO        reduce using rule 122 (eMat -> p .)
    AND             reduce using rule 122 (eMat -> p .)
    OR              reduce using rule 122 (eMat -> p .)
    ?               reduce using rule 122 (eMat -> p .)
    ,               reduce using rule 122 (eMat -> p .)
    )               reduce using rule 122 (eMat -> p .)
    ;               reduce using rule 122 (eMat -> p .)
    ]               reduce using rule 122 (eMat -> p .)
    :               reduce using rule 122 (eMat -> p .)
    }               reduce using rule 122 (eMat -> p .)
    *               shift and go to state 191
    /               shift and go to state 192
    %               shift and go to state 190


state 98

    (53) valores -> BOOL .
    (148) valoresBool -> BOOL .

    )               reduce using rule 53 (valores -> BOOL .)
    ;               reduce using rule 53 (valores -> BOOL .)
    ,               reduce using rule 53 (valores -> BOOL .)
    }               reduce using rule 53 (valores -> BOOL .)
    ]               reduce using rule 53 (valores -> BOOL .)
    OR              reduce using rule 148 (valoresBool -> BOOL .)
    ?               reduce using rule 148 (valoresBool -> BOOL .)
    AND             reduce using rule 148 (valoresBool -> BOOL .)


state 99

    (55) valores -> varsOps .
    (105) valoresMat -> varsOps .
    (151) valoresBool -> varsOps .
    (180) tCompare -> varsOps .

    )               reduce using rule 55 (valores -> varsOps .)
    ;               reduce using rule 55 (valores -> varsOps .)
    ,               reduce using rule 55 (valores -> varsOps .)
    }               reduce using rule 55 (valores -> varsOps .)
    ]               reduce using rule 55 (valores -> varsOps .)
    +               reduce using rule 105 (valoresMat -> varsOps .)
    -               reduce using rule 105 (valoresMat -> varsOps .)
    *               reduce using rule 105 (valoresMat -> varsOps .)
    /               reduce using rule 105 (valoresMat -> varsOps .)
    %               reduce using rule 105 (valoresMat -> varsOps .)
    ^               reduce using rule 105 (valoresMat -> varsOps .)
    OR              reduce using rule 151 (valoresBool -> varsOps .)
    ?               reduce using rule 151 (valoresBool -> varsOps .)
    AND             reduce using rule 151 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 180 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 180 (tCompare -> varsOps .)
    >               reduce using rule 180 (tCompare -> varsOps .)
    <               reduce using rule 180 (tCompare -> varsOps .)


state 100

    (191) not -> parenBool .

    EQEQ            reduce using rule 191 (not -> parenBool .)
    DISTINTO        reduce using rule 191 (not -> parenBool .)
    AND             reduce using rule 191 (not -> parenBool .)
    OR              reduce using rule 191 (not -> parenBool .)
    )               reduce using rule 191 (not -> parenBool .)
    ?               reduce using rule 191 (not -> parenBool .)
    ;               reduce using rule 191 (not -> parenBool .)
    ,               reduce using rule 191 (not -> parenBool .)
    ]               reduce using rule 191 (not -> parenBool .)
    :               reduce using rule 191 (not -> parenBool .)
    }               reduce using rule 191 (not -> parenBool .)


state 101

    (189) not -> NOT . not
    (190) not -> NOT . valoresBool
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (192) parenBool -> . ( expBool )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (80) vecVal -> . ID m

    NOT             shift and go to state 101
    BOOL            shift and go to state 117
    (               shift and go to state 193
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29

    funcBool                       shift and go to state 107
    parenBool                      shift and go to state 100
    varsOps                        shift and go to state 195
    vecVal                         shift and go to state 8
    not                            shift and go to state 194
    varYVals                       shift and go to state 196
    valoresBool                    shift and go to state 197

state 102

    (135) p -> exp .
    (136) exp -> exp . ^ iSing
    (138) exp -> exp . ^ valoresMat

    *               reduce using rule 135 (p -> exp .)
    /               reduce using rule 135 (p -> exp .)
    %               reduce using rule 135 (p -> exp .)
    +               reduce using rule 135 (p -> exp .)
    -               reduce using rule 135 (p -> exp .)
    ,               reduce using rule 135 (p -> exp .)
    ]               reduce using rule 135 (p -> exp .)
    EQEQ            reduce using rule 135 (p -> exp .)
    DISTINTO        reduce using rule 135 (p -> exp .)
    >               reduce using rule 135 (p -> exp .)
    <               reduce using rule 135 (p -> exp .)
    ;               reduce using rule 135 (p -> exp .)
    )               reduce using rule 135 (p -> exp .)
    AND             reduce using rule 135 (p -> exp .)
    OR              reduce using rule 135 (p -> exp .)
    ?               reduce using rule 135 (p -> exp .)
    :               reduce using rule 135 (p -> exp .)
    }               reduce using rule 135 (p -> exp .)
    ^               shift and go to state 198


state 103

    (57) valores -> ternarioVars .

    )               reduce using rule 57 (valores -> ternarioVars .)
    ;               reduce using rule 57 (valores -> ternarioVars .)
    ,               reduce using rule 57 (valores -> ternarioVars .)
    }               reduce using rule 57 (valores -> ternarioVars .)
    ]               reduce using rule 57 (valores -> ternarioVars .)


state 104

    (178) eq -> mayor .

    EQEQ            reduce using rule 178 (eq -> mayor .)
    DISTINTO        reduce using rule 178 (eq -> mayor .)
    AND             reduce using rule 178 (eq -> mayor .)
    OR              reduce using rule 178 (eq -> mayor .)
    ?               reduce using rule 178 (eq -> mayor .)
    ,               reduce using rule 178 (eq -> mayor .)
    )               reduce using rule 178 (eq -> mayor .)
    ;               reduce using rule 178 (eq -> mayor .)
    ]               reduce using rule 178 (eq -> mayor .)
    :               reduce using rule 178 (eq -> mayor .)
    }               reduce using rule 178 (eq -> mayor .)


state 105

    (54) valores -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS
    (104) valoresMat -> varYVals .
    (150) valoresBool -> varYVals .
    (181) tCompare -> varYVals .

    )               reduce using rule 54 (valores -> varYVals .)
    ;               reduce using rule 54 (valores -> varYVals .)
    ,               reduce using rule 54 (valores -> varYVals .)
    }               reduce using rule 54 (valores -> varYVals .)
    ]               reduce using rule 54 (valores -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    ^               reduce using rule 104 (valoresMat -> varYVals .)
    OR              reduce using rule 150 (valoresBool -> varYVals .)
    ?               reduce using rule 150 (valoresBool -> varYVals .)
    AND             reduce using rule 150 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 181 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 181 (tCompare -> varYVals .)
    >               reduce using rule 181 (tCompare -> varYVals .)
    <               reduce using rule 181 (tCompare -> varYVals .)


state 106

    (59) valores -> atributos .

    )               reduce using rule 59 (valores -> atributos .)
    ;               reduce using rule 59 (valores -> atributos .)
    ,               reduce using rule 59 (valores -> atributos .)
    }               reduce using rule 59 (valores -> atributos .)
    ]               reduce using rule 59 (valores -> atributos .)


state 107

    (149) valoresBool -> funcBool .

    OR              reduce using rule 149 (valoresBool -> funcBool .)
    AND             reduce using rule 149 (valoresBool -> funcBool .)
    )               reduce using rule 149 (valoresBool -> funcBool .)
    ?               reduce using rule 149 (valoresBool -> funcBool .)
    ,               reduce using rule 149 (valoresBool -> funcBool .)
    ;               reduce using rule 149 (valoresBool -> funcBool .)
    ]               reduce using rule 149 (valoresBool -> funcBool .)
    :               reduce using rule 149 (valoresBool -> funcBool .)
    }               reduce using rule 149 (valoresBool -> funcBool .)
    EQEQ            reduce using rule 149 (valoresBool -> funcBool .)
    DISTINTO        reduce using rule 149 (valoresBool -> funcBool .)


state 108

    (183) tCompare -> funcInt .
    (103) valoresMat -> funcInt .

    EQEQ            reduce using rule 183 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 183 (tCompare -> funcInt .)
    >               reduce using rule 183 (tCompare -> funcInt .)
    <               reduce using rule 183 (tCompare -> funcInt .)
    AND             reduce using rule 183 (tCompare -> funcInt .)
    OR              reduce using rule 183 (tCompare -> funcInt .)
    ?               reduce using rule 183 (tCompare -> funcInt .)
    ,               reduce using rule 183 (tCompare -> funcInt .)
    )               reduce using rule 183 (tCompare -> funcInt .)
    ;               reduce using rule 183 (tCompare -> funcInt .)
    ]               reduce using rule 183 (tCompare -> funcInt .)
    :               reduce using rule 183 (tCompare -> funcInt .)
    }               reduce using rule 183 (tCompare -> funcInt .)
    +               reduce using rule 103 (valoresMat -> funcInt .)
    -               reduce using rule 103 (valoresMat -> funcInt .)
    *               reduce using rule 103 (valoresMat -> funcInt .)
    /               reduce using rule 103 (valoresMat -> funcInt .)
    %               reduce using rule 103 (valoresMat -> funcInt .)
    ^               reduce using rule 103 (valoresMat -> funcInt .)


state 109

    (106) valoresMat -> STRING .

    ^               reduce using rule 106 (valoresMat -> STRING .)
    *               reduce using rule 106 (valoresMat -> STRING .)
    /               reduce using rule 106 (valoresMat -> STRING .)
    %               reduce using rule 106 (valoresMat -> STRING .)
    +               reduce using rule 106 (valoresMat -> STRING .)
    -               reduce using rule 106 (valoresMat -> STRING .)
    ,               reduce using rule 106 (valoresMat -> STRING .)
    EQEQ            reduce using rule 106 (valoresMat -> STRING .)
    DISTINTO        reduce using rule 106 (valoresMat -> STRING .)
    >               reduce using rule 106 (valoresMat -> STRING .)
    <               reduce using rule 106 (valoresMat -> STRING .)
    )               reduce using rule 106 (valoresMat -> STRING .)
    ]               reduce using rule 106 (valoresMat -> STRING .)
    ;               reduce using rule 106 (valoresMat -> STRING .)
    AND             reduce using rule 106 (valoresMat -> STRING .)
    OR              reduce using rule 106 (valoresMat -> STRING .)
    ?               reduce using rule 106 (valoresMat -> STRING .)
    :               reduce using rule 106 (valoresMat -> STRING .)
    }               reduce using rule 106 (valoresMat -> STRING .)


state 110

    (23) cosaBooleana -> valoresBool .
    (161) expBool -> valoresBool . OR and
    (163) expBool -> valoresBool . OR valoresBool
    (166) and -> valoresBool . AND eq
    (168) and -> valoresBool . AND valoresBool

    )               reduce using rule 23 (cosaBooleana -> valoresBool .)
    ;               reduce using rule 23 (cosaBooleana -> valoresBool .)
    OR              shift and go to state 157
    AND             shift and go to state 156


state 111

    (179) tCompare -> eMat .
    (114) eMat -> eMat . + p
    (115) eMat -> eMat . - p
    (118) eMat -> eMat . + valoresMat
    (119) eMat -> eMat . - valoresMat

    EQEQ            reduce using rule 179 (tCompare -> eMat .)
    DISTINTO        reduce using rule 179 (tCompare -> eMat .)
    >               reduce using rule 179 (tCompare -> eMat .)
    <               reduce using rule 179 (tCompare -> eMat .)
    AND             reduce using rule 179 (tCompare -> eMat .)
    OR              reduce using rule 179 (tCompare -> eMat .)
    ?               reduce using rule 179 (tCompare -> eMat .)
    ,               reduce using rule 179 (tCompare -> eMat .)
    )               reduce using rule 179 (tCompare -> eMat .)
    ;               reduce using rule 179 (tCompare -> eMat .)
    ]               reduce using rule 179 (tCompare -> eMat .)
    :               reduce using rule 179 (tCompare -> eMat .)
    }               reduce using rule 179 (tCompare -> eMat .)
    +               shift and go to state 159
    -               shift and go to state 160


state 112

    (192) parenBool -> ( . expBool )
    (146) paren -> ( . eMat )
    (147) paren -> ( . valoresMat )
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (38) funcBool -> . COLINEALES ( valores , valores )
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (80) vecVal -> . ID m
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 166
    FLOAT           shift and go to state 167
    STRING          shift and go to state 109
    BOOL            shift and go to state 117
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 165
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 161
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 162
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 199
    eMat                           shift and go to state 164
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    varsOps                        shift and go to state 168
    exp                            shift and go to state 102
    varYVals                       shift and go to state 170
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 200

state 113

    (22) cosaBooleana -> expBool .
    (160) expBool -> expBool . OR and
    (162) expBool -> expBool . OR valoresBool

    )               reduce using rule 22 (cosaBooleana -> expBool .)
    ;               reduce using rule 22 (cosaBooleana -> expBool .)
    OR              shift and go to state 179


state 114

    (20) loop -> WHILE ( cosaBooleana . )

    )               shift and go to state 201


state 115

    (182) tCompare -> INT .
    (101) valoresMat -> INT .

    EQEQ            reduce using rule 182 (tCompare -> INT .)
    DISTINTO        reduce using rule 182 (tCompare -> INT .)
    >               reduce using rule 182 (tCompare -> INT .)
    <               reduce using rule 182 (tCompare -> INT .)
    AND             reduce using rule 182 (tCompare -> INT .)
    OR              reduce using rule 182 (tCompare -> INT .)
    ?               reduce using rule 182 (tCompare -> INT .)
    ,               reduce using rule 182 (tCompare -> INT .)
    )               reduce using rule 182 (tCompare -> INT .)
    ;               reduce using rule 182 (tCompare -> INT .)
    ]               reduce using rule 182 (tCompare -> INT .)
    :               reduce using rule 182 (tCompare -> INT .)
    }               reduce using rule 182 (tCompare -> INT .)
    +               reduce using rule 101 (valoresMat -> INT .)
    -               reduce using rule 101 (valoresMat -> INT .)
    *               reduce using rule 101 (valoresMat -> INT .)
    /               reduce using rule 101 (valoresMat -> INT .)
    %               reduce using rule 101 (valoresMat -> INT .)
    ^               reduce using rule 101 (valoresMat -> INT .)


state 116

    (184) tCompare -> FLOAT .
    (102) valoresMat -> FLOAT .

    EQEQ            reduce using rule 184 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 184 (tCompare -> FLOAT .)
    >               reduce using rule 184 (tCompare -> FLOAT .)
    <               reduce using rule 184 (tCompare -> FLOAT .)
    AND             reduce using rule 184 (tCompare -> FLOAT .)
    OR              reduce using rule 184 (tCompare -> FLOAT .)
    ?               reduce using rule 184 (tCompare -> FLOAT .)
    ,               reduce using rule 184 (tCompare -> FLOAT .)
    )               reduce using rule 184 (tCompare -> FLOAT .)
    ;               reduce using rule 184 (tCompare -> FLOAT .)
    ]               reduce using rule 184 (tCompare -> FLOAT .)
    :               reduce using rule 184 (tCompare -> FLOAT .)
    }               reduce using rule 184 (tCompare -> FLOAT .)
    +               reduce using rule 102 (valoresMat -> FLOAT .)
    -               reduce using rule 102 (valoresMat -> FLOAT .)
    *               reduce using rule 102 (valoresMat -> FLOAT .)
    /               reduce using rule 102 (valoresMat -> FLOAT .)
    %               reduce using rule 102 (valoresMat -> FLOAT .)
    ^               reduce using rule 102 (valoresMat -> FLOAT .)


state 117

    (148) valoresBool -> BOOL .

    OR              reduce using rule 148 (valoresBool -> BOOL .)
    AND             reduce using rule 148 (valoresBool -> BOOL .)
    )               reduce using rule 148 (valoresBool -> BOOL .)
    ?               reduce using rule 148 (valoresBool -> BOOL .)
    ,               reduce using rule 148 (valoresBool -> BOOL .)
    ;               reduce using rule 148 (valoresBool -> BOOL .)
    ]               reduce using rule 148 (valoresBool -> BOOL .)
    :               reduce using rule 148 (valoresBool -> BOOL .)
    }               reduce using rule 148 (valoresBool -> BOOL .)
    EQEQ            reduce using rule 148 (valoresBool -> BOOL .)
    DISTINTO        reduce using rule 148 (valoresBool -> BOOL .)


state 118

    (151) valoresBool -> varsOps .
    (180) tCompare -> varsOps .
    (105) valoresMat -> varsOps .

    OR              reduce using rule 151 (valoresBool -> varsOps .)
    AND             reduce using rule 151 (valoresBool -> varsOps .)
    )               reduce using rule 151 (valoresBool -> varsOps .)
    ?               reduce using rule 151 (valoresBool -> varsOps .)
    ,               reduce using rule 151 (valoresBool -> varsOps .)
    ;               reduce using rule 151 (valoresBool -> varsOps .)
    ]               reduce using rule 151 (valoresBool -> varsOps .)
    :               reduce using rule 151 (valoresBool -> varsOps .)
    }               reduce using rule 151 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 180 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 180 (tCompare -> varsOps .)
    >               reduce using rule 180 (tCompare -> varsOps .)
    <               reduce using rule 180 (tCompare -> varsOps .)
    +               reduce using rule 105 (valoresMat -> varsOps .)
    -               reduce using rule 105 (valoresMat -> varsOps .)
    *               reduce using rule 105 (valoresMat -> varsOps .)
    /               reduce using rule 105 (valoresMat -> varsOps .)
    %               reduce using rule 105 (valoresMat -> varsOps .)
    ^               reduce using rule 105 (valoresMat -> varsOps .)


state 119

    (150) valoresBool -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS
    (181) tCompare -> varYVals .
    (104) valoresMat -> varYVals .

    OR              reduce using rule 150 (valoresBool -> varYVals .)
    AND             reduce using rule 150 (valoresBool -> varYVals .)
    )               reduce using rule 150 (valoresBool -> varYVals .)
    ?               reduce using rule 150 (valoresBool -> varYVals .)
    ,               reduce using rule 150 (valoresBool -> varYVals .)
    ;               reduce using rule 150 (valoresBool -> varYVals .)
    ]               reduce using rule 150 (valoresBool -> varYVals .)
    :               reduce using rule 150 (valoresBool -> varYVals .)
    }               reduce using rule 150 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60
    EQEQ            reduce using rule 181 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 181 (tCompare -> varYVals .)
    >               reduce using rule 181 (tCompare -> varYVals .)
    <               reduce using rule 181 (tCompare -> varYVals .)
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    ^               reduce using rule 104 (valoresMat -> varYVals .)


state 120

    (39) funcVoid -> PRINT ( valores . )

    )               shift and go to state 202


state 121

    (79) varYVals -> vecVal . varYVals .

    MASMAS          reduce using rule 79 (varYVals -> vecVal . varYVals .)
    MENOSMENOS      reduce using rule 79 (varYVals -> vecVal . varYVals .)
    ;               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    )               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    +               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    -               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    *               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    /               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    %               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    ^               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    OR              reduce using rule 79 (varYVals -> vecVal . varYVals .)
    ?               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    AND             reduce using rule 79 (varYVals -> vecVal . varYVals .)
    EQEQ            reduce using rule 79 (varYVals -> vecVal . varYVals .)
    DISTINTO        reduce using rule 79 (varYVals -> vecVal . varYVals .)
    >               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    <               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    ,               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    ]               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    :               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    }               reduce using rule 79 (varYVals -> vecVal . varYVals .)
    MULEQ           reduce using rule 79 (varYVals -> vecVal . varYVals .)
    DIVEQ           reduce using rule 79 (varYVals -> vecVal . varYVals .)
    MASEQ           reduce using rule 79 (varYVals -> vecVal . varYVals .)
    MENOSEQ         reduce using rule 79 (varYVals -> vecVal . varYVals .)
    =               reduce using rule 79 (varYVals -> vecVal . varYVals .)


state 122

    (5) lAbierta -> IF ( cosaBooleana . ) linea
    (6) lAbierta -> IF ( cosaBooleana . ) bloqueCerrado ELSE lAbierta
    (12) lCerrada -> IF ( cosaBooleana . ) bloqueCerrado ELSE bloqueCerrado

    )               shift and go to state 203


state 123

    (24) primParam -> varAsig .

    ;               reduce using rule 24 (primParam -> varAsig .)


state 124

    (21) loop -> FOR ( primParam . ; cosaBooleana ; tercerParam )

    ;               shift and go to state 204


state 125

    (95) varAsig -> varYVals . MULEQ valoresAsig
    (96) varAsig -> varYVals . DIVEQ valoresAsig
    (97) varAsig -> varYVals . MASEQ valoresAsig
    (98) varAsig -> varYVals . MENOSEQ valoresAsig
    (99) varAsig -> varYVals . = valoresAsig

    MULEQ           shift and go to state 64
    DIVEQ           shift and go to state 65
    MASEQ           shift and go to state 61
    MENOSEQ         shift and go to state 59
    =               shift and go to state 62


state 126

    (25) primParam -> empty .

    ;               reduce using rule 25 (primParam -> empty .)


state 127

    (36) funcInt -> LENGTH ( valores . )

    )               shift and go to state 205


state 128

    (100) varAsig -> ID . ID . = valoresAsig

    =               shift and go to state 206


state 129

    (103) valoresMat -> funcInt .

    ^               reduce using rule 103 (valoresMat -> funcInt .)
    *               reduce using rule 103 (valoresMat -> funcInt .)
    /               reduce using rule 103 (valoresMat -> funcInt .)
    %               reduce using rule 103 (valoresMat -> funcInt .)
    +               reduce using rule 103 (valoresMat -> funcInt .)
    -               reduce using rule 103 (valoresMat -> funcInt .)
    ,               reduce using rule 103 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 103 (valoresMat -> funcInt .)
    DISTINTO        reduce using rule 103 (valoresMat -> funcInt .)
    >               reduce using rule 103 (valoresMat -> funcInt .)
    <               reduce using rule 103 (valoresMat -> funcInt .)
    )               reduce using rule 103 (valoresMat -> funcInt .)
    ]               reduce using rule 103 (valoresMat -> funcInt .)
    ;               reduce using rule 103 (valoresMat -> funcInt .)
    AND             reduce using rule 103 (valoresMat -> funcInt .)
    OR              reduce using rule 103 (valoresMat -> funcInt .)
    ?               reduce using rule 103 (valoresMat -> funcInt .)
    :               reduce using rule 103 (valoresMat -> funcInt .)
    }               reduce using rule 103 (valoresMat -> funcInt .)


state 130

    (85) m -> [ eMat . ] m
    (86) m -> [ eMat . ]
    (114) eMat -> eMat . + p
    (115) eMat -> eMat . - p
    (118) eMat -> eMat . + valoresMat
    (119) eMat -> eMat . - valoresMat

    ]               shift and go to state 207
    +               shift and go to state 159
    -               shift and go to state 160


state 131

    (146) paren -> ( . eMat )
    (147) paren -> ( . valoresMat )
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (80) vecVal -> . ID m
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 131

    eMat                           shift and go to state 208
    funcInt                        shift and go to state 129
    p                              shift and go to state 97
    varsOps                        shift and go to state 134
    valoresMat                     shift and go to state 162
    paren                          shift and go to state 90
    exp                            shift and go to state 102
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 132

    (81) m -> [ INT . ]
    (82) m -> [ INT . ] m
    (101) valoresMat -> INT .

    ]               shift and go to state 209
    +               reduce using rule 101 (valoresMat -> INT .)
    -               reduce using rule 101 (valoresMat -> INT .)
    *               reduce using rule 101 (valoresMat -> INT .)
    /               reduce using rule 101 (valoresMat -> INT .)
    %               reduce using rule 101 (valoresMat -> INT .)
    ^               reduce using rule 101 (valoresMat -> INT .)


state 133

    (102) valoresMat -> FLOAT .

    ^               reduce using rule 102 (valoresMat -> FLOAT .)
    *               reduce using rule 102 (valoresMat -> FLOAT .)
    /               reduce using rule 102 (valoresMat -> FLOAT .)
    %               reduce using rule 102 (valoresMat -> FLOAT .)
    +               reduce using rule 102 (valoresMat -> FLOAT .)
    -               reduce using rule 102 (valoresMat -> FLOAT .)
    ,               reduce using rule 102 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 102 (valoresMat -> FLOAT .)
    DISTINTO        reduce using rule 102 (valoresMat -> FLOAT .)
    >               reduce using rule 102 (valoresMat -> FLOAT .)
    <               reduce using rule 102 (valoresMat -> FLOAT .)
    )               reduce using rule 102 (valoresMat -> FLOAT .)
    ]               reduce using rule 102 (valoresMat -> FLOAT .)
    ;               reduce using rule 102 (valoresMat -> FLOAT .)
    AND             reduce using rule 102 (valoresMat -> FLOAT .)
    OR              reduce using rule 102 (valoresMat -> FLOAT .)
    ?               reduce using rule 102 (valoresMat -> FLOAT .)
    :               reduce using rule 102 (valoresMat -> FLOAT .)
    }               reduce using rule 102 (valoresMat -> FLOAT .)


state 134

    (105) valoresMat -> varsOps .

    ^               reduce using rule 105 (valoresMat -> varsOps .)
    *               reduce using rule 105 (valoresMat -> varsOps .)
    /               reduce using rule 105 (valoresMat -> varsOps .)
    %               reduce using rule 105 (valoresMat -> varsOps .)
    +               reduce using rule 105 (valoresMat -> varsOps .)
    -               reduce using rule 105 (valoresMat -> varsOps .)
    ,               reduce using rule 105 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 105 (valoresMat -> varsOps .)
    DISTINTO        reduce using rule 105 (valoresMat -> varsOps .)
    >               reduce using rule 105 (valoresMat -> varsOps .)
    <               reduce using rule 105 (valoresMat -> varsOps .)
    )               reduce using rule 105 (valoresMat -> varsOps .)
    ]               reduce using rule 105 (valoresMat -> varsOps .)
    ;               reduce using rule 105 (valoresMat -> varsOps .)
    AND             reduce using rule 105 (valoresMat -> varsOps .)
    OR              reduce using rule 105 (valoresMat -> varsOps .)
    ?               reduce using rule 105 (valoresMat -> varsOps .)
    :               reduce using rule 105 (valoresMat -> varsOps .)
    }               reduce using rule 105 (valoresMat -> varsOps .)


state 135

    (83) m -> [ varYVals . ] m
    (84) m -> [ varYVals . ]
    (104) valoresMat -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS

    ]               shift and go to state 210
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    ^               reduce using rule 104 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60


state 136

    (35) funcInt -> MULTIESCALAR ( valores . , valores param )

    ,               shift and go to state 211


state 137

    (37) funcString -> CAPITALIZAR ( valores . )

    )               shift and go to state 212


state 138

    (98) varAsig -> varYVals MENOSEQ valoresAsig .

    ;               reduce using rule 98 (varAsig -> varYVals MENOSEQ valoresAsig .)
    )               reduce using rule 98 (varAsig -> varYVals MENOSEQ valoresAsig .)


state 139

    (94) valoresAsig -> valores .

    ;               reduce using rule 94 (valoresAsig -> valores .)
    )               reduce using rule 94 (valoresAsig -> valores .)


state 140

    (97) varAsig -> varYVals MASEQ valoresAsig .

    ;               reduce using rule 97 (varAsig -> varYVals MASEQ valoresAsig .)
    )               reduce using rule 97 (varAsig -> varYVals MASEQ valoresAsig .)


state 141

    (99) varAsig -> varYVals = valoresAsig .

    ;               reduce using rule 99 (varAsig -> varYVals = valoresAsig .)
    )               reduce using rule 99 (varAsig -> varYVals = valoresAsig .)


state 142

    (95) varAsig -> varYVals MULEQ valoresAsig .

    ;               reduce using rule 95 (varAsig -> varYVals MULEQ valoresAsig .)
    )               reduce using rule 95 (varAsig -> varYVals MULEQ valoresAsig .)


state 143

    (96) varAsig -> varYVals DIVEQ valoresAsig .

    ;               reduce using rule 96 (varAsig -> varYVals DIVEQ valoresAsig .)
    )               reduce using rule 96 (varAsig -> varYVals DIVEQ valoresAsig .)


state 144

    (14) lCerrada -> DO bloqueCerrado WHILE ( . cosaBooleana ) ;
    (22) cosaBooleana -> . expBool
    (23) cosaBooleana -> . valoresBool
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (80) vecVal -> . ID m
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 110
    eMat                           shift and go to state 111
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    cosaBooleana                   shift and go to state 213
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 119
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 113

state 145

    (12) lCerrada -> IF ( cosaBooleana . ) bloqueCerrado ELSE bloqueCerrado

    )               shift and go to state 214


state 146

    (9) bloqueCerrado -> { g } .

    WHILE           reduce using rule 9 (bloqueCerrado -> { g } .)
    ELSE            reduce using rule 9 (bloqueCerrado -> { g } .)
    IF              reduce using rule 9 (bloqueCerrado -> { g } .)
    COMMENT         reduce using rule 9 (bloqueCerrado -> { g } .)
    DO              reduce using rule 9 (bloqueCerrado -> { g } .)
    FOR             reduce using rule 9 (bloqueCerrado -> { g } .)
    RETURN          reduce using rule 9 (bloqueCerrado -> { g } .)
    ;               reduce using rule 9 (bloqueCerrado -> { g } .)
    MENOSMENOS      reduce using rule 9 (bloqueCerrado -> { g } .)
    MASMAS          reduce using rule 9 (bloqueCerrado -> { g } .)
    ID              reduce using rule 9 (bloqueCerrado -> { g } .)
    PRINT           reduce using rule 9 (bloqueCerrado -> { g } .)
    MULTIESCALAR    reduce using rule 9 (bloqueCerrado -> { g } .)
    LENGTH          reduce using rule 9 (bloqueCerrado -> { g } .)
    CAPITALIZAR     reduce using rule 9 (bloqueCerrado -> { g } .)
    COLINEALES      reduce using rule 9 (bloqueCerrado -> { g } .)
    $end            reduce using rule 9 (bloqueCerrado -> { g } .)
    }               reduce using rule 9 (bloqueCerrado -> { g } .)


state 147

    (165) and -> and AND . eq
    (167) and -> and AND . valoresBool
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (80) vecVal -> . ID m
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 215
    mayor                          shift and go to state 104
    valoresBool                    shift and go to state 216
    eMat                           shift and go to state 111
    vecVal                         shift and go to state 8
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 217
    parenBool                      shift and go to state 100

state 148

    (128) p -> valoresMat % . exp
    (134) p -> valoresMat % . valoresMat
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (80) vecVal -> . ID m

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    (               shift and go to state 131

    valoresMat                     shift and go to state 218
    funcInt                        shift and go to state 129
    varsOps                        shift and go to state 134
    exp                            shift and go to state 219
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 149

    (116) eMat -> valoresMat + . p
    (120) eMat -> valoresMat + . valoresMat
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (80) vecVal -> . ID m
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 131

    valoresMat                     shift and go to state 220
    funcInt                        shift and go to state 129
    p                              shift and go to state 221
    varsOps                        shift and go to state 134
    exp                            shift and go to state 102
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 150

    (126) p -> valoresMat * . exp
    (132) p -> valoresMat * . valoresMat
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (80) vecVal -> . ID m

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    (               shift and go to state 131

    valoresMat                     shift and go to state 222
    funcInt                        shift and go to state 129
    varsOps                        shift and go to state 134
    exp                            shift and go to state 223
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 151

    (117) eMat -> valoresMat - . p
    (121) eMat -> valoresMat - . valoresMat
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (80) vecVal -> . ID m
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 131

    valoresMat                     shift and go to state 224
    funcInt                        shift and go to state 129
    p                              shift and go to state 225
    varsOps                        shift and go to state 134
    exp                            shift and go to state 102
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 152

    (127) p -> valoresMat / . exp
    (133) p -> valoresMat / . valoresMat
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (80) vecVal -> . ID m

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    (               shift and go to state 131

    valoresMat                     shift and go to state 226
    funcInt                        shift and go to state 129
    varsOps                        shift and go to state 134
    exp                            shift and go to state 227
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 153

    (137) exp -> valoresMat ^ . iSing
    (139) exp -> valoresMat ^ . valoresMat
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (80) vecVal -> . ID m

    -               shift and go to state 83
    +               shift and go to state 82
    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    (               shift and go to state 131
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29

    funcInt                        shift and go to state 129
    iSing                          shift and go to state 229
    valoresMat                     shift and go to state 228
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 134

state 154

    (170) eq -> eq EQEQ . mayor
    (174) eq -> eq EQEQ . tCompare
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (80) vecVal -> . ID m
    (192) parenBool -> . ( expBool )
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    NOT             shift and go to state 101
    STRING          shift and go to state 109
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    paren                          shift and go to state 90
    eMat                           shift and go to state 111
    p                              shift and go to state 97
    varYVals                       shift and go to state 233
    funcInt                        shift and go to state 108
    vecVal                         shift and go to state 8
    tCompare                       shift and go to state 231
    menor                          shift and go to state 75
    varsOps                        shift and go to state 232
    valoresMat                     shift and go to state 76
    parenBool                      shift and go to state 100
    not                            shift and go to state 74
    exp                            shift and go to state 102
    mayor                          shift and go to state 230
    iSing                          shift and go to state 88

state 155

    (171) eq -> eq DISTINTO . mayor
    (175) eq -> eq DISTINTO . tCompare
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (80) vecVal -> . ID m
    (192) parenBool -> . ( expBool )
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    NOT             shift and go to state 101
    STRING          shift and go to state 109
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    paren                          shift and go to state 90
    eMat                           shift and go to state 111
    p                              shift and go to state 97
    varYVals                       shift and go to state 233
    funcInt                        shift and go to state 108
    vecVal                         shift and go to state 8
    tCompare                       shift and go to state 235
    menor                          shift and go to state 75
    varsOps                        shift and go to state 232
    valoresMat                     shift and go to state 76
    parenBool                      shift and go to state 100
    not                            shift and go to state 74
    exp                            shift and go to state 102
    mayor                          shift and go to state 234
    iSing                          shift and go to state 88

state 156

    (166) and -> valoresBool AND . eq
    (168) and -> valoresBool AND . valoresBool
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (80) vecVal -> . ID m
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 236
    mayor                          shift and go to state 104
    valoresBool                    shift and go to state 237
    eMat                           shift and go to state 111
    vecVal                         shift and go to state 8
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 217
    parenBool                      shift and go to state 100

state 157

    (161) expBool -> valoresBool OR . and
    (163) expBool -> valoresBool OR . valoresBool
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (80) vecVal -> . ID m
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 238
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    mayor                          shift and go to state 104
    valoresBool                    shift and go to state 239
    eMat                           shift and go to state 111
    vecVal                         shift and go to state 8
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 119
    parenBool                      shift and go to state 100

state 158

    (65) ternarioVars -> valoresBool ? . valoresTernarioVars : valoresTernarioVars
    (67) valoresTernarioVars -> . varsOps
    (68) valoresTernarioVars -> . varYVals
    (69) valoresTernarioVars -> . reg
    (70) valoresTernarioVars -> . vec
    (71) valoresTernarioVars -> . ternarioVars
    (72) valoresTernarioVars -> . ( ternarioVars )
    (73) valoresTernarioVars -> . valoresTernarioMat
    (74) valoresTernarioVars -> . valoresTernarioBool
    (75) valoresTernarioVars -> . atributos
    (76) valoresTernarioVars -> . RES
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (87) reg -> . { campos }
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) valoresTernarioMat -> . INT
    (110) valoresTernarioMat -> . FLOAT
    (111) valoresTernarioMat -> . funcInt
    (112) valoresTernarioMat -> . STRING
    (113) valoresTernarioMat -> . eMat
    (154) valoresTernarioBool -> . BOOL
    (155) valoresTernarioBool -> . funcBool
    (156) valoresTernarioBool -> . expBool
    (61) atributos -> . ID . valoresCampos
    (80) vecVal -> . ID m
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (38) funcBool -> . COLINEALES ( valores , valores )
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    (               shift and go to state 246
    RES             shift and go to state 241
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 84
    {               shift and go to state 92
    [               shift and go to state 91
    INT             shift and go to state 253
    FLOAT           shift and go to state 254
    STRING          shift and go to state 244
    BOOL            shift and go to state 248
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 240
    funcInt                        shift and go to state 242
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 163
    eMat                           shift and go to state 245
    valoresTernarioBool            shift and go to state 255
    vecVal                         shift and go to state 8
    vec                            shift and go to state 247
    paren                          shift and go to state 90
    varsOps                        shift and go to state 250
    reg                            shift and go to state 249
    valoresTernarioVars            shift and go to state 256
    exp                            shift and go to state 102
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    valoresTernarioMat             shift and go to state 252
    not                            shift and go to state 74
    p                              shift and go to state 97
    atributos                      shift and go to state 258
    ternarioVars                   shift and go to state 243
    varYVals                       shift and go to state 257
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 251

state 159

    (114) eMat -> eMat + . p
    (118) eMat -> eMat + . valoresMat
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (80) vecVal -> . ID m
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 131

    valoresMat                     shift and go to state 259
    funcInt                        shift and go to state 129
    p                              shift and go to state 260
    varsOps                        shift and go to state 134
    exp                            shift and go to state 102
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 160

    (115) eMat -> eMat - . p
    (119) eMat -> eMat - . valoresMat
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (80) vecVal -> . ID m
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 131

    valoresMat                     shift and go to state 261
    funcInt                        shift and go to state 129
    p                              shift and go to state 262
    varsOps                        shift and go to state 134
    exp                            shift and go to state 102
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 161

    (103) valoresMat -> funcInt .
    (183) tCompare -> funcInt .

    )               reduce using rule 103 (valoresMat -> funcInt .)
    +               reduce using rule 103 (valoresMat -> funcInt .)
    -               reduce using rule 103 (valoresMat -> funcInt .)
    *               reduce using rule 103 (valoresMat -> funcInt .)
    /               reduce using rule 103 (valoresMat -> funcInt .)
    %               reduce using rule 103 (valoresMat -> funcInt .)
    ^               reduce using rule 103 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 183 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 183 (tCompare -> funcInt .)
    >               reduce using rule 183 (tCompare -> funcInt .)
    <               reduce using rule 183 (tCompare -> funcInt .)


state 162

    (147) paren -> ( valoresMat . )
    (116) eMat -> valoresMat . + p
    (117) eMat -> valoresMat . - p
    (120) eMat -> valoresMat . + valoresMat
    (121) eMat -> valoresMat . - valoresMat
    (126) p -> valoresMat . * exp
    (127) p -> valoresMat . / exp
    (128) p -> valoresMat . % exp
    (132) p -> valoresMat . * valoresMat
    (133) p -> valoresMat . / valoresMat
    (134) p -> valoresMat . % valoresMat
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    )               shift and go to state 263
    +               shift and go to state 149
    -               shift and go to state 151
    *               shift and go to state 150
    /               shift and go to state 152
    %               shift and go to state 148
    ^               shift and go to state 153


state 163

    (65) ternarioVars -> valoresBool . ? valoresTernarioVars : valoresTernarioVars
    (161) expBool -> valoresBool . OR and
    (163) expBool -> valoresBool . OR valoresBool
    (166) and -> valoresBool . AND eq
    (168) and -> valoresBool . AND valoresBool

    ?               shift and go to state 158
    OR              shift and go to state 157
    AND             shift and go to state 156


state 164

    (146) paren -> ( eMat . )
    (114) eMat -> eMat . + p
    (115) eMat -> eMat . - p
    (118) eMat -> eMat . + valoresMat
    (119) eMat -> eMat . - valoresMat
    (179) tCompare -> eMat .

    )               shift and go to state 264
    +               shift and go to state 159
    -               shift and go to state 160
    EQEQ            reduce using rule 179 (tCompare -> eMat .)
    DISTINTO        reduce using rule 179 (tCompare -> eMat .)
    >               reduce using rule 179 (tCompare -> eMat .)
    <               reduce using rule 179 (tCompare -> eMat .)


state 165

    (146) paren -> ( . eMat )
    (147) paren -> ( . valoresMat )
    (192) parenBool -> ( . expBool )
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (80) vecVal -> . ID m
    (38) funcBool -> . COLINEALES ( valores , valores )
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 166
    FLOAT           shift and go to state 167
    STRING          shift and go to state 109
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 165
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 161
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 162
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 199
    eMat                           shift and go to state 164
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    varsOps                        shift and go to state 168
    exp                            shift and go to state 102
    varYVals                       shift and go to state 265
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 200

state 166

    (101) valoresMat -> INT .
    (182) tCompare -> INT .

    )               reduce using rule 101 (valoresMat -> INT .)
    +               reduce using rule 101 (valoresMat -> INT .)
    -               reduce using rule 101 (valoresMat -> INT .)
    *               reduce using rule 101 (valoresMat -> INT .)
    /               reduce using rule 101 (valoresMat -> INT .)
    %               reduce using rule 101 (valoresMat -> INT .)
    ^               reduce using rule 101 (valoresMat -> INT .)
    EQEQ            reduce using rule 182 (tCompare -> INT .)
    DISTINTO        reduce using rule 182 (tCompare -> INT .)
    >               reduce using rule 182 (tCompare -> INT .)
    <               reduce using rule 182 (tCompare -> INT .)


state 167

    (102) valoresMat -> FLOAT .
    (184) tCompare -> FLOAT .

    )               reduce using rule 102 (valoresMat -> FLOAT .)
    +               reduce using rule 102 (valoresMat -> FLOAT .)
    -               reduce using rule 102 (valoresMat -> FLOAT .)
    *               reduce using rule 102 (valoresMat -> FLOAT .)
    /               reduce using rule 102 (valoresMat -> FLOAT .)
    %               reduce using rule 102 (valoresMat -> FLOAT .)
    ^               reduce using rule 102 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 184 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 184 (tCompare -> FLOAT .)
    >               reduce using rule 184 (tCompare -> FLOAT .)
    <               reduce using rule 184 (tCompare -> FLOAT .)


state 168

    (105) valoresMat -> varsOps .
    (151) valoresBool -> varsOps .
    (180) tCompare -> varsOps .

    )               reduce using rule 105 (valoresMat -> varsOps .)
    +               reduce using rule 105 (valoresMat -> varsOps .)
    -               reduce using rule 105 (valoresMat -> varsOps .)
    *               reduce using rule 105 (valoresMat -> varsOps .)
    /               reduce using rule 105 (valoresMat -> varsOps .)
    %               reduce using rule 105 (valoresMat -> varsOps .)
    ^               reduce using rule 105 (valoresMat -> varsOps .)
    OR              reduce using rule 151 (valoresBool -> varsOps .)
    AND             reduce using rule 151 (valoresBool -> varsOps .)
    ?               reduce using rule 151 (valoresBool -> varsOps .)
    EQEQ            reduce using rule 180 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 180 (tCompare -> varsOps .)
    >               reduce using rule 180 (tCompare -> varsOps .)
    <               reduce using rule 180 (tCompare -> varsOps .)


state 169

    (58) valores -> ( ternarioVars . )

    )               shift and go to state 266


state 170

    (104) valoresMat -> varYVals .
    (150) valoresBool -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS
    (181) tCompare -> varYVals .

    )               reduce using rule 104 (valoresMat -> varYVals .)
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    ^               reduce using rule 104 (valoresMat -> varYVals .)
    OR              reduce using rule 150 (valoresBool -> varYVals .)
    AND             reduce using rule 150 (valoresBool -> varYVals .)
    ?               reduce using rule 150 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60
    EQEQ            reduce using rule 181 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 181 (tCompare -> varYVals .)
    >               reduce using rule 181 (tCompare -> varYVals .)
    <               reduce using rule 181 (tCompare -> varYVals .)


state 171

    (192) parenBool -> ( expBool . )
    (66) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (160) expBool -> expBool . OR and
    (162) expBool -> expBool . OR valoresBool

    )               shift and go to state 267
    ?               shift and go to state 180
    OR              shift and go to state 179


state 172

    (144) iSing -> + valoresMat .

    ^               reduce using rule 144 (iSing -> + valoresMat .)
    *               reduce using rule 144 (iSing -> + valoresMat .)
    /               reduce using rule 144 (iSing -> + valoresMat .)
    %               reduce using rule 144 (iSing -> + valoresMat .)
    +               reduce using rule 144 (iSing -> + valoresMat .)
    -               reduce using rule 144 (iSing -> + valoresMat .)
    ,               reduce using rule 144 (iSing -> + valoresMat .)
    )               reduce using rule 144 (iSing -> + valoresMat .)
    ;               reduce using rule 144 (iSing -> + valoresMat .)
    ]               reduce using rule 144 (iSing -> + valoresMat .)
    :               reduce using rule 144 (iSing -> + valoresMat .)
    }               reduce using rule 144 (iSing -> + valoresMat .)
    EQEQ            reduce using rule 144 (iSing -> + valoresMat .)
    DISTINTO        reduce using rule 144 (iSing -> + valoresMat .)
    >               reduce using rule 144 (iSing -> + valoresMat .)
    <               reduce using rule 144 (iSing -> + valoresMat .)
    AND             reduce using rule 144 (iSing -> + valoresMat .)
    OR              reduce using rule 144 (iSing -> + valoresMat .)
    ?               reduce using rule 144 (iSing -> + valoresMat .)


state 173

    (142) iSing -> + paren .

    ^               reduce using rule 142 (iSing -> + paren .)
    *               reduce using rule 142 (iSing -> + paren .)
    /               reduce using rule 142 (iSing -> + paren .)
    %               reduce using rule 142 (iSing -> + paren .)
    +               reduce using rule 142 (iSing -> + paren .)
    -               reduce using rule 142 (iSing -> + paren .)
    ,               reduce using rule 142 (iSing -> + paren .)
    )               reduce using rule 142 (iSing -> + paren .)
    ;               reduce using rule 142 (iSing -> + paren .)
    ]               reduce using rule 142 (iSing -> + paren .)
    :               reduce using rule 142 (iSing -> + paren .)
    }               reduce using rule 142 (iSing -> + paren .)
    EQEQ            reduce using rule 142 (iSing -> + paren .)
    DISTINTO        reduce using rule 142 (iSing -> + paren .)
    >               reduce using rule 142 (iSing -> + paren .)
    <               reduce using rule 142 (iSing -> + paren .)
    AND             reduce using rule 142 (iSing -> + paren .)
    OR              reduce using rule 142 (iSing -> + paren .)
    ?               reduce using rule 142 (iSing -> + paren .)


state 174

    (101) valoresMat -> INT .

    ^               reduce using rule 101 (valoresMat -> INT .)
    *               reduce using rule 101 (valoresMat -> INT .)
    /               reduce using rule 101 (valoresMat -> INT .)
    %               reduce using rule 101 (valoresMat -> INT .)
    +               reduce using rule 101 (valoresMat -> INT .)
    -               reduce using rule 101 (valoresMat -> INT .)
    ,               reduce using rule 101 (valoresMat -> INT .)
    EQEQ            reduce using rule 101 (valoresMat -> INT .)
    DISTINTO        reduce using rule 101 (valoresMat -> INT .)
    >               reduce using rule 101 (valoresMat -> INT .)
    <               reduce using rule 101 (valoresMat -> INT .)
    )               reduce using rule 101 (valoresMat -> INT .)
    ]               reduce using rule 101 (valoresMat -> INT .)
    ;               reduce using rule 101 (valoresMat -> INT .)
    AND             reduce using rule 101 (valoresMat -> INT .)
    OR              reduce using rule 101 (valoresMat -> INT .)
    ?               reduce using rule 101 (valoresMat -> INT .)
    :               reduce using rule 101 (valoresMat -> INT .)
    }               reduce using rule 101 (valoresMat -> INT .)


state 175

    (104) valoresMat -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS

    ^               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    ,               reduce using rule 104 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 104 (valoresMat -> varYVals .)
    DISTINTO        reduce using rule 104 (valoresMat -> varYVals .)
    >               reduce using rule 104 (valoresMat -> varYVals .)
    <               reduce using rule 104 (valoresMat -> varYVals .)
    )               reduce using rule 104 (valoresMat -> varYVals .)
    ]               reduce using rule 104 (valoresMat -> varYVals .)
    ;               reduce using rule 104 (valoresMat -> varYVals .)
    AND             reduce using rule 104 (valoresMat -> varYVals .)
    OR              reduce using rule 104 (valoresMat -> varYVals .)
    ?               reduce using rule 104 (valoresMat -> varYVals .)
    :               reduce using rule 104 (valoresMat -> varYVals .)
    }               reduce using rule 104 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60


state 176

    (143) iSing -> - valoresMat .

    ^               reduce using rule 143 (iSing -> - valoresMat .)
    *               reduce using rule 143 (iSing -> - valoresMat .)
    /               reduce using rule 143 (iSing -> - valoresMat .)
    %               reduce using rule 143 (iSing -> - valoresMat .)
    +               reduce using rule 143 (iSing -> - valoresMat .)
    -               reduce using rule 143 (iSing -> - valoresMat .)
    ,               reduce using rule 143 (iSing -> - valoresMat .)
    )               reduce using rule 143 (iSing -> - valoresMat .)
    ;               reduce using rule 143 (iSing -> - valoresMat .)
    ]               reduce using rule 143 (iSing -> - valoresMat .)
    :               reduce using rule 143 (iSing -> - valoresMat .)
    }               reduce using rule 143 (iSing -> - valoresMat .)
    EQEQ            reduce using rule 143 (iSing -> - valoresMat .)
    DISTINTO        reduce using rule 143 (iSing -> - valoresMat .)
    >               reduce using rule 143 (iSing -> - valoresMat .)
    <               reduce using rule 143 (iSing -> - valoresMat .)
    AND             reduce using rule 143 (iSing -> - valoresMat .)
    OR              reduce using rule 143 (iSing -> - valoresMat .)
    ?               reduce using rule 143 (iSing -> - valoresMat .)


state 177

    (141) iSing -> - paren .

    ^               reduce using rule 141 (iSing -> - paren .)
    *               reduce using rule 141 (iSing -> - paren .)
    /               reduce using rule 141 (iSing -> - paren .)
    %               reduce using rule 141 (iSing -> - paren .)
    +               reduce using rule 141 (iSing -> - paren .)
    -               reduce using rule 141 (iSing -> - paren .)
    ,               reduce using rule 141 (iSing -> - paren .)
    )               reduce using rule 141 (iSing -> - paren .)
    ;               reduce using rule 141 (iSing -> - paren .)
    ]               reduce using rule 141 (iSing -> - paren .)
    :               reduce using rule 141 (iSing -> - paren .)
    }               reduce using rule 141 (iSing -> - paren .)
    EQEQ            reduce using rule 141 (iSing -> - paren .)
    DISTINTO        reduce using rule 141 (iSing -> - paren .)
    >               reduce using rule 141 (iSing -> - paren .)
    <               reduce using rule 141 (iSing -> - paren .)
    AND             reduce using rule 141 (iSing -> - paren .)
    OR              reduce using rule 141 (iSing -> - paren .)
    ?               reduce using rule 141 (iSing -> - paren .)


state 178

    (61) atributos -> ID . . valoresCampos
    (62) valoresCampos -> . varYVals
    (63) valoresCampos -> . END
    (64) valoresCampos -> . BEGIN
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (80) vecVal -> . ID m

    END             shift and go to state 269
    BEGIN           shift and go to state 268
    ID              shift and go to state 46

    varYVals                       shift and go to state 271
    vecVal                         shift and go to state 8
    valoresCampos                  shift and go to state 270

state 179

    (160) expBool -> expBool OR . and
    (162) expBool -> expBool OR . valoresBool
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (80) vecVal -> . ID m
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 272
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    mayor                          shift and go to state 104
    valoresBool                    shift and go to state 273
    eMat                           shift and go to state 111
    vecVal                         shift and go to state 8
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 119
    parenBool                      shift and go to state 100

state 180

    (66) ternarioVars -> expBool ? . valoresTernarioVars : valoresTernarioVars
    (67) valoresTernarioVars -> . varsOps
    (68) valoresTernarioVars -> . varYVals
    (69) valoresTernarioVars -> . reg
    (70) valoresTernarioVars -> . vec
    (71) valoresTernarioVars -> . ternarioVars
    (72) valoresTernarioVars -> . ( ternarioVars )
    (73) valoresTernarioVars -> . valoresTernarioMat
    (74) valoresTernarioVars -> . valoresTernarioBool
    (75) valoresTernarioVars -> . atributos
    (76) valoresTernarioVars -> . RES
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (87) reg -> . { campos }
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) valoresTernarioMat -> . INT
    (110) valoresTernarioMat -> . FLOAT
    (111) valoresTernarioMat -> . funcInt
    (112) valoresTernarioMat -> . STRING
    (113) valoresTernarioMat -> . eMat
    (154) valoresTernarioBool -> . BOOL
    (155) valoresTernarioBool -> . funcBool
    (156) valoresTernarioBool -> . expBool
    (61) atributos -> . ID . valoresCampos
    (80) vecVal -> . ID m
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (38) funcBool -> . COLINEALES ( valores , valores )
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    (               shift and go to state 246
    RES             shift and go to state 241
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 84
    {               shift and go to state 92
    [               shift and go to state 91
    INT             shift and go to state 253
    FLOAT           shift and go to state 254
    STRING          shift and go to state 244
    BOOL            shift and go to state 248
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 240
    funcInt                        shift and go to state 242
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 163
    eMat                           shift and go to state 245
    valoresTernarioBool            shift and go to state 255
    vecVal                         shift and go to state 8
    vec                            shift and go to state 247
    paren                          shift and go to state 90
    varsOps                        shift and go to state 250
    reg                            shift and go to state 249
    valoresTernarioVars            shift and go to state 274
    exp                            shift and go to state 102
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    valoresTernarioMat             shift and go to state 252
    not                            shift and go to state 74
    p                              shift and go to state 97
    expBool                        shift and go to state 251
    ternarioVars                   shift and go to state 243
    varYVals                       shift and go to state 257
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 258

state 181

    (173) eq -> tCompare DISTINTO . mayor
    (177) eq -> tCompare DISTINTO . tCompare
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (80) vecVal -> . ID m
    (192) parenBool -> . ( expBool )
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    NOT             shift and go to state 101
    STRING          shift and go to state 109
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    paren                          shift and go to state 90
    eMat                           shift and go to state 111
    p                              shift and go to state 97
    funcInt                        shift and go to state 108
    vecVal                         shift and go to state 8
    tCompare                       shift and go to state 276
    menor                          shift and go to state 75
    varsOps                        shift and go to state 232
    valoresMat                     shift and go to state 76
    parenBool                      shift and go to state 100
    not                            shift and go to state 74
    exp                            shift and go to state 102
    varYVals                       shift and go to state 233
    mayor                          shift and go to state 275
    iSing                          shift and go to state 88

state 182

    (172) eq -> tCompare EQEQ . mayor
    (176) eq -> tCompare EQEQ . tCompare
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (80) vecVal -> . ID m
    (192) parenBool -> . ( expBool )
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    NOT             shift and go to state 101
    STRING          shift and go to state 109
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    paren                          shift and go to state 90
    eMat                           shift and go to state 111
    p                              shift and go to state 97
    funcInt                        shift and go to state 108
    vecVal                         shift and go to state 8
    tCompare                       shift and go to state 278
    menor                          shift and go to state 75
    varsOps                        shift and go to state 232
    valoresMat                     shift and go to state 76
    parenBool                      shift and go to state 100
    not                            shift and go to state 74
    exp                            shift and go to state 102
    varYVals                       shift and go to state 233
    mayor                          shift and go to state 277
    iSing                          shift and go to state 88

state 183

    (187) menor -> tCompare < . tCompare
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 131

    eMat                           shift and go to state 111
    p                              shift and go to state 97
    funcInt                        shift and go to state 108
    tCompare                       shift and go to state 279
    varsOps                        shift and go to state 232
    valoresMat                     shift and go to state 76
    paren                          shift and go to state 90
    exp                            shift and go to state 102
    varYVals                       shift and go to state 233
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 184

    (185) mayor -> tCompare > . tCompare
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 46
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 131

    eMat                           shift and go to state 111
    p                              shift and go to state 97
    funcInt                        shift and go to state 108
    tCompare                       shift and go to state 280
    varsOps                        shift and go to state 232
    valoresMat                     shift and go to state 76
    paren                          shift and go to state 90
    exp                            shift and go to state 102
    varYVals                       shift and go to state 233
    vecVal                         shift and go to state 8
    iSing                          shift and go to state 88

state 185

    (44) elem -> valores . , elem
    (45) elem -> valores .

    ,               shift and go to state 281
    ]               reduce using rule 45 (elem -> valores .)


state 186

    (43) vec -> [ elem . ]

    ]               shift and go to state 282


state 187

    (87) reg -> { campos . }

    }               shift and go to state 283


state 188

    (88) campos -> ID . : valores , campos
    (89) campos -> ID . : valores

    :               shift and go to state 284


state 189

    (38) funcBool -> COLINEALES ( valores , . valores )
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 285
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 190

    (125) p -> p % . exp
    (131) p -> p % . valoresMat
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (80) vecVal -> . ID m

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    (               shift and go to state 131

    exp                            shift and go to state 287
    funcInt                        shift and go to state 129
    iSing                          shift and go to state 88
    valoresMat                     shift and go to state 286
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 134

state 191

    (123) p -> p * . exp
    (129) p -> p * . valoresMat
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (80) vecVal -> . ID m

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    (               shift and go to state 131

    exp                            shift and go to state 289
    funcInt                        shift and go to state 129
    iSing                          shift and go to state 88
    valoresMat                     shift and go to state 288
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 134

state 192

    (124) p -> p / . exp
    (130) p -> p / . valoresMat
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (80) vecVal -> . ID m

    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    -               shift and go to state 83
    +               shift and go to state 82
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    (               shift and go to state 131

    exp                            shift and go to state 291
    funcInt                        shift and go to state 129
    iSing                          shift and go to state 88
    valoresMat                     shift and go to state 290
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 134

state 193

    (192) parenBool -> ( . expBool )
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (80) vecVal -> . ID m
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 199
    eMat                           shift and go to state 111
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 119
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 200

state 194

    (189) not -> NOT not .

    EQEQ            reduce using rule 189 (not -> NOT not .)
    DISTINTO        reduce using rule 189 (not -> NOT not .)
    AND             reduce using rule 189 (not -> NOT not .)
    OR              reduce using rule 189 (not -> NOT not .)
    )               reduce using rule 189 (not -> NOT not .)
    ?               reduce using rule 189 (not -> NOT not .)
    ;               reduce using rule 189 (not -> NOT not .)
    ,               reduce using rule 189 (not -> NOT not .)
    ]               reduce using rule 189 (not -> NOT not .)
    :               reduce using rule 189 (not -> NOT not .)
    }               reduce using rule 189 (not -> NOT not .)


state 195

    (151) valoresBool -> varsOps .

    EQEQ            reduce using rule 151 (valoresBool -> varsOps .)
    DISTINTO        reduce using rule 151 (valoresBool -> varsOps .)
    AND             reduce using rule 151 (valoresBool -> varsOps .)
    OR              reduce using rule 151 (valoresBool -> varsOps .)
    ?               reduce using rule 151 (valoresBool -> varsOps .)
    ,               reduce using rule 151 (valoresBool -> varsOps .)
    )               reduce using rule 151 (valoresBool -> varsOps .)
    ;               reduce using rule 151 (valoresBool -> varsOps .)
    ]               reduce using rule 151 (valoresBool -> varsOps .)
    :               reduce using rule 151 (valoresBool -> varsOps .)
    }               reduce using rule 151 (valoresBool -> varsOps .)


state 196

    (150) valoresBool -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS

    EQEQ            reduce using rule 150 (valoresBool -> varYVals .)
    DISTINTO        reduce using rule 150 (valoresBool -> varYVals .)
    AND             reduce using rule 150 (valoresBool -> varYVals .)
    OR              reduce using rule 150 (valoresBool -> varYVals .)
    ?               reduce using rule 150 (valoresBool -> varYVals .)
    ,               reduce using rule 150 (valoresBool -> varYVals .)
    )               reduce using rule 150 (valoresBool -> varYVals .)
    ;               reduce using rule 150 (valoresBool -> varYVals .)
    ]               reduce using rule 150 (valoresBool -> varYVals .)
    :               reduce using rule 150 (valoresBool -> varYVals .)
    }               reduce using rule 150 (valoresBool -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60


state 197

    (190) not -> NOT valoresBool .

    EQEQ            reduce using rule 190 (not -> NOT valoresBool .)
    DISTINTO        reduce using rule 190 (not -> NOT valoresBool .)
    AND             reduce using rule 190 (not -> NOT valoresBool .)
    OR              reduce using rule 190 (not -> NOT valoresBool .)
    )               reduce using rule 190 (not -> NOT valoresBool .)
    ?               reduce using rule 190 (not -> NOT valoresBool .)
    ;               reduce using rule 190 (not -> NOT valoresBool .)
    ,               reduce using rule 190 (not -> NOT valoresBool .)
    ]               reduce using rule 190 (not -> NOT valoresBool .)
    :               reduce using rule 190 (not -> NOT valoresBool .)
    }               reduce using rule 190 (not -> NOT valoresBool .)


state 198

    (136) exp -> exp ^ . iSing
    (138) exp -> exp ^ . valoresMat
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (80) vecVal -> . ID m

    -               shift and go to state 83
    +               shift and go to state 82
    INT             shift and go to state 174
    FLOAT           shift and go to state 133
    STRING          shift and go to state 109
    (               shift and go to state 131
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29

    funcInt                        shift and go to state 129
    iSing                          shift and go to state 293
    valoresMat                     shift and go to state 292
    paren                          shift and go to state 90
    varYVals                       shift and go to state 175
    vecVal                         shift and go to state 8
    varsOps                        shift and go to state 134

state 199

    (161) expBool -> valoresBool . OR and
    (163) expBool -> valoresBool . OR valoresBool
    (166) and -> valoresBool . AND eq
    (168) and -> valoresBool . AND valoresBool

    OR              shift and go to state 157
    AND             shift and go to state 156


state 200

    (192) parenBool -> ( expBool . )
    (160) expBool -> expBool . OR and
    (162) expBool -> expBool . OR valoresBool

    )               shift and go to state 267
    OR              shift and go to state 179


state 201

    (20) loop -> WHILE ( cosaBooleana ) .

    IF              reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    {               reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    WHILE           reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    FOR             reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    COMMENT         reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    DO              reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    RETURN          reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    ;               reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    MENOSMENOS      reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    MASMAS          reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    ID              reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    PRINT           reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    MULTIESCALAR    reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    LENGTH          reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    CAPITALIZAR     reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)
    COLINEALES      reduce using rule 20 (loop -> WHILE ( cosaBooleana ) .)


state 202

    (39) funcVoid -> PRINT ( valores ) .

    ;               reduce using rule 39 (funcVoid -> PRINT ( valores ) .)
    )               reduce using rule 39 (funcVoid -> PRINT ( valores ) .)


state 203

    (5) lAbierta -> IF ( cosaBooleana ) . linea
    (6) lAbierta -> IF ( cosaBooleana ) . bloqueCerrado ELSE lAbierta
    (12) lCerrada -> IF ( cosaBooleana ) . bloqueCerrado ELSE bloqueCerrado
    (3) linea -> . lAbierta
    (4) linea -> . lCerrada
    (8) bloqueCerrado -> . lCerrada
    (9) bloqueCerrado -> . { g }
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta
    (7) lAbierta -> . loop lAbierta
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 36
    IF              shift and go to state 12
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    bloqueCerrado                  shift and go to state 294
    linea                          shift and go to state 295
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 296
    lAbierta                       shift and go to state 28
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 31
    loop                           shift and go to state 30

state 204

    (21) loop -> FOR ( primParam ; . cosaBooleana ; tercerParam )
    (22) cosaBooleana -> . expBool
    (23) cosaBooleana -> . valoresBool
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (38) funcBool -> . COLINEALES ( valores , valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (80) vecVal -> . ID m
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (192) parenBool -> . ( expBool )
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )

    BOOL            shift and go to state 117
    COLINEALES      shift and go to state 4
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    STRING          shift and go to state 109
    NOT             shift and go to state 101
    (               shift and go to state 112
    -               shift and go to state 83
    +               shift and go to state 82

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 108
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 110
    eMat                           shift and go to state 111
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    cosaBooleana                   shift and go to state 297
    p                              shift and go to state 97
    varsOps                        shift and go to state 118
    exp                            shift and go to state 102
    varYVals                       shift and go to state 119
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 113

state 205

    (36) funcInt -> LENGTH ( valores ) .

    )               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    +               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    -               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    *               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    /               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    %               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    ^               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    EQEQ            reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    DISTINTO        reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    >               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    <               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    ,               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    ]               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    ;               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    AND             reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    OR              reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    ?               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    :               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)
    }               reduce using rule 36 (funcInt -> LENGTH ( valores ) .)


state 206

    (100) varAsig -> ID . ID = . valoresAsig
    (94) valoresAsig -> . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    valoresAsig                    shift and go to state 298
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 139
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 207

    (85) m -> [ eMat ] . m
    (86) m -> [ eMat ] .
    (81) m -> . [ INT ]
    (82) m -> . [ INT ] m
    (83) m -> . [ varYVals ] m
    (84) m -> . [ varYVals ]
    (85) m -> . [ eMat ] m
    (86) m -> . [ eMat ]

    .               reduce using rule 86 (m -> [ eMat ] .)
    MASMAS          reduce using rule 86 (m -> [ eMat ] .)
    MENOSMENOS      reduce using rule 86 (m -> [ eMat ] .)
    MULEQ           reduce using rule 86 (m -> [ eMat ] .)
    DIVEQ           reduce using rule 86 (m -> [ eMat ] .)
    MASEQ           reduce using rule 86 (m -> [ eMat ] .)
    MENOSEQ         reduce using rule 86 (m -> [ eMat ] .)
    =               reduce using rule 86 (m -> [ eMat ] .)
    ;               reduce using rule 86 (m -> [ eMat ] .)
    ,               reduce using rule 86 (m -> [ eMat ] .)
    +               reduce using rule 86 (m -> [ eMat ] .)
    -               reduce using rule 86 (m -> [ eMat ] .)
    *               reduce using rule 86 (m -> [ eMat ] .)
    /               reduce using rule 86 (m -> [ eMat ] .)
    %               reduce using rule 86 (m -> [ eMat ] .)
    ^               reduce using rule 86 (m -> [ eMat ] .)
    OR              reduce using rule 86 (m -> [ eMat ] .)
    ?               reduce using rule 86 (m -> [ eMat ] .)
    AND             reduce using rule 86 (m -> [ eMat ] .)
    EQEQ            reduce using rule 86 (m -> [ eMat ] .)
    DISTINTO        reduce using rule 86 (m -> [ eMat ] .)
    >               reduce using rule 86 (m -> [ eMat ] .)
    <               reduce using rule 86 (m -> [ eMat ] .)
    )               reduce using rule 86 (m -> [ eMat ] .)
    ]               reduce using rule 86 (m -> [ eMat ] .)
    :               reduce using rule 86 (m -> [ eMat ] .)
    }               reduce using rule 86 (m -> [ eMat ] .)
    [               shift and go to state 52

    m                              shift and go to state 299

state 208

    (146) paren -> ( eMat . )
    (114) eMat -> eMat . + p
    (115) eMat -> eMat . - p
    (118) eMat -> eMat . + valoresMat
    (119) eMat -> eMat . - valoresMat

    )               shift and go to state 264
    +               shift and go to state 159
    -               shift and go to state 160


state 209

    (81) m -> [ INT ] .
    (82) m -> [ INT ] . m
    (81) m -> . [ INT ]
    (82) m -> . [ INT ] m
    (83) m -> . [ varYVals ] m
    (84) m -> . [ varYVals ]
    (85) m -> . [ eMat ] m
    (86) m -> . [ eMat ]

    .               reduce using rule 81 (m -> [ INT ] .)
    MASMAS          reduce using rule 81 (m -> [ INT ] .)
    MENOSMENOS      reduce using rule 81 (m -> [ INT ] .)
    MULEQ           reduce using rule 81 (m -> [ INT ] .)
    DIVEQ           reduce using rule 81 (m -> [ INT ] .)
    MASEQ           reduce using rule 81 (m -> [ INT ] .)
    MENOSEQ         reduce using rule 81 (m -> [ INT ] .)
    =               reduce using rule 81 (m -> [ INT ] .)
    ;               reduce using rule 81 (m -> [ INT ] .)
    ,               reduce using rule 81 (m -> [ INT ] .)
    +               reduce using rule 81 (m -> [ INT ] .)
    -               reduce using rule 81 (m -> [ INT ] .)
    *               reduce using rule 81 (m -> [ INT ] .)
    /               reduce using rule 81 (m -> [ INT ] .)
    %               reduce using rule 81 (m -> [ INT ] .)
    ^               reduce using rule 81 (m -> [ INT ] .)
    OR              reduce using rule 81 (m -> [ INT ] .)
    ?               reduce using rule 81 (m -> [ INT ] .)
    AND             reduce using rule 81 (m -> [ INT ] .)
    EQEQ            reduce using rule 81 (m -> [ INT ] .)
    DISTINTO        reduce using rule 81 (m -> [ INT ] .)
    >               reduce using rule 81 (m -> [ INT ] .)
    <               reduce using rule 81 (m -> [ INT ] .)
    )               reduce using rule 81 (m -> [ INT ] .)
    ]               reduce using rule 81 (m -> [ INT ] .)
    :               reduce using rule 81 (m -> [ INT ] .)
    }               reduce using rule 81 (m -> [ INT ] .)
    [               shift and go to state 52

    m                              shift and go to state 300

state 210

    (83) m -> [ varYVals ] . m
    (84) m -> [ varYVals ] .
    (81) m -> . [ INT ]
    (82) m -> . [ INT ] m
    (83) m -> . [ varYVals ] m
    (84) m -> . [ varYVals ]
    (85) m -> . [ eMat ] m
    (86) m -> . [ eMat ]

    .               reduce using rule 84 (m -> [ varYVals ] .)
    MASMAS          reduce using rule 84 (m -> [ varYVals ] .)
    MENOSMENOS      reduce using rule 84 (m -> [ varYVals ] .)
    MULEQ           reduce using rule 84 (m -> [ varYVals ] .)
    DIVEQ           reduce using rule 84 (m -> [ varYVals ] .)
    MASEQ           reduce using rule 84 (m -> [ varYVals ] .)
    MENOSEQ         reduce using rule 84 (m -> [ varYVals ] .)
    =               reduce using rule 84 (m -> [ varYVals ] .)
    ;               reduce using rule 84 (m -> [ varYVals ] .)
    ,               reduce using rule 84 (m -> [ varYVals ] .)
    +               reduce using rule 84 (m -> [ varYVals ] .)
    -               reduce using rule 84 (m -> [ varYVals ] .)
    *               reduce using rule 84 (m -> [ varYVals ] .)
    /               reduce using rule 84 (m -> [ varYVals ] .)
    %               reduce using rule 84 (m -> [ varYVals ] .)
    ^               reduce using rule 84 (m -> [ varYVals ] .)
    OR              reduce using rule 84 (m -> [ varYVals ] .)
    ?               reduce using rule 84 (m -> [ varYVals ] .)
    AND             reduce using rule 84 (m -> [ varYVals ] .)
    EQEQ            reduce using rule 84 (m -> [ varYVals ] .)
    DISTINTO        reduce using rule 84 (m -> [ varYVals ] .)
    >               reduce using rule 84 (m -> [ varYVals ] .)
    <               reduce using rule 84 (m -> [ varYVals ] .)
    )               reduce using rule 84 (m -> [ varYVals ] .)
    ]               reduce using rule 84 (m -> [ varYVals ] .)
    :               reduce using rule 84 (m -> [ varYVals ] .)
    }               reduce using rule 84 (m -> [ varYVals ] .)
    [               shift and go to state 52

    m                              shift and go to state 301

state 211

    (35) funcInt -> MULTIESCALAR ( valores , . valores param )
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 302
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 212

    (37) funcString -> CAPITALIZAR ( valores ) .

    ;               reduce using rule 37 (funcString -> CAPITALIZAR ( valores ) .)
    ,               reduce using rule 37 (funcString -> CAPITALIZAR ( valores ) .)
    )               reduce using rule 37 (funcString -> CAPITALIZAR ( valores ) .)
    ]               reduce using rule 37 (funcString -> CAPITALIZAR ( valores ) .)
    }               reduce using rule 37 (funcString -> CAPITALIZAR ( valores ) .)


state 213

    (14) lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana . ) ;

    )               shift and go to state 303


state 214

    (12) lCerrada -> IF ( cosaBooleana ) . bloqueCerrado ELSE bloqueCerrado
    (8) bloqueCerrado -> . lCerrada
    (9) bloqueCerrado -> . { g }
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 36
    COMMENT         shift and go to state 9
    IF              shift and go to state 34
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    bloqueCerrado                  shift and go to state 304
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 35
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 31
    loop                           shift and go to state 37

state 215

    (165) and -> and AND eq .
    (170) eq -> eq . EQEQ mayor
    (171) eq -> eq . DISTINTO mayor
    (174) eq -> eq . EQEQ tCompare
    (175) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 165 (and -> and AND eq .)
    ?               reduce using rule 165 (and -> and AND eq .)
    OR              reduce using rule 165 (and -> and AND eq .)
    ,               reduce using rule 165 (and -> and AND eq .)
    )               reduce using rule 165 (and -> and AND eq .)
    ;               reduce using rule 165 (and -> and AND eq .)
    ]               reduce using rule 165 (and -> and AND eq .)
    :               reduce using rule 165 (and -> and AND eq .)
    }               reduce using rule 165 (and -> and AND eq .)
    EQEQ            shift and go to state 154
    DISTINTO        shift and go to state 155


state 216

    (167) and -> and AND valoresBool .

    AND             reduce using rule 167 (and -> and AND valoresBool .)
    ?               reduce using rule 167 (and -> and AND valoresBool .)
    OR              reduce using rule 167 (and -> and AND valoresBool .)
    ,               reduce using rule 167 (and -> and AND valoresBool .)
    )               reduce using rule 167 (and -> and AND valoresBool .)
    ;               reduce using rule 167 (and -> and AND valoresBool .)
    ]               reduce using rule 167 (and -> and AND valoresBool .)
    :               reduce using rule 167 (and -> and AND valoresBool .)
    }               reduce using rule 167 (and -> and AND valoresBool .)


state 217

    (150) valoresBool -> varYVals .
    (181) tCompare -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS
    (104) valoresMat -> varYVals .

    AND             reduce using rule 150 (valoresBool -> varYVals .)
    OR              reduce using rule 150 (valoresBool -> varYVals .)
    ?               reduce using rule 150 (valoresBool -> varYVals .)
    ,               reduce using rule 150 (valoresBool -> varYVals .)
    )               reduce using rule 150 (valoresBool -> varYVals .)
    ;               reduce using rule 150 (valoresBool -> varYVals .)
    ]               reduce using rule 150 (valoresBool -> varYVals .)
    :               reduce using rule 150 (valoresBool -> varYVals .)
    }               reduce using rule 150 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 181 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 181 (tCompare -> varYVals .)
    >               reduce using rule 181 (tCompare -> varYVals .)
    <               reduce using rule 181 (tCompare -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    ^               reduce using rule 104 (valoresMat -> varYVals .)


state 218

    (134) p -> valoresMat % valoresMat .
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 134 (p -> valoresMat % valoresMat .)
    /               reduce using rule 134 (p -> valoresMat % valoresMat .)
    %               reduce using rule 134 (p -> valoresMat % valoresMat .)
    +               reduce using rule 134 (p -> valoresMat % valoresMat .)
    -               reduce using rule 134 (p -> valoresMat % valoresMat .)
    ,               reduce using rule 134 (p -> valoresMat % valoresMat .)
    ]               reduce using rule 134 (p -> valoresMat % valoresMat .)
    EQEQ            reduce using rule 134 (p -> valoresMat % valoresMat .)
    DISTINTO        reduce using rule 134 (p -> valoresMat % valoresMat .)
    >               reduce using rule 134 (p -> valoresMat % valoresMat .)
    <               reduce using rule 134 (p -> valoresMat % valoresMat .)
    ;               reduce using rule 134 (p -> valoresMat % valoresMat .)
    )               reduce using rule 134 (p -> valoresMat % valoresMat .)
    AND             reduce using rule 134 (p -> valoresMat % valoresMat .)
    OR              reduce using rule 134 (p -> valoresMat % valoresMat .)
    ?               reduce using rule 134 (p -> valoresMat % valoresMat .)
    :               reduce using rule 134 (p -> valoresMat % valoresMat .)
    }               reduce using rule 134 (p -> valoresMat % valoresMat .)
    ^               shift and go to state 153


state 219

    (128) p -> valoresMat % exp .
    (136) exp -> exp . ^ iSing
    (138) exp -> exp . ^ valoresMat

    *               reduce using rule 128 (p -> valoresMat % exp .)
    /               reduce using rule 128 (p -> valoresMat % exp .)
    %               reduce using rule 128 (p -> valoresMat % exp .)
    +               reduce using rule 128 (p -> valoresMat % exp .)
    -               reduce using rule 128 (p -> valoresMat % exp .)
    ,               reduce using rule 128 (p -> valoresMat % exp .)
    ]               reduce using rule 128 (p -> valoresMat % exp .)
    EQEQ            reduce using rule 128 (p -> valoresMat % exp .)
    DISTINTO        reduce using rule 128 (p -> valoresMat % exp .)
    >               reduce using rule 128 (p -> valoresMat % exp .)
    <               reduce using rule 128 (p -> valoresMat % exp .)
    ;               reduce using rule 128 (p -> valoresMat % exp .)
    )               reduce using rule 128 (p -> valoresMat % exp .)
    AND             reduce using rule 128 (p -> valoresMat % exp .)
    OR              reduce using rule 128 (p -> valoresMat % exp .)
    ?               reduce using rule 128 (p -> valoresMat % exp .)
    :               reduce using rule 128 (p -> valoresMat % exp .)
    }               reduce using rule 128 (p -> valoresMat % exp .)
    ^               shift and go to state 198


state 220

    (120) eMat -> valoresMat + valoresMat .
    (126) p -> valoresMat . * exp
    (127) p -> valoresMat . / exp
    (128) p -> valoresMat . % exp
    (132) p -> valoresMat . * valoresMat
    (133) p -> valoresMat . / valoresMat
    (134) p -> valoresMat . % valoresMat
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    -               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    >               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    <               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    EQEQ            reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    DISTINTO        reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    AND             reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    OR              reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    ?               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    ,               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    )               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    ;               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    ]               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    :               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    }               reduce using rule 120 (eMat -> valoresMat + valoresMat .)
    *               shift and go to state 150
    /               shift and go to state 152
    %               shift and go to state 148
    ^               shift and go to state 153


state 221

    (116) eMat -> valoresMat + p .
    (123) p -> p . * exp
    (124) p -> p . / exp
    (125) p -> p . % exp
    (129) p -> p . * valoresMat
    (130) p -> p . / valoresMat
    (131) p -> p . % valoresMat

    +               reduce using rule 116 (eMat -> valoresMat + p .)
    -               reduce using rule 116 (eMat -> valoresMat + p .)
    >               reduce using rule 116 (eMat -> valoresMat + p .)
    <               reduce using rule 116 (eMat -> valoresMat + p .)
    EQEQ            reduce using rule 116 (eMat -> valoresMat + p .)
    DISTINTO        reduce using rule 116 (eMat -> valoresMat + p .)
    AND             reduce using rule 116 (eMat -> valoresMat + p .)
    OR              reduce using rule 116 (eMat -> valoresMat + p .)
    ?               reduce using rule 116 (eMat -> valoresMat + p .)
    ,               reduce using rule 116 (eMat -> valoresMat + p .)
    )               reduce using rule 116 (eMat -> valoresMat + p .)
    ;               reduce using rule 116 (eMat -> valoresMat + p .)
    ]               reduce using rule 116 (eMat -> valoresMat + p .)
    :               reduce using rule 116 (eMat -> valoresMat + p .)
    }               reduce using rule 116 (eMat -> valoresMat + p .)
    *               shift and go to state 191
    /               shift and go to state 192
    %               shift and go to state 190


state 222

    (132) p -> valoresMat * valoresMat .
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 132 (p -> valoresMat * valoresMat .)
    /               reduce using rule 132 (p -> valoresMat * valoresMat .)
    %               reduce using rule 132 (p -> valoresMat * valoresMat .)
    +               reduce using rule 132 (p -> valoresMat * valoresMat .)
    -               reduce using rule 132 (p -> valoresMat * valoresMat .)
    ,               reduce using rule 132 (p -> valoresMat * valoresMat .)
    ]               reduce using rule 132 (p -> valoresMat * valoresMat .)
    EQEQ            reduce using rule 132 (p -> valoresMat * valoresMat .)
    DISTINTO        reduce using rule 132 (p -> valoresMat * valoresMat .)
    >               reduce using rule 132 (p -> valoresMat * valoresMat .)
    <               reduce using rule 132 (p -> valoresMat * valoresMat .)
    ;               reduce using rule 132 (p -> valoresMat * valoresMat .)
    )               reduce using rule 132 (p -> valoresMat * valoresMat .)
    AND             reduce using rule 132 (p -> valoresMat * valoresMat .)
    OR              reduce using rule 132 (p -> valoresMat * valoresMat .)
    ?               reduce using rule 132 (p -> valoresMat * valoresMat .)
    :               reduce using rule 132 (p -> valoresMat * valoresMat .)
    }               reduce using rule 132 (p -> valoresMat * valoresMat .)
    ^               shift and go to state 153


state 223

    (126) p -> valoresMat * exp .
    (136) exp -> exp . ^ iSing
    (138) exp -> exp . ^ valoresMat

    *               reduce using rule 126 (p -> valoresMat * exp .)
    /               reduce using rule 126 (p -> valoresMat * exp .)
    %               reduce using rule 126 (p -> valoresMat * exp .)
    +               reduce using rule 126 (p -> valoresMat * exp .)
    -               reduce using rule 126 (p -> valoresMat * exp .)
    ,               reduce using rule 126 (p -> valoresMat * exp .)
    ]               reduce using rule 126 (p -> valoresMat * exp .)
    EQEQ            reduce using rule 126 (p -> valoresMat * exp .)
    DISTINTO        reduce using rule 126 (p -> valoresMat * exp .)
    >               reduce using rule 126 (p -> valoresMat * exp .)
    <               reduce using rule 126 (p -> valoresMat * exp .)
    ;               reduce using rule 126 (p -> valoresMat * exp .)
    )               reduce using rule 126 (p -> valoresMat * exp .)
    AND             reduce using rule 126 (p -> valoresMat * exp .)
    OR              reduce using rule 126 (p -> valoresMat * exp .)
    ?               reduce using rule 126 (p -> valoresMat * exp .)
    :               reduce using rule 126 (p -> valoresMat * exp .)
    }               reduce using rule 126 (p -> valoresMat * exp .)
    ^               shift and go to state 198


state 224

    (121) eMat -> valoresMat - valoresMat .
    (126) p -> valoresMat . * exp
    (127) p -> valoresMat . / exp
    (128) p -> valoresMat . % exp
    (132) p -> valoresMat . * valoresMat
    (133) p -> valoresMat . / valoresMat
    (134) p -> valoresMat . % valoresMat
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    -               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    >               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    <               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    EQEQ            reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    DISTINTO        reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    AND             reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    OR              reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    ?               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    ,               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    )               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    ;               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    ]               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    :               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    }               reduce using rule 121 (eMat -> valoresMat - valoresMat .)
    *               shift and go to state 150
    /               shift and go to state 152
    %               shift and go to state 148
    ^               shift and go to state 153


state 225

    (117) eMat -> valoresMat - p .
    (123) p -> p . * exp
    (124) p -> p . / exp
    (125) p -> p . % exp
    (129) p -> p . * valoresMat
    (130) p -> p . / valoresMat
    (131) p -> p . % valoresMat

    +               reduce using rule 117 (eMat -> valoresMat - p .)
    -               reduce using rule 117 (eMat -> valoresMat - p .)
    >               reduce using rule 117 (eMat -> valoresMat - p .)
    <               reduce using rule 117 (eMat -> valoresMat - p .)
    EQEQ            reduce using rule 117 (eMat -> valoresMat - p .)
    DISTINTO        reduce using rule 117 (eMat -> valoresMat - p .)
    AND             reduce using rule 117 (eMat -> valoresMat - p .)
    OR              reduce using rule 117 (eMat -> valoresMat - p .)
    ?               reduce using rule 117 (eMat -> valoresMat - p .)
    ,               reduce using rule 117 (eMat -> valoresMat - p .)
    )               reduce using rule 117 (eMat -> valoresMat - p .)
    ;               reduce using rule 117 (eMat -> valoresMat - p .)
    ]               reduce using rule 117 (eMat -> valoresMat - p .)
    :               reduce using rule 117 (eMat -> valoresMat - p .)
    }               reduce using rule 117 (eMat -> valoresMat - p .)
    *               shift and go to state 191
    /               shift and go to state 192
    %               shift and go to state 190


state 226

    (133) p -> valoresMat / valoresMat .
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 133 (p -> valoresMat / valoresMat .)
    /               reduce using rule 133 (p -> valoresMat / valoresMat .)
    %               reduce using rule 133 (p -> valoresMat / valoresMat .)
    +               reduce using rule 133 (p -> valoresMat / valoresMat .)
    -               reduce using rule 133 (p -> valoresMat / valoresMat .)
    ,               reduce using rule 133 (p -> valoresMat / valoresMat .)
    ]               reduce using rule 133 (p -> valoresMat / valoresMat .)
    EQEQ            reduce using rule 133 (p -> valoresMat / valoresMat .)
    DISTINTO        reduce using rule 133 (p -> valoresMat / valoresMat .)
    >               reduce using rule 133 (p -> valoresMat / valoresMat .)
    <               reduce using rule 133 (p -> valoresMat / valoresMat .)
    ;               reduce using rule 133 (p -> valoresMat / valoresMat .)
    )               reduce using rule 133 (p -> valoresMat / valoresMat .)
    AND             reduce using rule 133 (p -> valoresMat / valoresMat .)
    OR              reduce using rule 133 (p -> valoresMat / valoresMat .)
    ?               reduce using rule 133 (p -> valoresMat / valoresMat .)
    :               reduce using rule 133 (p -> valoresMat / valoresMat .)
    }               reduce using rule 133 (p -> valoresMat / valoresMat .)
    ^               shift and go to state 153


state 227

    (127) p -> valoresMat / exp .
    (136) exp -> exp . ^ iSing
    (138) exp -> exp . ^ valoresMat

    *               reduce using rule 127 (p -> valoresMat / exp .)
    /               reduce using rule 127 (p -> valoresMat / exp .)
    %               reduce using rule 127 (p -> valoresMat / exp .)
    +               reduce using rule 127 (p -> valoresMat / exp .)
    -               reduce using rule 127 (p -> valoresMat / exp .)
    ,               reduce using rule 127 (p -> valoresMat / exp .)
    ]               reduce using rule 127 (p -> valoresMat / exp .)
    EQEQ            reduce using rule 127 (p -> valoresMat / exp .)
    DISTINTO        reduce using rule 127 (p -> valoresMat / exp .)
    >               reduce using rule 127 (p -> valoresMat / exp .)
    <               reduce using rule 127 (p -> valoresMat / exp .)
    ;               reduce using rule 127 (p -> valoresMat / exp .)
    )               reduce using rule 127 (p -> valoresMat / exp .)
    AND             reduce using rule 127 (p -> valoresMat / exp .)
    OR              reduce using rule 127 (p -> valoresMat / exp .)
    ?               reduce using rule 127 (p -> valoresMat / exp .)
    :               reduce using rule 127 (p -> valoresMat / exp .)
    }               reduce using rule 127 (p -> valoresMat / exp .)
    ^               shift and go to state 198


state 228

    (139) exp -> valoresMat ^ valoresMat .

    ^               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    *               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    /               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    %               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    +               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    -               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    ,               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    }               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    EQEQ            reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    DISTINTO        reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    >               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    <               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    ;               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    )               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    AND             reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    OR              reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    ?               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    ]               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)
    :               reduce using rule 139 (exp -> valoresMat ^ valoresMat .)


state 229

    (137) exp -> valoresMat ^ iSing .

    ^               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    *               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    /               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    %               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    +               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    -               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    ,               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    }               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    EQEQ            reduce using rule 137 (exp -> valoresMat ^ iSing .)
    DISTINTO        reduce using rule 137 (exp -> valoresMat ^ iSing .)
    >               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    <               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    ;               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    )               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    AND             reduce using rule 137 (exp -> valoresMat ^ iSing .)
    OR              reduce using rule 137 (exp -> valoresMat ^ iSing .)
    ?               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    ]               reduce using rule 137 (exp -> valoresMat ^ iSing .)
    :               reduce using rule 137 (exp -> valoresMat ^ iSing .)


state 230

    (170) eq -> eq EQEQ mayor .

    EQEQ            reduce using rule 170 (eq -> eq EQEQ mayor .)
    DISTINTO        reduce using rule 170 (eq -> eq EQEQ mayor .)
    AND             reduce using rule 170 (eq -> eq EQEQ mayor .)
    OR              reduce using rule 170 (eq -> eq EQEQ mayor .)
    ?               reduce using rule 170 (eq -> eq EQEQ mayor .)
    ,               reduce using rule 170 (eq -> eq EQEQ mayor .)
    )               reduce using rule 170 (eq -> eq EQEQ mayor .)
    ;               reduce using rule 170 (eq -> eq EQEQ mayor .)
    ]               reduce using rule 170 (eq -> eq EQEQ mayor .)
    :               reduce using rule 170 (eq -> eq EQEQ mayor .)
    }               reduce using rule 170 (eq -> eq EQEQ mayor .)


state 231

    (174) eq -> eq EQEQ tCompare .
    (185) mayor -> tCompare . > tCompare
    (187) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 174 (eq -> eq EQEQ tCompare .)
    DISTINTO        reduce using rule 174 (eq -> eq EQEQ tCompare .)
    AND             reduce using rule 174 (eq -> eq EQEQ tCompare .)
    OR              reduce using rule 174 (eq -> eq EQEQ tCompare .)
    ?               reduce using rule 174 (eq -> eq EQEQ tCompare .)
    ,               reduce using rule 174 (eq -> eq EQEQ tCompare .)
    )               reduce using rule 174 (eq -> eq EQEQ tCompare .)
    ;               reduce using rule 174 (eq -> eq EQEQ tCompare .)
    ]               reduce using rule 174 (eq -> eq EQEQ tCompare .)
    :               reduce using rule 174 (eq -> eq EQEQ tCompare .)
    }               reduce using rule 174 (eq -> eq EQEQ tCompare .)
    >               shift and go to state 184
    <               shift and go to state 183


state 232

    (180) tCompare -> varsOps .
    (105) valoresMat -> varsOps .

    EQEQ            reduce using rule 180 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 180 (tCompare -> varsOps .)
    AND             reduce using rule 180 (tCompare -> varsOps .)
    OR              reduce using rule 180 (tCompare -> varsOps .)
    ?               reduce using rule 180 (tCompare -> varsOps .)
    ,               reduce using rule 180 (tCompare -> varsOps .)
    )               reduce using rule 180 (tCompare -> varsOps .)
    ;               reduce using rule 180 (tCompare -> varsOps .)
    ]               reduce using rule 180 (tCompare -> varsOps .)
    :               reduce using rule 180 (tCompare -> varsOps .)
    }               reduce using rule 180 (tCompare -> varsOps .)
    >               reduce using rule 180 (tCompare -> varsOps .)
    <               reduce using rule 180 (tCompare -> varsOps .)
    +               reduce using rule 105 (valoresMat -> varsOps .)
    -               reduce using rule 105 (valoresMat -> varsOps .)
    *               reduce using rule 105 (valoresMat -> varsOps .)
    /               reduce using rule 105 (valoresMat -> varsOps .)
    %               reduce using rule 105 (valoresMat -> varsOps .)
    ^               reduce using rule 105 (valoresMat -> varsOps .)


state 233

    (181) tCompare -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS
    (104) valoresMat -> varYVals .

    EQEQ            reduce using rule 181 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 181 (tCompare -> varYVals .)
    AND             reduce using rule 181 (tCompare -> varYVals .)
    OR              reduce using rule 181 (tCompare -> varYVals .)
    ?               reduce using rule 181 (tCompare -> varYVals .)
    ,               reduce using rule 181 (tCompare -> varYVals .)
    )               reduce using rule 181 (tCompare -> varYVals .)
    ;               reduce using rule 181 (tCompare -> varYVals .)
    ]               reduce using rule 181 (tCompare -> varYVals .)
    :               reduce using rule 181 (tCompare -> varYVals .)
    }               reduce using rule 181 (tCompare -> varYVals .)
    >               reduce using rule 181 (tCompare -> varYVals .)
    <               reduce using rule 181 (tCompare -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    ^               reduce using rule 104 (valoresMat -> varYVals .)


state 234

    (171) eq -> eq DISTINTO mayor .

    EQEQ            reduce using rule 171 (eq -> eq DISTINTO mayor .)
    DISTINTO        reduce using rule 171 (eq -> eq DISTINTO mayor .)
    AND             reduce using rule 171 (eq -> eq DISTINTO mayor .)
    OR              reduce using rule 171 (eq -> eq DISTINTO mayor .)
    ?               reduce using rule 171 (eq -> eq DISTINTO mayor .)
    ,               reduce using rule 171 (eq -> eq DISTINTO mayor .)
    )               reduce using rule 171 (eq -> eq DISTINTO mayor .)
    ;               reduce using rule 171 (eq -> eq DISTINTO mayor .)
    ]               reduce using rule 171 (eq -> eq DISTINTO mayor .)
    :               reduce using rule 171 (eq -> eq DISTINTO mayor .)
    }               reduce using rule 171 (eq -> eq DISTINTO mayor .)


state 235

    (175) eq -> eq DISTINTO tCompare .
    (185) mayor -> tCompare . > tCompare
    (187) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    DISTINTO        reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    AND             reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    OR              reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    ?               reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    ,               reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    )               reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    ;               reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    ]               reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    :               reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    }               reduce using rule 175 (eq -> eq DISTINTO tCompare .)
    >               shift and go to state 184
    <               shift and go to state 183


state 236

    (166) and -> valoresBool AND eq .
    (170) eq -> eq . EQEQ mayor
    (171) eq -> eq . DISTINTO mayor
    (174) eq -> eq . EQEQ tCompare
    (175) eq -> eq . DISTINTO tCompare

    AND             reduce using rule 166 (and -> valoresBool AND eq .)
    ?               reduce using rule 166 (and -> valoresBool AND eq .)
    OR              reduce using rule 166 (and -> valoresBool AND eq .)
    ,               reduce using rule 166 (and -> valoresBool AND eq .)
    )               reduce using rule 166 (and -> valoresBool AND eq .)
    ;               reduce using rule 166 (and -> valoresBool AND eq .)
    ]               reduce using rule 166 (and -> valoresBool AND eq .)
    :               reduce using rule 166 (and -> valoresBool AND eq .)
    }               reduce using rule 166 (and -> valoresBool AND eq .)
    EQEQ            shift and go to state 154
    DISTINTO        shift and go to state 155


state 237

    (168) and -> valoresBool AND valoresBool .

    AND             reduce using rule 168 (and -> valoresBool AND valoresBool .)
    ?               reduce using rule 168 (and -> valoresBool AND valoresBool .)
    OR              reduce using rule 168 (and -> valoresBool AND valoresBool .)
    ,               reduce using rule 168 (and -> valoresBool AND valoresBool .)
    )               reduce using rule 168 (and -> valoresBool AND valoresBool .)
    ;               reduce using rule 168 (and -> valoresBool AND valoresBool .)
    ]               reduce using rule 168 (and -> valoresBool AND valoresBool .)
    :               reduce using rule 168 (and -> valoresBool AND valoresBool .)
    }               reduce using rule 168 (and -> valoresBool AND valoresBool .)


state 238

    (161) expBool -> valoresBool OR and .
    (165) and -> and . AND eq
    (167) and -> and . AND valoresBool

    OR              reduce using rule 161 (expBool -> valoresBool OR and .)
    )               reduce using rule 161 (expBool -> valoresBool OR and .)
    ?               reduce using rule 161 (expBool -> valoresBool OR and .)
    ;               reduce using rule 161 (expBool -> valoresBool OR and .)
    ,               reduce using rule 161 (expBool -> valoresBool OR and .)
    ]               reduce using rule 161 (expBool -> valoresBool OR and .)
    }               reduce using rule 161 (expBool -> valoresBool OR and .)
    :               reduce using rule 161 (expBool -> valoresBool OR and .)
    AND             shift and go to state 147


state 239

    (163) expBool -> valoresBool OR valoresBool .
    (166) and -> valoresBool . AND eq
    (168) and -> valoresBool . AND valoresBool

    OR              reduce using rule 163 (expBool -> valoresBool OR valoresBool .)
    )               reduce using rule 163 (expBool -> valoresBool OR valoresBool .)
    ?               reduce using rule 163 (expBool -> valoresBool OR valoresBool .)
    ;               reduce using rule 163 (expBool -> valoresBool OR valoresBool .)
    ,               reduce using rule 163 (expBool -> valoresBool OR valoresBool .)
    ]               reduce using rule 163 (expBool -> valoresBool OR valoresBool .)
    }               reduce using rule 163 (expBool -> valoresBool OR valoresBool .)
    :               reduce using rule 163 (expBool -> valoresBool OR valoresBool .)
    AND             shift and go to state 156


state 240

    (155) valoresTernarioBool -> funcBool .
    (149) valoresBool -> funcBool .

    :               reduce using rule 155 (valoresTernarioBool -> funcBool .)
    ,               reduce using rule 155 (valoresTernarioBool -> funcBool .)
    )               reduce using rule 155 (valoresTernarioBool -> funcBool .)
    ;               reduce using rule 155 (valoresTernarioBool -> funcBool .)
    ]               reduce using rule 155 (valoresTernarioBool -> funcBool .)
    }               reduce using rule 155 (valoresTernarioBool -> funcBool .)
    ?               reduce using rule 149 (valoresBool -> funcBool .)
    OR              reduce using rule 149 (valoresBool -> funcBool .)
    AND             reduce using rule 149 (valoresBool -> funcBool .)


state 241

    (76) valoresTernarioVars -> RES .

    ,               reduce using rule 76 (valoresTernarioVars -> RES .)
    )               reduce using rule 76 (valoresTernarioVars -> RES .)
    ;               reduce using rule 76 (valoresTernarioVars -> RES .)
    ]               reduce using rule 76 (valoresTernarioVars -> RES .)
    :               reduce using rule 76 (valoresTernarioVars -> RES .)
    }               reduce using rule 76 (valoresTernarioVars -> RES .)


state 242

    (111) valoresTernarioMat -> funcInt .
    (103) valoresMat -> funcInt .
    (183) tCompare -> funcInt .

    :               reduce using rule 111 (valoresTernarioMat -> funcInt .)
    ,               reduce using rule 111 (valoresTernarioMat -> funcInt .)
    )               reduce using rule 111 (valoresTernarioMat -> funcInt .)
    ;               reduce using rule 111 (valoresTernarioMat -> funcInt .)
    ]               reduce using rule 111 (valoresTernarioMat -> funcInt .)
    }               reduce using rule 111 (valoresTernarioMat -> funcInt .)
    +               reduce using rule 103 (valoresMat -> funcInt .)
    -               reduce using rule 103 (valoresMat -> funcInt .)
    *               reduce using rule 103 (valoresMat -> funcInt .)
    /               reduce using rule 103 (valoresMat -> funcInt .)
    %               reduce using rule 103 (valoresMat -> funcInt .)
    ^               reduce using rule 103 (valoresMat -> funcInt .)
    EQEQ            reduce using rule 183 (tCompare -> funcInt .)
    DISTINTO        reduce using rule 183 (tCompare -> funcInt .)
    >               reduce using rule 183 (tCompare -> funcInt .)
    <               reduce using rule 183 (tCompare -> funcInt .)


state 243

    (71) valoresTernarioVars -> ternarioVars .

    ,               reduce using rule 71 (valoresTernarioVars -> ternarioVars .)
    )               reduce using rule 71 (valoresTernarioVars -> ternarioVars .)
    ;               reduce using rule 71 (valoresTernarioVars -> ternarioVars .)
    ]               reduce using rule 71 (valoresTernarioVars -> ternarioVars .)
    :               reduce using rule 71 (valoresTernarioVars -> ternarioVars .)
    }               reduce using rule 71 (valoresTernarioVars -> ternarioVars .)


state 244

    (112) valoresTernarioMat -> STRING .
    (106) valoresMat -> STRING .

    :               reduce using rule 112 (valoresTernarioMat -> STRING .)
    ,               reduce using rule 112 (valoresTernarioMat -> STRING .)
    )               reduce using rule 112 (valoresTernarioMat -> STRING .)
    ;               reduce using rule 112 (valoresTernarioMat -> STRING .)
    ]               reduce using rule 112 (valoresTernarioMat -> STRING .)
    }               reduce using rule 112 (valoresTernarioMat -> STRING .)
    +               reduce using rule 106 (valoresMat -> STRING .)
    -               reduce using rule 106 (valoresMat -> STRING .)
    *               reduce using rule 106 (valoresMat -> STRING .)
    /               reduce using rule 106 (valoresMat -> STRING .)
    %               reduce using rule 106 (valoresMat -> STRING .)
    ^               reduce using rule 106 (valoresMat -> STRING .)


state 245

    (113) valoresTernarioMat -> eMat .
    (114) eMat -> eMat . + p
    (115) eMat -> eMat . - p
    (118) eMat -> eMat . + valoresMat
    (119) eMat -> eMat . - valoresMat
    (179) tCompare -> eMat .

    :               reduce using rule 113 (valoresTernarioMat -> eMat .)
    ,               reduce using rule 113 (valoresTernarioMat -> eMat .)
    )               reduce using rule 113 (valoresTernarioMat -> eMat .)
    ;               reduce using rule 113 (valoresTernarioMat -> eMat .)
    ]               reduce using rule 113 (valoresTernarioMat -> eMat .)
    }               reduce using rule 113 (valoresTernarioMat -> eMat .)
    +               shift and go to state 159
    -               shift and go to state 160
    EQEQ            reduce using rule 179 (tCompare -> eMat .)
    DISTINTO        reduce using rule 179 (tCompare -> eMat .)
    >               reduce using rule 179 (tCompare -> eMat .)
    <               reduce using rule 179 (tCompare -> eMat .)


state 246

    (72) valoresTernarioVars -> ( . ternarioVars )
    (146) paren -> ( . eMat )
    (147) paren -> ( . valoresMat )
    (192) parenBool -> ( . expBool )
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (38) funcBool -> . COLINEALES ( valores , valores )
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (80) vecVal -> . ID m
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 166
    FLOAT           shift and go to state 167
    STRING          shift and go to state 109
    BOOL            shift and go to state 117
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    ID              shift and go to state 46
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    (               shift and go to state 165
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 107
    funcInt                        shift and go to state 161
    menor                          shift and go to state 75
    valoresMat                     shift and go to state 162
    eq                             shift and go to state 77
    vecVal                         shift and go to state 8
    valoresBool                    shift and go to state 163
    eMat                           shift and go to state 164
    mayor                          shift and go to state 104
    paren                          shift and go to state 90
    varsOps                        shift and go to state 168
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    p                              shift and go to state 97
    iSing                          shift and go to state 88
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 305
    varYVals                       shift and go to state 170
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 171

state 247

    (70) valoresTernarioVars -> vec .

    ,               reduce using rule 70 (valoresTernarioVars -> vec .)
    )               reduce using rule 70 (valoresTernarioVars -> vec .)
    ;               reduce using rule 70 (valoresTernarioVars -> vec .)
    ]               reduce using rule 70 (valoresTernarioVars -> vec .)
    :               reduce using rule 70 (valoresTernarioVars -> vec .)
    }               reduce using rule 70 (valoresTernarioVars -> vec .)


state 248

    (154) valoresTernarioBool -> BOOL .
    (148) valoresBool -> BOOL .

    :               reduce using rule 154 (valoresTernarioBool -> BOOL .)
    ,               reduce using rule 154 (valoresTernarioBool -> BOOL .)
    )               reduce using rule 154 (valoresTernarioBool -> BOOL .)
    ;               reduce using rule 154 (valoresTernarioBool -> BOOL .)
    ]               reduce using rule 154 (valoresTernarioBool -> BOOL .)
    }               reduce using rule 154 (valoresTernarioBool -> BOOL .)
    ?               reduce using rule 148 (valoresBool -> BOOL .)
    OR              reduce using rule 148 (valoresBool -> BOOL .)
    AND             reduce using rule 148 (valoresBool -> BOOL .)


state 249

    (69) valoresTernarioVars -> reg .

    ,               reduce using rule 69 (valoresTernarioVars -> reg .)
    )               reduce using rule 69 (valoresTernarioVars -> reg .)
    ;               reduce using rule 69 (valoresTernarioVars -> reg .)
    ]               reduce using rule 69 (valoresTernarioVars -> reg .)
    :               reduce using rule 69 (valoresTernarioVars -> reg .)
    }               reduce using rule 69 (valoresTernarioVars -> reg .)


state 250

    (67) valoresTernarioVars -> varsOps .
    (151) valoresBool -> varsOps .
    (105) valoresMat -> varsOps .
    (180) tCompare -> varsOps .

    ,               reduce using rule 67 (valoresTernarioVars -> varsOps .)
    )               reduce using rule 67 (valoresTernarioVars -> varsOps .)
    ;               reduce using rule 67 (valoresTernarioVars -> varsOps .)
    ]               reduce using rule 67 (valoresTernarioVars -> varsOps .)
    :               reduce using rule 67 (valoresTernarioVars -> varsOps .)
    }               reduce using rule 67 (valoresTernarioVars -> varsOps .)
    ?               reduce using rule 151 (valoresBool -> varsOps .)
    OR              reduce using rule 151 (valoresBool -> varsOps .)
    AND             reduce using rule 151 (valoresBool -> varsOps .)
    +               reduce using rule 105 (valoresMat -> varsOps .)
    -               reduce using rule 105 (valoresMat -> varsOps .)
    *               reduce using rule 105 (valoresMat -> varsOps .)
    /               reduce using rule 105 (valoresMat -> varsOps .)
    %               reduce using rule 105 (valoresMat -> varsOps .)
    ^               reduce using rule 105 (valoresMat -> varsOps .)
    EQEQ            reduce using rule 180 (tCompare -> varsOps .)
    DISTINTO        reduce using rule 180 (tCompare -> varsOps .)
    >               reduce using rule 180 (tCompare -> varsOps .)
    <               reduce using rule 180 (tCompare -> varsOps .)


state 251

    (66) ternarioVars -> expBool . ? valoresTernarioVars : valoresTernarioVars
    (156) valoresTernarioBool -> expBool .
    (160) expBool -> expBool . OR and
    (162) expBool -> expBool . OR valoresBool

    ?               shift and go to state 180
    :               reduce using rule 156 (valoresTernarioBool -> expBool .)
    ,               reduce using rule 156 (valoresTernarioBool -> expBool .)
    )               reduce using rule 156 (valoresTernarioBool -> expBool .)
    ;               reduce using rule 156 (valoresTernarioBool -> expBool .)
    ]               reduce using rule 156 (valoresTernarioBool -> expBool .)
    }               reduce using rule 156 (valoresTernarioBool -> expBool .)
    OR              shift and go to state 179


state 252

    (73) valoresTernarioVars -> valoresTernarioMat .

    ,               reduce using rule 73 (valoresTernarioVars -> valoresTernarioMat .)
    )               reduce using rule 73 (valoresTernarioVars -> valoresTernarioMat .)
    ;               reduce using rule 73 (valoresTernarioVars -> valoresTernarioMat .)
    ]               reduce using rule 73 (valoresTernarioVars -> valoresTernarioMat .)
    :               reduce using rule 73 (valoresTernarioVars -> valoresTernarioMat .)
    }               reduce using rule 73 (valoresTernarioVars -> valoresTernarioMat .)


state 253

    (109) valoresTernarioMat -> INT .
    (101) valoresMat -> INT .
    (182) tCompare -> INT .

    :               reduce using rule 109 (valoresTernarioMat -> INT .)
    ,               reduce using rule 109 (valoresTernarioMat -> INT .)
    )               reduce using rule 109 (valoresTernarioMat -> INT .)
    ;               reduce using rule 109 (valoresTernarioMat -> INT .)
    ]               reduce using rule 109 (valoresTernarioMat -> INT .)
    }               reduce using rule 109 (valoresTernarioMat -> INT .)
    +               reduce using rule 101 (valoresMat -> INT .)
    -               reduce using rule 101 (valoresMat -> INT .)
    *               reduce using rule 101 (valoresMat -> INT .)
    /               reduce using rule 101 (valoresMat -> INT .)
    %               reduce using rule 101 (valoresMat -> INT .)
    ^               reduce using rule 101 (valoresMat -> INT .)
    EQEQ            reduce using rule 182 (tCompare -> INT .)
    DISTINTO        reduce using rule 182 (tCompare -> INT .)
    >               reduce using rule 182 (tCompare -> INT .)
    <               reduce using rule 182 (tCompare -> INT .)


state 254

    (110) valoresTernarioMat -> FLOAT .
    (102) valoresMat -> FLOAT .
    (184) tCompare -> FLOAT .

    :               reduce using rule 110 (valoresTernarioMat -> FLOAT .)
    ,               reduce using rule 110 (valoresTernarioMat -> FLOAT .)
    )               reduce using rule 110 (valoresTernarioMat -> FLOAT .)
    ;               reduce using rule 110 (valoresTernarioMat -> FLOAT .)
    ]               reduce using rule 110 (valoresTernarioMat -> FLOAT .)
    }               reduce using rule 110 (valoresTernarioMat -> FLOAT .)
    +               reduce using rule 102 (valoresMat -> FLOAT .)
    -               reduce using rule 102 (valoresMat -> FLOAT .)
    *               reduce using rule 102 (valoresMat -> FLOAT .)
    /               reduce using rule 102 (valoresMat -> FLOAT .)
    %               reduce using rule 102 (valoresMat -> FLOAT .)
    ^               reduce using rule 102 (valoresMat -> FLOAT .)
    EQEQ            reduce using rule 184 (tCompare -> FLOAT .)
    DISTINTO        reduce using rule 184 (tCompare -> FLOAT .)
    >               reduce using rule 184 (tCompare -> FLOAT .)
    <               reduce using rule 184 (tCompare -> FLOAT .)


state 255

    (74) valoresTernarioVars -> valoresTernarioBool .

    ,               reduce using rule 74 (valoresTernarioVars -> valoresTernarioBool .)
    )               reduce using rule 74 (valoresTernarioVars -> valoresTernarioBool .)
    ;               reduce using rule 74 (valoresTernarioVars -> valoresTernarioBool .)
    ]               reduce using rule 74 (valoresTernarioVars -> valoresTernarioBool .)
    :               reduce using rule 74 (valoresTernarioVars -> valoresTernarioBool .)
    }               reduce using rule 74 (valoresTernarioVars -> valoresTernarioBool .)


state 256

    (65) ternarioVars -> valoresBool ? valoresTernarioVars . : valoresTernarioVars

    :               shift and go to state 306


state 257

    (68) valoresTernarioVars -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS
    (150) valoresBool -> varYVals .
    (104) valoresMat -> varYVals .
    (181) tCompare -> varYVals .

    ,               reduce using rule 68 (valoresTernarioVars -> varYVals .)
    )               reduce using rule 68 (valoresTernarioVars -> varYVals .)
    ;               reduce using rule 68 (valoresTernarioVars -> varYVals .)
    ]               reduce using rule 68 (valoresTernarioVars -> varYVals .)
    :               reduce using rule 68 (valoresTernarioVars -> varYVals .)
    }               reduce using rule 68 (valoresTernarioVars -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60
    ?               reduce using rule 150 (valoresBool -> varYVals .)
    OR              reduce using rule 150 (valoresBool -> varYVals .)
    AND             reduce using rule 150 (valoresBool -> varYVals .)
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    ^               reduce using rule 104 (valoresMat -> varYVals .)
    EQEQ            reduce using rule 181 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 181 (tCompare -> varYVals .)
    >               reduce using rule 181 (tCompare -> varYVals .)
    <               reduce using rule 181 (tCompare -> varYVals .)


state 258

    (75) valoresTernarioVars -> atributos .

    ,               reduce using rule 75 (valoresTernarioVars -> atributos .)
    )               reduce using rule 75 (valoresTernarioVars -> atributos .)
    ;               reduce using rule 75 (valoresTernarioVars -> atributos .)
    ]               reduce using rule 75 (valoresTernarioVars -> atributos .)
    :               reduce using rule 75 (valoresTernarioVars -> atributos .)
    }               reduce using rule 75 (valoresTernarioVars -> atributos .)


state 259

    (118) eMat -> eMat + valoresMat .
    (126) p -> valoresMat . * exp
    (127) p -> valoresMat . / exp
    (128) p -> valoresMat . % exp
    (132) p -> valoresMat . * valoresMat
    (133) p -> valoresMat . / valoresMat
    (134) p -> valoresMat . % valoresMat
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 118 (eMat -> eMat + valoresMat .)
    -               reduce using rule 118 (eMat -> eMat + valoresMat .)
    >               reduce using rule 118 (eMat -> eMat + valoresMat .)
    <               reduce using rule 118 (eMat -> eMat + valoresMat .)
    EQEQ            reduce using rule 118 (eMat -> eMat + valoresMat .)
    DISTINTO        reduce using rule 118 (eMat -> eMat + valoresMat .)
    AND             reduce using rule 118 (eMat -> eMat + valoresMat .)
    OR              reduce using rule 118 (eMat -> eMat + valoresMat .)
    ?               reduce using rule 118 (eMat -> eMat + valoresMat .)
    ,               reduce using rule 118 (eMat -> eMat + valoresMat .)
    )               reduce using rule 118 (eMat -> eMat + valoresMat .)
    ;               reduce using rule 118 (eMat -> eMat + valoresMat .)
    ]               reduce using rule 118 (eMat -> eMat + valoresMat .)
    :               reduce using rule 118 (eMat -> eMat + valoresMat .)
    }               reduce using rule 118 (eMat -> eMat + valoresMat .)
    *               shift and go to state 150
    /               shift and go to state 152
    %               shift and go to state 148
    ^               shift and go to state 153


state 260

    (114) eMat -> eMat + p .
    (123) p -> p . * exp
    (124) p -> p . / exp
    (125) p -> p . % exp
    (129) p -> p . * valoresMat
    (130) p -> p . / valoresMat
    (131) p -> p . % valoresMat

    +               reduce using rule 114 (eMat -> eMat + p .)
    -               reduce using rule 114 (eMat -> eMat + p .)
    >               reduce using rule 114 (eMat -> eMat + p .)
    <               reduce using rule 114 (eMat -> eMat + p .)
    EQEQ            reduce using rule 114 (eMat -> eMat + p .)
    DISTINTO        reduce using rule 114 (eMat -> eMat + p .)
    AND             reduce using rule 114 (eMat -> eMat + p .)
    OR              reduce using rule 114 (eMat -> eMat + p .)
    ?               reduce using rule 114 (eMat -> eMat + p .)
    ,               reduce using rule 114 (eMat -> eMat + p .)
    )               reduce using rule 114 (eMat -> eMat + p .)
    ;               reduce using rule 114 (eMat -> eMat + p .)
    ]               reduce using rule 114 (eMat -> eMat + p .)
    :               reduce using rule 114 (eMat -> eMat + p .)
    }               reduce using rule 114 (eMat -> eMat + p .)
    *               shift and go to state 191
    /               shift and go to state 192
    %               shift and go to state 190


state 261

    (119) eMat -> eMat - valoresMat .
    (126) p -> valoresMat . * exp
    (127) p -> valoresMat . / exp
    (128) p -> valoresMat . % exp
    (132) p -> valoresMat . * valoresMat
    (133) p -> valoresMat . / valoresMat
    (134) p -> valoresMat . % valoresMat
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    +               reduce using rule 119 (eMat -> eMat - valoresMat .)
    -               reduce using rule 119 (eMat -> eMat - valoresMat .)
    >               reduce using rule 119 (eMat -> eMat - valoresMat .)
    <               reduce using rule 119 (eMat -> eMat - valoresMat .)
    EQEQ            reduce using rule 119 (eMat -> eMat - valoresMat .)
    DISTINTO        reduce using rule 119 (eMat -> eMat - valoresMat .)
    AND             reduce using rule 119 (eMat -> eMat - valoresMat .)
    OR              reduce using rule 119 (eMat -> eMat - valoresMat .)
    ?               reduce using rule 119 (eMat -> eMat - valoresMat .)
    ,               reduce using rule 119 (eMat -> eMat - valoresMat .)
    )               reduce using rule 119 (eMat -> eMat - valoresMat .)
    ;               reduce using rule 119 (eMat -> eMat - valoresMat .)
    ]               reduce using rule 119 (eMat -> eMat - valoresMat .)
    :               reduce using rule 119 (eMat -> eMat - valoresMat .)
    }               reduce using rule 119 (eMat -> eMat - valoresMat .)
    *               shift and go to state 150
    /               shift and go to state 152
    %               shift and go to state 148
    ^               shift and go to state 153


state 262

    (115) eMat -> eMat - p .
    (123) p -> p . * exp
    (124) p -> p . / exp
    (125) p -> p . % exp
    (129) p -> p . * valoresMat
    (130) p -> p . / valoresMat
    (131) p -> p . % valoresMat

    +               reduce using rule 115 (eMat -> eMat - p .)
    -               reduce using rule 115 (eMat -> eMat - p .)
    >               reduce using rule 115 (eMat -> eMat - p .)
    <               reduce using rule 115 (eMat -> eMat - p .)
    EQEQ            reduce using rule 115 (eMat -> eMat - p .)
    DISTINTO        reduce using rule 115 (eMat -> eMat - p .)
    AND             reduce using rule 115 (eMat -> eMat - p .)
    OR              reduce using rule 115 (eMat -> eMat - p .)
    ?               reduce using rule 115 (eMat -> eMat - p .)
    ,               reduce using rule 115 (eMat -> eMat - p .)
    )               reduce using rule 115 (eMat -> eMat - p .)
    ;               reduce using rule 115 (eMat -> eMat - p .)
    ]               reduce using rule 115 (eMat -> eMat - p .)
    :               reduce using rule 115 (eMat -> eMat - p .)
    }               reduce using rule 115 (eMat -> eMat - p .)
    *               shift and go to state 191
    /               shift and go to state 192
    %               shift and go to state 190


state 263

    (147) paren -> ( valoresMat ) .

    ^               reduce using rule 147 (paren -> ( valoresMat ) .)
    *               reduce using rule 147 (paren -> ( valoresMat ) .)
    /               reduce using rule 147 (paren -> ( valoresMat ) .)
    %               reduce using rule 147 (paren -> ( valoresMat ) .)
    +               reduce using rule 147 (paren -> ( valoresMat ) .)
    -               reduce using rule 147 (paren -> ( valoresMat ) .)
    ,               reduce using rule 147 (paren -> ( valoresMat ) .)
    EQEQ            reduce using rule 147 (paren -> ( valoresMat ) .)
    DISTINTO        reduce using rule 147 (paren -> ( valoresMat ) .)
    >               reduce using rule 147 (paren -> ( valoresMat ) .)
    <               reduce using rule 147 (paren -> ( valoresMat ) .)
    )               reduce using rule 147 (paren -> ( valoresMat ) .)
    ]               reduce using rule 147 (paren -> ( valoresMat ) .)
    ;               reduce using rule 147 (paren -> ( valoresMat ) .)
    AND             reduce using rule 147 (paren -> ( valoresMat ) .)
    OR              reduce using rule 147 (paren -> ( valoresMat ) .)
    ?               reduce using rule 147 (paren -> ( valoresMat ) .)
    :               reduce using rule 147 (paren -> ( valoresMat ) .)
    }               reduce using rule 147 (paren -> ( valoresMat ) .)


state 264

    (146) paren -> ( eMat ) .

    ^               reduce using rule 146 (paren -> ( eMat ) .)
    *               reduce using rule 146 (paren -> ( eMat ) .)
    /               reduce using rule 146 (paren -> ( eMat ) .)
    %               reduce using rule 146 (paren -> ( eMat ) .)
    +               reduce using rule 146 (paren -> ( eMat ) .)
    -               reduce using rule 146 (paren -> ( eMat ) .)
    ,               reduce using rule 146 (paren -> ( eMat ) .)
    EQEQ            reduce using rule 146 (paren -> ( eMat ) .)
    DISTINTO        reduce using rule 146 (paren -> ( eMat ) .)
    >               reduce using rule 146 (paren -> ( eMat ) .)
    <               reduce using rule 146 (paren -> ( eMat ) .)
    )               reduce using rule 146 (paren -> ( eMat ) .)
    ]               reduce using rule 146 (paren -> ( eMat ) .)
    ;               reduce using rule 146 (paren -> ( eMat ) .)
    AND             reduce using rule 146 (paren -> ( eMat ) .)
    OR              reduce using rule 146 (paren -> ( eMat ) .)
    ?               reduce using rule 146 (paren -> ( eMat ) .)
    :               reduce using rule 146 (paren -> ( eMat ) .)
    }               reduce using rule 146 (paren -> ( eMat ) .)


state 265

    (104) valoresMat -> varYVals .
    (92) varsOps -> varYVals . MASMAS
    (93) varsOps -> varYVals . MENOSMENOS
    (150) valoresBool -> varYVals .
    (181) tCompare -> varYVals .

    )               reduce using rule 104 (valoresMat -> varYVals .)
    +               reduce using rule 104 (valoresMat -> varYVals .)
    -               reduce using rule 104 (valoresMat -> varYVals .)
    *               reduce using rule 104 (valoresMat -> varYVals .)
    /               reduce using rule 104 (valoresMat -> varYVals .)
    %               reduce using rule 104 (valoresMat -> varYVals .)
    ^               reduce using rule 104 (valoresMat -> varYVals .)
    MASMAS          shift and go to state 63
    MENOSMENOS      shift and go to state 60
    OR              reduce using rule 150 (valoresBool -> varYVals .)
    AND             reduce using rule 150 (valoresBool -> varYVals .)
    EQEQ            reduce using rule 181 (tCompare -> varYVals .)
    DISTINTO        reduce using rule 181 (tCompare -> varYVals .)
    >               reduce using rule 181 (tCompare -> varYVals .)
    <               reduce using rule 181 (tCompare -> varYVals .)


state 266

    (58) valores -> ( ternarioVars ) .

    )               reduce using rule 58 (valores -> ( ternarioVars ) .)
    ;               reduce using rule 58 (valores -> ( ternarioVars ) .)
    ,               reduce using rule 58 (valores -> ( ternarioVars ) .)
    }               reduce using rule 58 (valores -> ( ternarioVars ) .)
    ]               reduce using rule 58 (valores -> ( ternarioVars ) .)


state 267

    (192) parenBool -> ( expBool ) .

    EQEQ            reduce using rule 192 (parenBool -> ( expBool ) .)
    DISTINTO        reduce using rule 192 (parenBool -> ( expBool ) .)
    AND             reduce using rule 192 (parenBool -> ( expBool ) .)
    ?               reduce using rule 192 (parenBool -> ( expBool ) .)
    OR              reduce using rule 192 (parenBool -> ( expBool ) .)
    :               reduce using rule 192 (parenBool -> ( expBool ) .)
    ;               reduce using rule 192 (parenBool -> ( expBool ) .)
    )               reduce using rule 192 (parenBool -> ( expBool ) .)
    ,               reduce using rule 192 (parenBool -> ( expBool ) .)
    }               reduce using rule 192 (parenBool -> ( expBool ) .)
    ]               reduce using rule 192 (parenBool -> ( expBool ) .)


state 268

    (64) valoresCampos -> BEGIN .

    ,               reduce using rule 64 (valoresCampos -> BEGIN .)
    )               reduce using rule 64 (valoresCampos -> BEGIN .)
    ;               reduce using rule 64 (valoresCampos -> BEGIN .)
    ]               reduce using rule 64 (valoresCampos -> BEGIN .)
    :               reduce using rule 64 (valoresCampos -> BEGIN .)
    }               reduce using rule 64 (valoresCampos -> BEGIN .)


state 269

    (63) valoresCampos -> END .

    ,               reduce using rule 63 (valoresCampos -> END .)
    )               reduce using rule 63 (valoresCampos -> END .)
    ;               reduce using rule 63 (valoresCampos -> END .)
    ]               reduce using rule 63 (valoresCampos -> END .)
    :               reduce using rule 63 (valoresCampos -> END .)
    }               reduce using rule 63 (valoresCampos -> END .)


state 270

    (61) atributos -> ID . valoresCampos .

    :               reduce using rule 61 (atributos -> ID . valoresCampos .)
    ,               reduce using rule 61 (atributos -> ID . valoresCampos .)
    ]               reduce using rule 61 (atributos -> ID . valoresCampos .)
    )               reduce using rule 61 (atributos -> ID . valoresCampos .)
    ;               reduce using rule 61 (atributos -> ID . valoresCampos .)
    }               reduce using rule 61 (atributos -> ID . valoresCampos .)


state 271

    (62) valoresCampos -> varYVals .

    ,               reduce using rule 62 (valoresCampos -> varYVals .)
    )               reduce using rule 62 (valoresCampos -> varYVals .)
    ;               reduce using rule 62 (valoresCampos -> varYVals .)
    ]               reduce using rule 62 (valoresCampos -> varYVals .)
    :               reduce using rule 62 (valoresCampos -> varYVals .)
    }               reduce using rule 62 (valoresCampos -> varYVals .)


state 272

    (160) expBool -> expBool OR and .
    (165) and -> and . AND eq
    (167) and -> and . AND valoresBool

    OR              reduce using rule 160 (expBool -> expBool OR and .)
    )               reduce using rule 160 (expBool -> expBool OR and .)
    ?               reduce using rule 160 (expBool -> expBool OR and .)
    ;               reduce using rule 160 (expBool -> expBool OR and .)
    ,               reduce using rule 160 (expBool -> expBool OR and .)
    ]               reduce using rule 160 (expBool -> expBool OR and .)
    }               reduce using rule 160 (expBool -> expBool OR and .)
    :               reduce using rule 160 (expBool -> expBool OR and .)
    AND             shift and go to state 147


state 273

    (162) expBool -> expBool OR valoresBool .
    (166) and -> valoresBool . AND eq
    (168) and -> valoresBool . AND valoresBool

    OR              reduce using rule 162 (expBool -> expBool OR valoresBool .)
    )               reduce using rule 162 (expBool -> expBool OR valoresBool .)
    ?               reduce using rule 162 (expBool -> expBool OR valoresBool .)
    ;               reduce using rule 162 (expBool -> expBool OR valoresBool .)
    ,               reduce using rule 162 (expBool -> expBool OR valoresBool .)
    ]               reduce using rule 162 (expBool -> expBool OR valoresBool .)
    }               reduce using rule 162 (expBool -> expBool OR valoresBool .)
    :               reduce using rule 162 (expBool -> expBool OR valoresBool .)
    AND             shift and go to state 156


state 274

    (66) ternarioVars -> expBool ? valoresTernarioVars . : valoresTernarioVars

    :               shift and go to state 307


state 275

    (173) eq -> tCompare DISTINTO mayor .

    EQEQ            reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    DISTINTO        reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    AND             reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    OR              reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    ?               reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    ,               reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    )               reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    ;               reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    ]               reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    :               reduce using rule 173 (eq -> tCompare DISTINTO mayor .)
    }               reduce using rule 173 (eq -> tCompare DISTINTO mayor .)


state 276

    (177) eq -> tCompare DISTINTO tCompare .
    (185) mayor -> tCompare . > tCompare
    (187) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    DISTINTO        reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    AND             reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    OR              reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    ?               reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    ,               reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    )               reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    ;               reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    ]               reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    :               reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    }               reduce using rule 177 (eq -> tCompare DISTINTO tCompare .)
    >               shift and go to state 184
    <               shift and go to state 183


state 277

    (172) eq -> tCompare EQEQ mayor .

    EQEQ            reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    DISTINTO        reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    AND             reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    OR              reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    ?               reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    ,               reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    )               reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    ;               reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    ]               reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    :               reduce using rule 172 (eq -> tCompare EQEQ mayor .)
    }               reduce using rule 172 (eq -> tCompare EQEQ mayor .)


state 278

    (176) eq -> tCompare EQEQ tCompare .
    (185) mayor -> tCompare . > tCompare
    (187) menor -> tCompare . < tCompare

    EQEQ            reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    DISTINTO        reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    AND             reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    OR              reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    ?               reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    ,               reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    )               reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    ;               reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    ]               reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    :               reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    }               reduce using rule 176 (eq -> tCompare EQEQ tCompare .)
    >               shift and go to state 184
    <               shift and go to state 183


state 279

    (187) menor -> tCompare < tCompare .

    EQEQ            reduce using rule 187 (menor -> tCompare < tCompare .)
    DISTINTO        reduce using rule 187 (menor -> tCompare < tCompare .)
    AND             reduce using rule 187 (menor -> tCompare < tCompare .)
    OR              reduce using rule 187 (menor -> tCompare < tCompare .)
    ?               reduce using rule 187 (menor -> tCompare < tCompare .)
    ,               reduce using rule 187 (menor -> tCompare < tCompare .)
    ;               reduce using rule 187 (menor -> tCompare < tCompare .)
    )               reduce using rule 187 (menor -> tCompare < tCompare .)
    ]               reduce using rule 187 (menor -> tCompare < tCompare .)
    :               reduce using rule 187 (menor -> tCompare < tCompare .)
    }               reduce using rule 187 (menor -> tCompare < tCompare .)


state 280

    (185) mayor -> tCompare > tCompare .

    EQEQ            reduce using rule 185 (mayor -> tCompare > tCompare .)
    DISTINTO        reduce using rule 185 (mayor -> tCompare > tCompare .)
    AND             reduce using rule 185 (mayor -> tCompare > tCompare .)
    ?               reduce using rule 185 (mayor -> tCompare > tCompare .)
    OR              reduce using rule 185 (mayor -> tCompare > tCompare .)
    ,               reduce using rule 185 (mayor -> tCompare > tCompare .)
    )               reduce using rule 185 (mayor -> tCompare > tCompare .)
    ;               reduce using rule 185 (mayor -> tCompare > tCompare .)
    ]               reduce using rule 185 (mayor -> tCompare > tCompare .)
    :               reduce using rule 185 (mayor -> tCompare > tCompare .)
    }               reduce using rule 185 (mayor -> tCompare > tCompare .)


state 281

    (44) elem -> valores , . elem
    (44) elem -> . valores , elem
    (45) elem -> . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    elem                           shift and go to state 308
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 185
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 282

    (43) vec -> [ elem ] .

    ;               reduce using rule 43 (vec -> [ elem ] .)
    )               reduce using rule 43 (vec -> [ elem ] .)
    :               reduce using rule 43 (vec -> [ elem ] .)
    ,               reduce using rule 43 (vec -> [ elem ] .)
    ]               reduce using rule 43 (vec -> [ elem ] .)
    }               reduce using rule 43 (vec -> [ elem ] .)


state 283

    (87) reg -> { campos } .

    :               reduce using rule 87 (reg -> { campos } .)
    ;               reduce using rule 87 (reg -> { campos } .)
    )               reduce using rule 87 (reg -> { campos } .)
    ,               reduce using rule 87 (reg -> { campos } .)
    ]               reduce using rule 87 (reg -> { campos } .)
    }               reduce using rule 87 (reg -> { campos } .)


state 284

    (88) campos -> ID : . valores , campos
    (89) campos -> ID : . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 309
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 285

    (38) funcBool -> COLINEALES ( valores , valores . )

    )               shift and go to state 310


state 286

    (131) p -> p % valoresMat .
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 131 (p -> p % valoresMat .)
    /               reduce using rule 131 (p -> p % valoresMat .)
    %               reduce using rule 131 (p -> p % valoresMat .)
    +               reduce using rule 131 (p -> p % valoresMat .)
    -               reduce using rule 131 (p -> p % valoresMat .)
    ,               reduce using rule 131 (p -> p % valoresMat .)
    ]               reduce using rule 131 (p -> p % valoresMat .)
    EQEQ            reduce using rule 131 (p -> p % valoresMat .)
    DISTINTO        reduce using rule 131 (p -> p % valoresMat .)
    >               reduce using rule 131 (p -> p % valoresMat .)
    <               reduce using rule 131 (p -> p % valoresMat .)
    ;               reduce using rule 131 (p -> p % valoresMat .)
    )               reduce using rule 131 (p -> p % valoresMat .)
    AND             reduce using rule 131 (p -> p % valoresMat .)
    OR              reduce using rule 131 (p -> p % valoresMat .)
    ?               reduce using rule 131 (p -> p % valoresMat .)
    :               reduce using rule 131 (p -> p % valoresMat .)
    }               reduce using rule 131 (p -> p % valoresMat .)
    ^               shift and go to state 153


state 287

    (125) p -> p % exp .
    (136) exp -> exp . ^ iSing
    (138) exp -> exp . ^ valoresMat

    *               reduce using rule 125 (p -> p % exp .)
    /               reduce using rule 125 (p -> p % exp .)
    %               reduce using rule 125 (p -> p % exp .)
    +               reduce using rule 125 (p -> p % exp .)
    -               reduce using rule 125 (p -> p % exp .)
    ,               reduce using rule 125 (p -> p % exp .)
    ]               reduce using rule 125 (p -> p % exp .)
    EQEQ            reduce using rule 125 (p -> p % exp .)
    DISTINTO        reduce using rule 125 (p -> p % exp .)
    >               reduce using rule 125 (p -> p % exp .)
    <               reduce using rule 125 (p -> p % exp .)
    ;               reduce using rule 125 (p -> p % exp .)
    )               reduce using rule 125 (p -> p % exp .)
    AND             reduce using rule 125 (p -> p % exp .)
    OR              reduce using rule 125 (p -> p % exp .)
    ?               reduce using rule 125 (p -> p % exp .)
    :               reduce using rule 125 (p -> p % exp .)
    }               reduce using rule 125 (p -> p % exp .)
    ^               shift and go to state 198


state 288

    (129) p -> p * valoresMat .
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 129 (p -> p * valoresMat .)
    /               reduce using rule 129 (p -> p * valoresMat .)
    %               reduce using rule 129 (p -> p * valoresMat .)
    +               reduce using rule 129 (p -> p * valoresMat .)
    -               reduce using rule 129 (p -> p * valoresMat .)
    ,               reduce using rule 129 (p -> p * valoresMat .)
    ]               reduce using rule 129 (p -> p * valoresMat .)
    EQEQ            reduce using rule 129 (p -> p * valoresMat .)
    DISTINTO        reduce using rule 129 (p -> p * valoresMat .)
    >               reduce using rule 129 (p -> p * valoresMat .)
    <               reduce using rule 129 (p -> p * valoresMat .)
    ;               reduce using rule 129 (p -> p * valoresMat .)
    )               reduce using rule 129 (p -> p * valoresMat .)
    AND             reduce using rule 129 (p -> p * valoresMat .)
    OR              reduce using rule 129 (p -> p * valoresMat .)
    ?               reduce using rule 129 (p -> p * valoresMat .)
    :               reduce using rule 129 (p -> p * valoresMat .)
    }               reduce using rule 129 (p -> p * valoresMat .)
    ^               shift and go to state 153


state 289

    (123) p -> p * exp .
    (136) exp -> exp . ^ iSing
    (138) exp -> exp . ^ valoresMat

    *               reduce using rule 123 (p -> p * exp .)
    /               reduce using rule 123 (p -> p * exp .)
    %               reduce using rule 123 (p -> p * exp .)
    +               reduce using rule 123 (p -> p * exp .)
    -               reduce using rule 123 (p -> p * exp .)
    ,               reduce using rule 123 (p -> p * exp .)
    ]               reduce using rule 123 (p -> p * exp .)
    EQEQ            reduce using rule 123 (p -> p * exp .)
    DISTINTO        reduce using rule 123 (p -> p * exp .)
    >               reduce using rule 123 (p -> p * exp .)
    <               reduce using rule 123 (p -> p * exp .)
    ;               reduce using rule 123 (p -> p * exp .)
    )               reduce using rule 123 (p -> p * exp .)
    AND             reduce using rule 123 (p -> p * exp .)
    OR              reduce using rule 123 (p -> p * exp .)
    ?               reduce using rule 123 (p -> p * exp .)
    :               reduce using rule 123 (p -> p * exp .)
    }               reduce using rule 123 (p -> p * exp .)
    ^               shift and go to state 198


state 290

    (130) p -> p / valoresMat .
    (137) exp -> valoresMat . ^ iSing
    (139) exp -> valoresMat . ^ valoresMat

    *               reduce using rule 130 (p -> p / valoresMat .)
    /               reduce using rule 130 (p -> p / valoresMat .)
    %               reduce using rule 130 (p -> p / valoresMat .)
    +               reduce using rule 130 (p -> p / valoresMat .)
    -               reduce using rule 130 (p -> p / valoresMat .)
    ,               reduce using rule 130 (p -> p / valoresMat .)
    ]               reduce using rule 130 (p -> p / valoresMat .)
    EQEQ            reduce using rule 130 (p -> p / valoresMat .)
    DISTINTO        reduce using rule 130 (p -> p / valoresMat .)
    >               reduce using rule 130 (p -> p / valoresMat .)
    <               reduce using rule 130 (p -> p / valoresMat .)
    ;               reduce using rule 130 (p -> p / valoresMat .)
    )               reduce using rule 130 (p -> p / valoresMat .)
    AND             reduce using rule 130 (p -> p / valoresMat .)
    OR              reduce using rule 130 (p -> p / valoresMat .)
    ?               reduce using rule 130 (p -> p / valoresMat .)
    :               reduce using rule 130 (p -> p / valoresMat .)
    }               reduce using rule 130 (p -> p / valoresMat .)
    ^               shift and go to state 153


state 291

    (124) p -> p / exp .
    (136) exp -> exp . ^ iSing
    (138) exp -> exp . ^ valoresMat

    *               reduce using rule 124 (p -> p / exp .)
    /               reduce using rule 124 (p -> p / exp .)
    %               reduce using rule 124 (p -> p / exp .)
    +               reduce using rule 124 (p -> p / exp .)
    -               reduce using rule 124 (p -> p / exp .)
    ,               reduce using rule 124 (p -> p / exp .)
    ]               reduce using rule 124 (p -> p / exp .)
    EQEQ            reduce using rule 124 (p -> p / exp .)
    DISTINTO        reduce using rule 124 (p -> p / exp .)
    >               reduce using rule 124 (p -> p / exp .)
    <               reduce using rule 124 (p -> p / exp .)
    ;               reduce using rule 124 (p -> p / exp .)
    )               reduce using rule 124 (p -> p / exp .)
    AND             reduce using rule 124 (p -> p / exp .)
    OR              reduce using rule 124 (p -> p / exp .)
    ?               reduce using rule 124 (p -> p / exp .)
    :               reduce using rule 124 (p -> p / exp .)
    }               reduce using rule 124 (p -> p / exp .)
    ^               shift and go to state 198


state 292

    (138) exp -> exp ^ valoresMat .

    ^               reduce using rule 138 (exp -> exp ^ valoresMat .)
    *               reduce using rule 138 (exp -> exp ^ valoresMat .)
    /               reduce using rule 138 (exp -> exp ^ valoresMat .)
    %               reduce using rule 138 (exp -> exp ^ valoresMat .)
    +               reduce using rule 138 (exp -> exp ^ valoresMat .)
    -               reduce using rule 138 (exp -> exp ^ valoresMat .)
    ,               reduce using rule 138 (exp -> exp ^ valoresMat .)
    }               reduce using rule 138 (exp -> exp ^ valoresMat .)
    EQEQ            reduce using rule 138 (exp -> exp ^ valoresMat .)
    DISTINTO        reduce using rule 138 (exp -> exp ^ valoresMat .)
    >               reduce using rule 138 (exp -> exp ^ valoresMat .)
    <               reduce using rule 138 (exp -> exp ^ valoresMat .)
    ;               reduce using rule 138 (exp -> exp ^ valoresMat .)
    )               reduce using rule 138 (exp -> exp ^ valoresMat .)
    AND             reduce using rule 138 (exp -> exp ^ valoresMat .)
    OR              reduce using rule 138 (exp -> exp ^ valoresMat .)
    ?               reduce using rule 138 (exp -> exp ^ valoresMat .)
    ]               reduce using rule 138 (exp -> exp ^ valoresMat .)
    :               reduce using rule 138 (exp -> exp ^ valoresMat .)


state 293

    (136) exp -> exp ^ iSing .

    ^               reduce using rule 136 (exp -> exp ^ iSing .)
    *               reduce using rule 136 (exp -> exp ^ iSing .)
    /               reduce using rule 136 (exp -> exp ^ iSing .)
    %               reduce using rule 136 (exp -> exp ^ iSing .)
    +               reduce using rule 136 (exp -> exp ^ iSing .)
    -               reduce using rule 136 (exp -> exp ^ iSing .)
    ,               reduce using rule 136 (exp -> exp ^ iSing .)
    }               reduce using rule 136 (exp -> exp ^ iSing .)
    EQEQ            reduce using rule 136 (exp -> exp ^ iSing .)
    DISTINTO        reduce using rule 136 (exp -> exp ^ iSing .)
    >               reduce using rule 136 (exp -> exp ^ iSing .)
    <               reduce using rule 136 (exp -> exp ^ iSing .)
    ;               reduce using rule 136 (exp -> exp ^ iSing .)
    )               reduce using rule 136 (exp -> exp ^ iSing .)
    AND             reduce using rule 136 (exp -> exp ^ iSing .)
    OR              reduce using rule 136 (exp -> exp ^ iSing .)
    ?               reduce using rule 136 (exp -> exp ^ iSing .)
    ]               reduce using rule 136 (exp -> exp ^ iSing .)
    :               reduce using rule 136 (exp -> exp ^ iSing .)


state 294

    (6) lAbierta -> IF ( cosaBooleana ) bloqueCerrado . ELSE lAbierta
    (12) lCerrada -> IF ( cosaBooleana ) bloqueCerrado . ELSE bloqueCerrado

    ELSE            shift and go to state 311


state 295

    (5) lAbierta -> IF ( cosaBooleana ) linea .

    IF              reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    COMMENT         reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    DO              reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    WHILE           reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    FOR             reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    RETURN          reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    ;               reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    MENOSMENOS      reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    MASMAS          reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    ID              reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    PRINT           reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    MULTIESCALAR    reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    LENGTH          reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    CAPITALIZAR     reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    COLINEALES      reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    $end            reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)
    }               reduce using rule 5 (lAbierta -> IF ( cosaBooleana ) linea .)


state 296

    (4) linea -> lCerrada .
    (8) bloqueCerrado -> lCerrada .

    IF              reduce using rule 4 (linea -> lCerrada .)
    COMMENT         reduce using rule 4 (linea -> lCerrada .)
    DO              reduce using rule 4 (linea -> lCerrada .)
    WHILE           reduce using rule 4 (linea -> lCerrada .)
    FOR             reduce using rule 4 (linea -> lCerrada .)
    RETURN          reduce using rule 4 (linea -> lCerrada .)
    ;               reduce using rule 4 (linea -> lCerrada .)
    MENOSMENOS      reduce using rule 4 (linea -> lCerrada .)
    MASMAS          reduce using rule 4 (linea -> lCerrada .)
    ID              reduce using rule 4 (linea -> lCerrada .)
    PRINT           reduce using rule 4 (linea -> lCerrada .)
    MULTIESCALAR    reduce using rule 4 (linea -> lCerrada .)
    LENGTH          reduce using rule 4 (linea -> lCerrada .)
    CAPITALIZAR     reduce using rule 4 (linea -> lCerrada .)
    COLINEALES      reduce using rule 4 (linea -> lCerrada .)
    $end            reduce using rule 4 (linea -> lCerrada .)
    }               reduce using rule 4 (linea -> lCerrada .)
    ELSE            reduce using rule 8 (bloqueCerrado -> lCerrada .)


state 297

    (21) loop -> FOR ( primParam ; cosaBooleana . ; tercerParam )

    ;               shift and go to state 312


state 298

    (100) varAsig -> ID . ID = valoresAsig .

    ;               reduce using rule 100 (varAsig -> ID . ID = valoresAsig .)
    )               reduce using rule 100 (varAsig -> ID . ID = valoresAsig .)


state 299

    (85) m -> [ eMat ] m .

    .               reduce using rule 85 (m -> [ eMat ] m .)
    MASMAS          reduce using rule 85 (m -> [ eMat ] m .)
    MENOSMENOS      reduce using rule 85 (m -> [ eMat ] m .)
    MULEQ           reduce using rule 85 (m -> [ eMat ] m .)
    DIVEQ           reduce using rule 85 (m -> [ eMat ] m .)
    MASEQ           reduce using rule 85 (m -> [ eMat ] m .)
    MENOSEQ         reduce using rule 85 (m -> [ eMat ] m .)
    =               reduce using rule 85 (m -> [ eMat ] m .)
    ;               reduce using rule 85 (m -> [ eMat ] m .)
    ,               reduce using rule 85 (m -> [ eMat ] m .)
    +               reduce using rule 85 (m -> [ eMat ] m .)
    -               reduce using rule 85 (m -> [ eMat ] m .)
    *               reduce using rule 85 (m -> [ eMat ] m .)
    /               reduce using rule 85 (m -> [ eMat ] m .)
    %               reduce using rule 85 (m -> [ eMat ] m .)
    ^               reduce using rule 85 (m -> [ eMat ] m .)
    OR              reduce using rule 85 (m -> [ eMat ] m .)
    ?               reduce using rule 85 (m -> [ eMat ] m .)
    AND             reduce using rule 85 (m -> [ eMat ] m .)
    EQEQ            reduce using rule 85 (m -> [ eMat ] m .)
    DISTINTO        reduce using rule 85 (m -> [ eMat ] m .)
    >               reduce using rule 85 (m -> [ eMat ] m .)
    <               reduce using rule 85 (m -> [ eMat ] m .)
    )               reduce using rule 85 (m -> [ eMat ] m .)
    ]               reduce using rule 85 (m -> [ eMat ] m .)
    :               reduce using rule 85 (m -> [ eMat ] m .)
    }               reduce using rule 85 (m -> [ eMat ] m .)


state 300

    (82) m -> [ INT ] m .

    .               reduce using rule 82 (m -> [ INT ] m .)
    MASMAS          reduce using rule 82 (m -> [ INT ] m .)
    MENOSMENOS      reduce using rule 82 (m -> [ INT ] m .)
    MULEQ           reduce using rule 82 (m -> [ INT ] m .)
    DIVEQ           reduce using rule 82 (m -> [ INT ] m .)
    MASEQ           reduce using rule 82 (m -> [ INT ] m .)
    MENOSEQ         reduce using rule 82 (m -> [ INT ] m .)
    =               reduce using rule 82 (m -> [ INT ] m .)
    ;               reduce using rule 82 (m -> [ INT ] m .)
    ,               reduce using rule 82 (m -> [ INT ] m .)
    +               reduce using rule 82 (m -> [ INT ] m .)
    -               reduce using rule 82 (m -> [ INT ] m .)
    *               reduce using rule 82 (m -> [ INT ] m .)
    /               reduce using rule 82 (m -> [ INT ] m .)
    %               reduce using rule 82 (m -> [ INT ] m .)
    ^               reduce using rule 82 (m -> [ INT ] m .)
    OR              reduce using rule 82 (m -> [ INT ] m .)
    ?               reduce using rule 82 (m -> [ INT ] m .)
    AND             reduce using rule 82 (m -> [ INT ] m .)
    EQEQ            reduce using rule 82 (m -> [ INT ] m .)
    DISTINTO        reduce using rule 82 (m -> [ INT ] m .)
    >               reduce using rule 82 (m -> [ INT ] m .)
    <               reduce using rule 82 (m -> [ INT ] m .)
    )               reduce using rule 82 (m -> [ INT ] m .)
    ]               reduce using rule 82 (m -> [ INT ] m .)
    :               reduce using rule 82 (m -> [ INT ] m .)
    }               reduce using rule 82 (m -> [ INT ] m .)


state 301

    (83) m -> [ varYVals ] m .

    .               reduce using rule 83 (m -> [ varYVals ] m .)
    MASMAS          reduce using rule 83 (m -> [ varYVals ] m .)
    MENOSMENOS      reduce using rule 83 (m -> [ varYVals ] m .)
    MULEQ           reduce using rule 83 (m -> [ varYVals ] m .)
    DIVEQ           reduce using rule 83 (m -> [ varYVals ] m .)
    MASEQ           reduce using rule 83 (m -> [ varYVals ] m .)
    MENOSEQ         reduce using rule 83 (m -> [ varYVals ] m .)
    =               reduce using rule 83 (m -> [ varYVals ] m .)
    ;               reduce using rule 83 (m -> [ varYVals ] m .)
    ,               reduce using rule 83 (m -> [ varYVals ] m .)
    +               reduce using rule 83 (m -> [ varYVals ] m .)
    -               reduce using rule 83 (m -> [ varYVals ] m .)
    *               reduce using rule 83 (m -> [ varYVals ] m .)
    /               reduce using rule 83 (m -> [ varYVals ] m .)
    %               reduce using rule 83 (m -> [ varYVals ] m .)
    ^               reduce using rule 83 (m -> [ varYVals ] m .)
    OR              reduce using rule 83 (m -> [ varYVals ] m .)
    ?               reduce using rule 83 (m -> [ varYVals ] m .)
    AND             reduce using rule 83 (m -> [ varYVals ] m .)
    EQEQ            reduce using rule 83 (m -> [ varYVals ] m .)
    DISTINTO        reduce using rule 83 (m -> [ varYVals ] m .)
    >               reduce using rule 83 (m -> [ varYVals ] m .)
    <               reduce using rule 83 (m -> [ varYVals ] m .)
    )               reduce using rule 83 (m -> [ varYVals ] m .)
    ]               reduce using rule 83 (m -> [ varYVals ] m .)
    :               reduce using rule 83 (m -> [ varYVals ] m .)
    }               reduce using rule 83 (m -> [ varYVals ] m .)


state 302

    (35) funcInt -> MULTIESCALAR ( valores , valores . param )
    (40) param -> . , valores
    (41) param -> . empty
    (42) empty -> .

    ,               shift and go to state 314
    )               reduce using rule 42 (empty -> .)

    empty                          shift and go to state 315
    param                          shift and go to state 313

state 303

    (14) lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) . ;

    ;               shift and go to state 316


state 304

    (12) lCerrada -> IF ( cosaBooleana ) bloqueCerrado . ELSE bloqueCerrado

    ELSE            shift and go to state 317


state 305

    (72) valoresTernarioVars -> ( ternarioVars . )

    )               shift and go to state 318


state 306

    (65) ternarioVars -> valoresBool ? valoresTernarioVars : . valoresTernarioVars
    (67) valoresTernarioVars -> . varsOps
    (68) valoresTernarioVars -> . varYVals
    (69) valoresTernarioVars -> . reg
    (70) valoresTernarioVars -> . vec
    (71) valoresTernarioVars -> . ternarioVars
    (72) valoresTernarioVars -> . ( ternarioVars )
    (73) valoresTernarioVars -> . valoresTernarioMat
    (74) valoresTernarioVars -> . valoresTernarioBool
    (75) valoresTernarioVars -> . atributos
    (76) valoresTernarioVars -> . RES
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (87) reg -> . { campos }
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) valoresTernarioMat -> . INT
    (110) valoresTernarioMat -> . FLOAT
    (111) valoresTernarioMat -> . funcInt
    (112) valoresTernarioMat -> . STRING
    (113) valoresTernarioMat -> . eMat
    (154) valoresTernarioBool -> . BOOL
    (155) valoresTernarioBool -> . funcBool
    (156) valoresTernarioBool -> . expBool
    (61) atributos -> . ID . valoresCampos
    (80) vecVal -> . ID m
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (38) funcBool -> . COLINEALES ( valores , valores )
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    (               shift and go to state 246
    RES             shift and go to state 241
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 84
    {               shift and go to state 92
    [               shift and go to state 91
    INT             shift and go to state 253
    FLOAT           shift and go to state 254
    STRING          shift and go to state 244
    BOOL            shift and go to state 248
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 240
    funcInt                        shift and go to state 242
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 163
    eMat                           shift and go to state 245
    valoresTernarioBool            shift and go to state 255
    vecVal                         shift and go to state 8
    vec                            shift and go to state 247
    paren                          shift and go to state 90
    varsOps                        shift and go to state 250
    reg                            shift and go to state 249
    valoresTernarioVars            shift and go to state 319
    exp                            shift and go to state 102
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    valoresTernarioMat             shift and go to state 252
    not                            shift and go to state 74
    p                              shift and go to state 97
    atributos                      shift and go to state 258
    ternarioVars                   shift and go to state 243
    varYVals                       shift and go to state 257
    parenBool                      shift and go to state 100
    expBool                        shift and go to state 251

state 307

    (66) ternarioVars -> expBool ? valoresTernarioVars : . valoresTernarioVars
    (67) valoresTernarioVars -> . varsOps
    (68) valoresTernarioVars -> . varYVals
    (69) valoresTernarioVars -> . reg
    (70) valoresTernarioVars -> . vec
    (71) valoresTernarioVars -> . ternarioVars
    (72) valoresTernarioVars -> . ( ternarioVars )
    (73) valoresTernarioVars -> . valoresTernarioMat
    (74) valoresTernarioVars -> . valoresTernarioBool
    (75) valoresTernarioVars -> . atributos
    (76) valoresTernarioVars -> . RES
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (87) reg -> . { campos }
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (109) valoresTernarioMat -> . INT
    (110) valoresTernarioMat -> . FLOAT
    (111) valoresTernarioMat -> . funcInt
    (112) valoresTernarioMat -> . STRING
    (113) valoresTernarioMat -> . eMat
    (154) valoresTernarioBool -> . BOOL
    (155) valoresTernarioBool -> . funcBool
    (156) valoresTernarioBool -> . expBool
    (61) atributos -> . ID . valoresCampos
    (80) vecVal -> . ID m
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (38) funcBool -> . COLINEALES ( valores , valores )
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    (               shift and go to state 246
    RES             shift and go to state 241
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 84
    {               shift and go to state 92
    [               shift and go to state 91
    INT             shift and go to state 253
    FLOAT           shift and go to state 254
    STRING          shift and go to state 244
    BOOL            shift and go to state 248
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 240
    funcInt                        shift and go to state 242
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 163
    eMat                           shift and go to state 245
    valoresTernarioBool            shift and go to state 255
    vecVal                         shift and go to state 8
    vec                            shift and go to state 247
    paren                          shift and go to state 90
    varsOps                        shift and go to state 250
    reg                            shift and go to state 249
    valoresTernarioVars            shift and go to state 320
    exp                            shift and go to state 102
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    valoresTernarioMat             shift and go to state 252
    not                            shift and go to state 74
    p                              shift and go to state 97
    expBool                        shift and go to state 251
    ternarioVars                   shift and go to state 243
    varYVals                       shift and go to state 257
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 258

state 308

    (44) elem -> valores , elem .

    ]               reduce using rule 44 (elem -> valores , elem .)


state 309

    (88) campos -> ID : valores . , campos
    (89) campos -> ID : valores .

    ,               shift and go to state 321
    }               reduce using rule 89 (campos -> ID : valores .)


state 310

    (38) funcBool -> COLINEALES ( valores , valores ) .

    ;               reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    ,               reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    ]               reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    OR              reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    ?               reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    AND             reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    EQEQ            reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    DISTINTO        reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    )               reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    :               reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)
    }               reduce using rule 38 (funcBool -> COLINEALES ( valores , valores ) .)


state 311

    (6) lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE . lAbierta
    (12) lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE . bloqueCerrado
    (5) lAbierta -> . IF ( cosaBooleana ) linea
    (6) lAbierta -> . IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta
    (7) lAbierta -> . loop lAbierta
    (8) bloqueCerrado -> . lCerrada
    (9) bloqueCerrado -> . { g }
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    IF              shift and go to state 12
    {               shift and go to state 36
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    COMMENT         shift and go to state 9
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    bloqueCerrado                  shift and go to state 322
    loop                           shift and go to state 30
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 35
    lAbierta                       shift and go to state 323
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 31

state 312

    (21) loop -> FOR ( primParam ; cosaBooleana ; . tercerParam )
    (26) tercerParam -> . varsOps
    (27) tercerParam -> . varAsig
    (28) tercerParam -> . func
    (29) tercerParam -> . empty
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (42) empty -> .
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    )               reduce using rule 42 (empty -> .)
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    varAsig                        shift and go to state 326
    funcVoid                       shift and go to state 15
    funcBool                       shift and go to state 3
    funcString                     shift and go to state 23
    funcInt                        shift and go to state 5
    funcReturn                     shift and go to state 25
    varsOps                        shift and go to state 328
    func                           shift and go to state 324
    varYVals                       shift and go to state 31
    vecVal                         shift and go to state 8
    empty                          shift and go to state 327
    tercerParam                    shift and go to state 325

state 313

    (35) funcInt -> MULTIESCALAR ( valores , valores param . )

    )               shift and go to state 329


state 314

    (40) param -> , . valores
    (46) valores -> . eMat
    (47) valores -> . expBool
    (48) valores -> . funcReturn
    (49) valores -> . reg
    (50) valores -> . INT
    (51) valores -> . FLOAT
    (52) valores -> . STRING
    (53) valores -> . BOOL
    (54) valores -> . varYVals
    (55) valores -> . varsOps
    (56) valores -> . vec
    (57) valores -> . ternarioVars
    (58) valores -> . ( ternarioVars )
    (59) valores -> . atributos
    (60) valores -> . RES
    (114) eMat -> . eMat + p
    (115) eMat -> . eMat - p
    (116) eMat -> . valoresMat + p
    (117) eMat -> . valoresMat - p
    (118) eMat -> . eMat + valoresMat
    (119) eMat -> . eMat - valoresMat
    (120) eMat -> . valoresMat + valoresMat
    (121) eMat -> . valoresMat - valoresMat
    (122) eMat -> . p
    (160) expBool -> . expBool OR and
    (161) expBool -> . valoresBool OR and
    (162) expBool -> . expBool OR valoresBool
    (163) expBool -> . valoresBool OR valoresBool
    (164) expBool -> . and
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (87) reg -> . { campos }
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (43) vec -> . [ elem ]
    (65) ternarioVars -> . valoresBool ? valoresTernarioVars : valoresTernarioVars
    (66) ternarioVars -> . expBool ? valoresTernarioVars : valoresTernarioVars
    (61) atributos -> . ID . valoresCampos
    (101) valoresMat -> . INT
    (102) valoresMat -> . FLOAT
    (103) valoresMat -> . funcInt
    (104) valoresMat -> . varYVals
    (105) valoresMat -> . varsOps
    (106) valoresMat -> . STRING
    (123) p -> . p * exp
    (124) p -> . p / exp
    (125) p -> . p % exp
    (126) p -> . valoresMat * exp
    (127) p -> . valoresMat / exp
    (128) p -> . valoresMat % exp
    (129) p -> . p * valoresMat
    (130) p -> . p / valoresMat
    (131) p -> . p % valoresMat
    (132) p -> . valoresMat * valoresMat
    (133) p -> . valoresMat / valoresMat
    (134) p -> . valoresMat % valoresMat
    (135) p -> . exp
    (148) valoresBool -> . BOOL
    (149) valoresBool -> . funcBool
    (150) valoresBool -> . varYVals
    (151) valoresBool -> . varsOps
    (165) and -> . and AND eq
    (166) and -> . valoresBool AND eq
    (167) and -> . and AND valoresBool
    (168) and -> . valoresBool AND valoresBool
    (169) and -> . eq
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )
    (80) vecVal -> . ID m
    (136) exp -> . exp ^ iSing
    (137) exp -> . valoresMat ^ iSing
    (138) exp -> . exp ^ valoresMat
    (139) exp -> . valoresMat ^ valoresMat
    (140) exp -> . iSing
    (170) eq -> . eq EQEQ mayor
    (171) eq -> . eq DISTINTO mayor
    (172) eq -> . tCompare EQEQ mayor
    (173) eq -> . tCompare DISTINTO mayor
    (174) eq -> . eq EQEQ tCompare
    (175) eq -> . eq DISTINTO tCompare
    (176) eq -> . tCompare EQEQ tCompare
    (177) eq -> . tCompare DISTINTO tCompare
    (178) eq -> . mayor
    (141) iSing -> . - paren
    (142) iSing -> . + paren
    (143) iSing -> . - valoresMat
    (144) iSing -> . + valoresMat
    (145) iSing -> . paren
    (179) tCompare -> . eMat
    (180) tCompare -> . varsOps
    (181) tCompare -> . varYVals
    (182) tCompare -> . INT
    (183) tCompare -> . funcInt
    (184) tCompare -> . FLOAT
    (185) mayor -> . tCompare > tCompare
    (186) mayor -> . menor
    (146) paren -> . ( eMat )
    (147) paren -> . ( valoresMat )
    (187) menor -> . tCompare < tCompare
    (188) menor -> . not
    (189) not -> . NOT not
    (190) not -> . NOT valoresBool
    (191) not -> . parenBool
    (192) parenBool -> . ( expBool )

    INT             shift and go to state 93
    FLOAT           shift and go to state 95
    STRING          shift and go to state 79
    BOOL            shift and go to state 98
    (               shift and go to state 81
    RES             shift and go to state 72
    {               shift and go to state 92
    ID              shift and go to state 84
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    [               shift and go to state 91
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4
    -               shift and go to state 83
    +               shift and go to state 82
    NOT             shift and go to state 101

    and                            shift and go to state 70
    funcBool                       shift and go to state 71
    funcInt                        shift and go to state 73
    menor                          shift and go to state 75
    mayor                          shift and go to state 104
    valoresMat                     shift and go to state 76
    eq                             shift and go to state 77
    valoresBool                    shift and go to state 78
    eMat                           shift and go to state 80
    vecVal                         shift and go to state 8
    vec                            shift and go to state 85
    paren                          shift and go to state 90
    reg                            shift and go to state 86
    expBool                        shift and go to state 87
    iSing                          shift and go to state 88
    tCompare                       shift and go to state 89
    not                            shift and go to state 74
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 94
    valores                        shift and go to state 330
    p                              shift and go to state 97
    varsOps                        shift and go to state 99
    exp                            shift and go to state 102
    ternarioVars                   shift and go to state 103
    varYVals                       shift and go to state 105
    parenBool                      shift and go to state 100
    atributos                      shift and go to state 106

state 315

    (41) param -> empty .

    )               reduce using rule 41 (param -> empty .)


state 316

    (14) lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .

    WHILE           reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    ELSE            reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    IF              reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    COMMENT         reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    DO              reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    FOR             reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    RETURN          reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    ;               reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    MENOSMENOS      reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    MASMAS          reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    ID              reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    PRINT           reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    MULTIESCALAR    reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    LENGTH          reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    CAPITALIZAR     reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    COLINEALES      reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    $end            reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)
    }               reduce using rule 14 (lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ; .)


state 317

    (12) lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE . bloqueCerrado
    (8) bloqueCerrado -> . lCerrada
    (9) bloqueCerrado -> . { g }
    (10) lCerrada -> . sentencia
    (11) lCerrada -> . COMMENT
    (12) lCerrada -> . IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado
    (13) lCerrada -> . loop bloqueCerrado
    (14) lCerrada -> . DO bloqueCerrado WHILE ( cosaBooleana ) ;
    (15) sentencia -> . varsOps ;
    (16) sentencia -> . func ;
    (17) sentencia -> . varAsig ;
    (18) sentencia -> . RETURN ;
    (19) sentencia -> . ;
    (20) loop -> . WHILE ( cosaBooleana )
    (21) loop -> . FOR ( primParam ; cosaBooleana ; tercerParam )
    (90) varsOps -> . MENOSMENOS varYVals
    (91) varsOps -> . MASMAS varYVals
    (92) varsOps -> . varYVals MASMAS
    (93) varsOps -> . varYVals MENOSMENOS
    (30) func -> . funcReturn
    (31) func -> . funcVoid
    (95) varAsig -> . varYVals MULEQ valoresAsig
    (96) varAsig -> . varYVals DIVEQ valoresAsig
    (97) varAsig -> . varYVals MASEQ valoresAsig
    (98) varAsig -> . varYVals MENOSEQ valoresAsig
    (99) varAsig -> . varYVals = valoresAsig
    (100) varAsig -> . ID . ID = valoresAsig
    (77) varYVals -> . ID
    (78) varYVals -> . vecVal
    (79) varYVals -> . vecVal . varYVals
    (32) funcReturn -> . funcInt
    (33) funcReturn -> . funcString
    (34) funcReturn -> . funcBool
    (39) funcVoid -> . PRINT ( valores )
    (80) vecVal -> . ID m
    (35) funcInt -> . MULTIESCALAR ( valores , valores param )
    (36) funcInt -> . LENGTH ( valores )
    (37) funcString -> . CAPITALIZAR ( valores )
    (38) funcBool -> . COLINEALES ( valores , valores )

    {               shift and go to state 36
    COMMENT         shift and go to state 9
    IF              shift and go to state 34
    DO              shift and go to state 1
    RETURN          shift and go to state 2
    ;               shift and go to state 11
    WHILE           shift and go to state 6
    FOR             shift and go to state 17
    MENOSMENOS      shift and go to state 16
    MASMAS          shift and go to state 29
    ID              shift and go to state 20
    PRINT           shift and go to state 7
    MULTIESCALAR    shift and go to state 24
    LENGTH          shift and go to state 18
    CAPITALIZAR     shift and go to state 26
    COLINEALES      shift and go to state 4

    funcBool                       shift and go to state 3
    funcInt                        shift and go to state 5
    bloqueCerrado                  shift and go to state 322
    vecVal                         shift and go to state 8
    sentencia                      shift and go to state 10
    funcVoid                       shift and go to state 15
    func                           shift and go to state 19
    varAsig                        shift and go to state 21
    funcString                     shift and go to state 23
    funcReturn                     shift and go to state 25
    lCerrada                       shift and go to state 35
    varsOps                        shift and go to state 14
    varYVals                       shift and go to state 31
    loop                           shift and go to state 37

state 318

    (72) valoresTernarioVars -> ( ternarioVars ) .

    ,               reduce using rule 72 (valoresTernarioVars -> ( ternarioVars ) .)
    )               reduce using rule 72 (valoresTernarioVars -> ( ternarioVars ) .)
    ;               reduce using rule 72 (valoresTernarioVars -> ( ternarioVars ) .)
    ]               reduce using rule 72 (valoresTernarioVars -> ( ternarioVars ) .)
    :               reduce using rule 72 (valoresTernarioVars -> ( ternarioVars ) .)
    }               reduce using rule 72 (valoresTernarioVars -> ( ternarioVars ) .)


state 319

    (65) ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 65 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 65 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 65 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 65 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 65 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 65 (ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars .)


state 320

    (66) ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .

    ,               reduce using rule 66 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ]               reduce using rule 66 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    )               reduce using rule 66 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    ;               reduce using rule 66 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    :               reduce using rule 66 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)
    }               reduce using rule 66 (ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars .)


state 321

    (88) campos -> ID : valores , . campos
    (88) campos -> . ID : valores , campos
    (89) campos -> . ID : valores

    ID              shift and go to state 188

    campos                         shift and go to state 331

state 322

    (12) lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .

    WHILE           reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    ELSE            reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    IF              reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    COMMENT         reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    DO              reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    FOR             reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    RETURN          reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    ;               reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    MENOSMENOS      reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    MASMAS          reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    ID              reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    PRINT           reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    MULTIESCALAR    reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    LENGTH          reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    CAPITALIZAR     reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    COLINEALES      reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    $end            reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)
    }               reduce using rule 12 (lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado .)


state 323

    (6) lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .

    IF              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    COMMENT         reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    DO              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    WHILE           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    FOR             reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    RETURN          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    ;               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    MENOSMENOS      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    MASMAS          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    ID              reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    PRINT           reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    MULTIESCALAR    reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    LENGTH          reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    CAPITALIZAR     reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    COLINEALES      reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    $end            reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)
    }               reduce using rule 6 (lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta .)


state 324

    (28) tercerParam -> func .

    )               reduce using rule 28 (tercerParam -> func .)


state 325

    (21) loop -> FOR ( primParam ; cosaBooleana ; tercerParam . )

    )               shift and go to state 332


state 326

    (27) tercerParam -> varAsig .

    )               reduce using rule 27 (tercerParam -> varAsig .)


state 327

    (29) tercerParam -> empty .

    )               reduce using rule 29 (tercerParam -> empty .)


state 328

    (26) tercerParam -> varsOps .

    )               reduce using rule 26 (tercerParam -> varsOps .)


state 329

    (35) funcInt -> MULTIESCALAR ( valores , valores param ) .

    )               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    +               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    -               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    *               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    /               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    %               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ^               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    EQEQ            reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    DISTINTO        reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    >               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    <               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ,               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ]               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ;               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    AND             reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    OR              reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    ?               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    :               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)
    }               reduce using rule 35 (funcInt -> MULTIESCALAR ( valores , valores param ) .)


state 330

    (40) param -> , valores .

    )               reduce using rule 40 (param -> , valores .)


state 331

    (88) campos -> ID : valores , campos .

    }               reduce using rule 88 (campos -> ID : valores , campos .)


state 332

    (21) loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .

    IF              reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    {               reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    WHILE           reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    FOR             reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    COMMENT         reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    DO              reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    RETURN          reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    ;               reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    MENOSMENOS      reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    MASMAS          reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    ID              reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    PRINT           reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    MULTIESCALAR    reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    LENGTH          reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    CAPITALIZAR     reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)
    COLINEALES      reduce using rule 21 (loop -> FOR ( primParam ; cosaBooleana ; tercerParam ) .)

