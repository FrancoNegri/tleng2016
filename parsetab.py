
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '737AA2493A90E15D4ED2F55267CFB8CD'
    
_lr_action_items = {'DO':([0,1,9,10,11,27,28,30,32,35,36,37,38,44,49,53,57,58,146,201,203,214,295,296,311,316,317,322,323,332,],[1,1,-11,-10,-19,-4,-3,1,1,-8,1,1,-18,-15,-16,-17,-13,-7,-9,-20,1,1,-5,-4,1,-14,1,-12,-6,-21,]),'RETURN':([0,1,9,10,11,27,28,30,32,35,36,37,38,44,49,53,57,58,146,201,203,214,295,296,311,316,317,322,323,332,],[2,2,-11,-10,-19,-4,-3,2,2,-8,2,2,-18,-15,-16,-17,-13,-7,-9,-20,2,2,-5,-4,2,-14,2,-12,-6,-21,]),'COLINEALES':([0,1,9,10,11,27,28,30,32,35,36,37,38,39,40,41,43,44,48,49,53,54,55,57,58,59,61,62,64,65,68,81,91,101,112,144,146,147,156,157,158,165,179,180,189,193,201,203,204,206,211,214,246,281,284,295,296,306,307,311,312,314,316,317,322,323,332,],[4,4,-11,-10,-19,-4,-3,4,4,-8,4,4,-18,4,4,4,4,-15,4,-16,-17,4,4,-13,-7,4,4,4,4,4,4,4,4,4,4,4,-9,4,4,4,4,4,4,4,4,4,-20,4,4,4,4,4,4,4,4,-5,-4,4,4,4,4,4,-14,4,-12,-6,-21,]),'EQEQ':([8,45,46,50,56,60,63,73,74,75,77,80,84,88,89,90,93,95,97,99,100,102,104,105,107,108,109,111,115,116,117,118,119,121,129,133,134,161,164,166,167,168,170,172,173,174,175,176,177,194,195,196,197,205,207,209,210,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,242,245,250,253,254,257,259,260,261,262,263,264,265,267,275,276,277,278,279,280,286,287,288,289,290,291,292,293,299,300,301,310,329,],[-78,-90,-77,-80,-91,-93,-92,-183,-188,-186,154,-179,-77,-140,182,-145,-182,-184,-122,-180,-191,-135,-178,-181,-149,-183,-106,-179,-182,-184,-148,-180,-181,-79,-103,-102,-105,-183,-179,-182,-184,-180,-181,-144,-142,-101,-104,-143,-141,-189,-151,-150,-190,-36,-86,-81,-84,154,-181,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,154,-183,-179,-180,-182,-184,-181,-118,-114,-119,-115,-147,-146,-181,-192,-173,-177,-172,-176,-187,-185,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-38,-35,]),'RES':([39,41,48,54,55,59,61,62,64,65,91,158,180,189,206,211,281,284,306,307,314,],[72,72,72,72,72,72,72,72,72,72,72,241,241,72,72,72,72,72,241,241,72,]),'WHILE':([0,1,9,10,11,27,28,30,32,33,35,36,37,38,44,49,53,57,58,146,201,203,214,295,296,311,316,317,322,323,332,],[6,6,-11,-10,-19,-4,-3,6,6,67,-8,6,6,-18,-15,-16,-17,-13,-7,-9,-20,6,6,-5,-4,6,-14,6,-12,-6,-21,]),'PRINT':([0,1,9,10,11,27,28,30,32,35,36,37,38,44,49,53,57,58,146,201,203,214,295,296,311,312,316,317,322,323,332,],[7,7,-11,-10,-19,-4,-3,7,7,-8,7,7,-18,-15,-16,-17,-13,-7,-9,-20,7,7,-5,-4,7,7,-14,7,-12,-6,-21,]),'COMMENT':([0,1,9,10,11,27,28,30,32,35,36,37,38,44,49,53,57,58,146,201,203,214,295,296,311,316,317,322,323,332,],[9,9,-11,-10,-19,-4,-3,9,9,-8,9,9,-18,-15,-16,-17,-13,-7,-9,-20,9,9,-5,-4,9,-14,9,-12,-6,-21,]),'BEGIN':([178,],[268,]),'%':([8,45,46,50,56,60,63,73,76,79,84,88,90,93,95,97,99,102,105,108,109,115,116,118,119,121,129,132,133,134,135,161,162,166,167,168,170,172,173,174,175,176,177,205,207,209,210,217,218,219,220,221,222,223,224,225,226,227,228,229,232,233,242,244,250,253,254,257,259,260,261,262,263,264,265,286,287,288,289,290,291,292,293,299,300,301,329,],[-78,-90,-77,-80,-91,-93,-92,-103,148,-106,-77,-140,-145,-101,-102,190,-105,-135,-104,-103,-106,-101,-102,-105,-104,-79,-103,-101,-102,-105,-104,-103,148,-101,-102,-105,-104,-144,-142,-101,-104,-143,-141,-36,-86,-81,-84,-104,-134,-128,148,190,-132,-126,148,190,-133,-127,-139,-137,-105,-104,-103,-106,-105,-101,-102,-104,148,190,148,190,-147,-146,-104,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-35,]),'DISTINTO':([8,45,46,50,56,60,63,73,74,75,77,80,84,88,89,90,93,95,97,99,100,102,104,105,107,108,109,111,115,116,117,118,119,121,129,133,134,161,164,166,167,168,170,172,173,174,175,176,177,194,195,196,197,205,207,209,210,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,242,245,250,253,254,257,259,260,261,262,263,264,265,267,275,276,277,278,279,280,286,287,288,289,290,291,292,293,299,300,301,310,329,],[-78,-90,-77,-80,-91,-93,-92,-183,-188,-186,155,-179,-77,-140,181,-145,-182,-184,-122,-180,-191,-135,-178,-181,-149,-183,-106,-179,-182,-184,-148,-180,-181,-79,-103,-102,-105,-183,-179,-182,-184,-180,-181,-144,-142,-101,-104,-143,-141,-189,-151,-150,-190,-36,-86,-81,-84,155,-181,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,155,-183,-179,-180,-182,-184,-181,-118,-114,-119,-115,-147,-146,-181,-192,-173,-177,-172,-176,-187,-185,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-38,-35,]),'MASEQ':([8,20,31,46,50,121,125,207,209,210,299,300,301,],[-78,-77,61,-77,-80,-79,61,-86,-81,-84,-85,-82,-83,]),')':([3,5,8,15,23,25,45,46,50,56,60,63,70,71,72,73,74,75,77,79,80,84,85,86,87,88,90,93,94,95,97,98,99,100,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,127,129,133,134,137,138,139,140,141,142,143,145,161,162,164,166,167,168,169,170,171,172,173,174,175,176,177,194,195,196,197,200,202,205,207,208,209,210,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,280,282,283,285,286,287,288,289,290,291,292,293,298,299,300,301,302,305,310,312,313,315,318,319,320,324,325,326,327,328,329,330,],[-34,-32,-78,-31,-33,-30,-90,-77,-80,-91,-93,-92,-164,-34,-60,-32,-188,-186,-169,-52,-46,-77,-56,-49,-47,-140,-145,-50,-48,-51,-122,-53,-55,-191,-135,-57,-178,-54,-59,-149,-183,-106,-23,-179,-22,201,-182,-184,-148,-151,-150,202,-79,203,205,-103,-102,-105,212,-98,-94,-97,-99,-95,-96,214,-103,263,264,-101,-102,-105,266,-104,267,-144,-142,-101,-104,-143,-141,-189,-151,-150,-190,267,-39,-36,-86,264,-81,-84,-37,303,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-155,-76,-111,-71,-112,-113,-70,-154,-69,-67,-156,-73,-109,-110,-74,-68,-75,-118,-114,-119,-115,-147,-146,-104,-58,-192,-64,-63,-61,-62,-160,-162,-173,-177,-172,-176,-187,-185,-43,-87,310,-131,-125,-129,-123,-130,-124,-138,-136,-100,-85,-82,-83,-42,318,-38,-42,329,-41,-72,-65,-66,-28,332,-27,-29,-26,-35,-40,]),'(':([4,6,7,12,17,18,24,26,34,39,40,41,43,48,52,54,55,59,61,62,64,65,67,68,81,82,83,91,101,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,204,206,211,246,281,284,306,307,314,],[39,40,41,43,47,48,54,55,68,81,112,81,112,81,131,81,81,81,81,81,81,81,144,112,165,131,131,81,193,165,131,112,112,131,131,131,131,131,131,112,112,112,112,246,131,131,165,112,246,112,112,131,131,81,131,131,131,112,131,112,81,81,165,81,81,246,246,81,]),'+':([8,39,40,41,43,45,46,48,50,52,54,55,56,59,60,61,62,63,64,65,68,73,76,79,80,81,84,88,90,91,93,95,97,99,102,105,108,109,111,112,115,116,118,119,121,129,130,131,132,133,134,135,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,170,172,173,174,175,176,177,179,180,181,182,183,184,189,190,191,192,193,198,204,205,206,207,208,209,210,211,217,218,219,220,221,222,223,224,225,226,227,228,229,232,233,242,244,245,246,250,253,254,257,259,260,261,262,263,264,265,281,284,286,287,288,289,290,291,292,293,299,300,301,306,307,314,329,],[-78,82,82,82,82,-90,-77,82,-80,82,82,82,-91,82,-93,82,82,-92,82,82,82,-103,149,-106,159,82,-77,-140,-145,82,-101,-102,-122,-105,-135,-104,-103,-106,159,82,-101,-102,-105,-104,-79,-103,159,82,-101,-102,-105,-104,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-103,149,159,82,-101,-102,-105,-104,-144,-142,-101,-104,-143,-141,82,82,82,82,82,82,82,82,82,82,82,82,82,-36,82,-86,159,-81,-84,82,-104,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-105,-104,-103,-106,159,82,-105,-101,-102,-104,-118,-114,-119,-115,-147,-146,-104,82,82,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,82,82,82,-35,]),'*':([8,45,46,50,56,60,63,73,76,79,84,88,90,93,95,97,99,102,105,108,109,115,116,118,119,121,129,132,133,134,135,161,162,166,167,168,170,172,173,174,175,176,177,205,207,209,210,217,218,219,220,221,222,223,224,225,226,227,228,229,232,233,242,244,250,253,254,257,259,260,261,262,263,264,265,286,287,288,289,290,291,292,293,299,300,301,329,],[-78,-90,-77,-80,-91,-93,-92,-103,150,-106,-77,-140,-145,-101,-102,191,-105,-135,-104,-103,-106,-101,-102,-105,-104,-79,-103,-101,-102,-105,-104,-103,150,-101,-102,-105,-104,-144,-142,-101,-104,-143,-141,-36,-86,-81,-84,-104,-134,-128,150,191,-132,-126,150,191,-133,-127,-139,-137,-105,-104,-103,-106,-105,-101,-102,-104,150,191,150,191,-147,-146,-104,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-35,]),'-':([8,39,40,41,43,45,46,48,50,52,54,55,56,59,60,61,62,63,64,65,68,73,76,79,80,81,84,88,90,91,93,95,97,99,102,105,108,109,111,112,115,116,118,119,121,129,130,131,132,133,134,135,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,170,172,173,174,175,176,177,179,180,181,182,183,184,189,190,191,192,193,198,204,205,206,207,208,209,210,211,217,218,219,220,221,222,223,224,225,226,227,228,229,232,233,242,244,245,246,250,253,254,257,259,260,261,262,263,264,265,281,284,286,287,288,289,290,291,292,293,299,300,301,306,307,314,329,],[-78,83,83,83,83,-90,-77,83,-80,83,83,83,-91,83,-93,83,83,-92,83,83,83,-103,151,-106,160,83,-77,-140,-145,83,-101,-102,-122,-105,-135,-104,-103,-106,160,83,-101,-102,-105,-104,-79,-103,160,83,-101,-102,-105,-104,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-103,151,160,83,-101,-102,-105,-104,-144,-142,-101,-104,-143,-141,83,83,83,83,83,83,83,83,83,83,83,83,83,-36,83,-86,160,-81,-84,83,-104,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-105,-104,-103,-106,160,83,-105,-101,-102,-104,-118,-114,-119,-115,-147,-146,-104,83,83,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,83,83,83,-35,]),',':([8,23,45,46,50,56,60,63,70,71,72,73,74,75,77,79,80,84,85,86,87,88,90,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,111,115,116,117,118,119,121,129,133,134,136,172,173,174,175,176,177,185,194,195,196,197,205,207,209,210,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,275,276,277,278,279,280,282,283,286,287,288,289,290,291,292,293,299,300,301,302,309,310,318,319,320,329,],[-78,-33,-90,-77,-80,-91,-93,-92,-164,-34,-60,-32,-188,-186,-169,-52,-46,-77,-56,-49,-47,-140,-145,-50,-48,-51,189,-122,-53,-55,-191,-135,-57,-178,-54,-59,-149,-183,-106,-179,-182,-184,-148,-151,-150,-79,-103,-102,-105,211,-144,-142,-101,-104,-143,-141,281,-189,-151,-150,-190,-36,-86,-81,-84,-37,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-155,-76,-111,-71,-112,-113,-70,-154,-69,-67,-156,-73,-109,-110,-74,-68,-75,-118,-114,-119,-115,-147,-146,-58,-192,-64,-63,-61,-62,-160,-162,-173,-177,-172,-176,-187,-185,-43,-87,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,314,321,-38,-72,-65,-66,-35,]),'/':([8,45,46,50,56,60,63,73,76,79,84,88,90,93,95,97,99,102,105,108,109,115,116,118,119,121,129,132,133,134,135,161,162,166,167,168,170,172,173,174,175,176,177,205,207,209,210,217,218,219,220,221,222,223,224,225,226,227,228,229,232,233,242,244,250,253,254,257,259,260,261,262,263,264,265,286,287,288,289,290,291,292,293,299,300,301,329,],[-78,-90,-77,-80,-91,-93,-92,-103,152,-106,-77,-140,-145,-101,-102,192,-105,-135,-104,-103,-106,-101,-102,-105,-104,-79,-103,-101,-102,-105,-104,-103,152,-101,-102,-105,-104,-144,-142,-101,-104,-143,-141,-36,-86,-81,-84,-104,-134,-128,152,192,-132,-126,152,192,-133,-127,-139,-137,-105,-104,-103,-106,-105,-101,-102,-104,152,192,152,192,-147,-146,-104,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-35,]),'.':([8,20,50,84,207,209,210,299,300,301,],[42,51,-80,178,-86,-81,-84,-85,-82,-83,]),'MULEQ':([8,20,31,46,50,121,125,207,209,210,299,300,301,],[-78,-77,64,-77,-80,-79,64,-86,-81,-84,-85,-82,-83,]),'BOOL':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,101,112,144,147,156,157,158,165,179,180,189,193,204,206,211,246,281,284,306,307,314,],[98,117,98,117,98,98,98,98,98,98,98,98,117,117,98,117,117,117,117,117,117,248,117,117,248,98,117,117,98,98,117,98,98,248,248,98,]),';':([0,1,2,3,5,8,9,10,11,14,15,19,21,23,25,27,28,30,32,35,36,37,38,44,45,46,47,49,50,53,56,57,58,60,63,70,71,72,73,74,75,77,79,80,84,85,86,87,88,90,93,94,95,97,98,99,100,102,103,104,105,106,107,108,109,110,111,113,115,116,117,118,119,121,123,124,126,129,133,134,138,139,140,141,142,143,146,172,173,174,175,176,177,194,195,196,197,201,202,203,205,207,209,210,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,275,276,277,278,279,280,282,283,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,303,310,311,316,317,318,319,320,322,323,329,332,],[11,11,38,-34,-32,-78,-11,-10,-19,44,-31,49,53,-33,-30,-4,-3,11,11,-8,11,11,-18,-15,-90,-77,-42,-16,-80,-17,-91,-13,-7,-93,-92,-164,-34,-60,-32,-188,-186,-169,-52,-46,-77,-56,-49,-47,-140,-145,-50,-48,-51,-122,-53,-55,-191,-135,-57,-178,-54,-59,-149,-183,-106,-23,-179,-22,-182,-184,-148,-151,-150,-79,-24,204,-25,-103,-102,-105,-98,-94,-97,-99,-95,-96,-9,-144,-142,-101,-104,-143,-141,-189,-151,-150,-190,-20,-39,11,-36,-86,-81,-84,-37,11,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-155,-76,-111,-71,-112,-113,-70,-154,-69,-67,-156,-73,-109,-110,-74,-68,-75,-118,-114,-119,-115,-147,-146,-58,-192,-64,-63,-61,-62,-160,-162,-173,-177,-172,-176,-187,-185,-43,-87,-131,-125,-129,-123,-130,-124,-138,-136,-5,-4,312,-100,-85,-82,-83,316,-38,11,-14,11,-72,-65,-66,-12,-6,-35,-21,]),':':([8,45,46,50,56,60,63,70,74,75,77,84,88,90,97,100,102,104,107,108,109,111,115,116,117,118,119,121,129,133,134,172,173,174,175,176,177,188,194,195,196,197,205,207,209,210,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,286,287,288,289,290,291,292,293,299,300,301,310,318,319,320,329,],[-78,-90,-77,-80,-91,-93,-92,-164,-188,-186,-169,-77,-140,-145,-122,-191,-135,-178,-149,-183,-106,-179,-182,-184,-148,-151,-150,-79,-103,-102,-105,-144,-142,-101,-104,-143,-141,284,-189,-151,-150,-190,-36,-86,-81,-84,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-155,-76,-111,-71,-112,-113,-70,-154,-69,-67,-156,-73,-109,-110,-74,306,-68,-75,-118,-114,-119,-115,-147,-146,-192,-64,-63,-61,-62,-160,-162,307,-173,-177,-172,-176,-187,-185,-43,-87,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-38,-72,-65,-66,-35,]),'=':([8,20,31,46,50,121,125,128,207,209,210,299,300,301,],[-78,-77,62,-77,-80,-79,62,206,-86,-81,-84,-85,-82,-83,]),'<':([8,45,46,50,56,60,63,73,80,84,88,89,90,93,95,97,99,102,105,108,109,111,115,116,118,119,121,129,133,134,161,164,166,167,168,170,172,173,174,175,176,177,205,207,209,210,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,235,242,245,250,253,254,257,259,260,261,262,263,264,265,276,278,286,287,288,289,290,291,292,293,299,300,301,329,],[-78,-90,-77,-80,-91,-93,-92,-183,-179,-77,-140,183,-145,-182,-184,-122,-180,-135,-181,-183,-106,-179,-182,-184,-180,-181,-79,-103,-102,-105,-183,-179,-182,-184,-180,-181,-144,-142,-101,-104,-143,-141,-36,-86,-81,-84,-181,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,183,-180,-181,183,-183,-179,-180,-182,-184,-181,-118,-114,-119,-115,-147,-146,-181,183,183,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-35,]),'?':([8,45,46,50,56,60,63,70,71,74,75,77,78,84,87,88,90,97,98,99,100,102,104,105,107,108,109,111,115,116,117,118,119,121,129,133,134,163,168,170,171,172,173,174,175,176,177,194,195,196,197,205,207,209,210,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,248,250,251,257,259,260,261,262,263,264,267,272,273,275,276,277,278,279,280,286,287,288,289,290,291,292,293,299,300,301,310,329,],[-78,-90,-77,-80,-91,-93,-92,-164,-149,-188,-186,-169,158,-77,180,-140,-145,-122,-148,-151,-191,-135,-178,-150,-149,-183,-106,-179,-182,-184,-148,-151,-150,-79,-103,-102,-105,158,-151,-150,180,-144,-142,-101,-104,-143,-141,-189,-151,-150,-190,-36,-86,-81,-84,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-149,-148,-151,180,-150,-118,-114,-119,-115,-147,-146,-192,-160,-162,-173,-177,-172,-176,-187,-185,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-38,-35,]),'$end':([0,9,10,11,13,22,27,28,32,35,38,44,49,53,57,58,66,146,295,296,316,322,323,],[-42,-11,-10,-19,-2,0,-4,-3,-42,-8,-18,-15,-16,-17,-13,-7,-1,-9,-5,-4,-14,-12,-6,]),'END':([178,],[269,]),'STRING':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,82,83,91,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,204,206,211,246,281,284,306,307,314,],[79,109,79,109,79,109,79,79,79,79,79,79,79,109,109,109,109,79,109,109,109,109,109,109,109,109,109,109,109,109,109,109,244,109,109,109,109,244,109,109,109,109,79,109,109,109,109,109,109,79,79,109,79,79,244,244,79,]),'FOR':([0,1,9,10,11,27,28,30,32,35,36,37,38,44,49,53,57,58,146,201,203,214,295,296,311,316,317,322,323,332,],[17,17,-11,-10,-19,-4,-3,17,17,-8,17,17,-18,-15,-16,-17,-13,-7,-9,-20,17,17,-5,-4,17,-14,17,-12,-6,-21,]),'ELSE':([9,10,11,35,38,44,49,53,57,146,294,296,304,316,322,],[-11,-10,-19,-8,-18,-15,-16,-17,-13,-9,311,-8,317,-14,-12,]),'[':([20,39,41,46,48,54,55,59,61,62,64,65,84,91,158,180,189,206,207,209,210,211,281,284,306,307,314,],[52,91,91,52,91,91,91,91,91,91,91,91,52,91,91,91,91,91,52,52,52,91,91,91,91,91,91,]),']':([8,23,45,46,50,56,60,63,70,71,72,73,74,75,77,79,80,84,85,86,87,88,90,93,94,95,97,98,99,100,102,103,104,105,106,107,108,109,111,115,116,117,118,119,121,129,130,132,133,134,135,172,173,174,175,176,177,185,186,194,195,196,197,205,207,209,210,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,275,276,277,278,279,280,282,283,286,287,288,289,290,291,292,293,299,300,301,308,310,318,319,320,329,],[-78,-33,-90,-77,-80,-91,-93,-92,-164,-34,-60,-32,-188,-186,-169,-52,-46,-77,-56,-49,-47,-140,-145,-50,-48,-51,-122,-53,-55,-191,-135,-57,-178,-54,-59,-149,-183,-106,-179,-182,-184,-148,-151,-150,-79,-103,207,209,-102,-105,210,-144,-142,-101,-104,-143,-141,-45,282,-189,-151,-150,-190,-36,-86,-81,-84,-37,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-155,-76,-111,-71,-112,-113,-70,-154,-69,-67,-156,-73,-109,-110,-74,-68,-75,-118,-114,-119,-115,-147,-146,-58,-192,-64,-63,-61,-62,-160,-162,-173,-177,-172,-176,-187,-185,-43,-87,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-44,-38,-72,-65,-66,-35,]),'ID':([0,1,9,10,11,16,27,28,29,30,32,35,36,37,38,39,40,41,42,43,44,47,48,49,51,52,53,54,55,57,58,59,61,62,64,65,68,81,82,83,91,92,101,112,131,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,178,179,180,181,182,183,184,189,190,191,192,193,198,201,203,204,206,211,214,246,281,284,295,296,306,307,311,312,314,316,317,321,322,323,332,],[20,20,-11,-10,-19,46,-4,-3,46,20,20,-8,20,20,-18,84,46,84,46,46,-15,20,84,-16,128,46,-17,84,84,-13,-7,84,84,84,84,84,46,46,46,46,84,188,46,46,46,46,-9,46,46,46,46,46,46,46,46,46,46,46,84,46,46,46,46,46,84,46,46,46,46,84,46,46,46,46,46,-20,20,46,84,84,20,46,84,84,-5,-4,84,84,20,20,84,-14,20,188,-12,-6,-21,]),'IF':([0,1,9,10,11,27,28,30,32,35,36,37,38,44,49,53,57,58,146,201,203,214,295,296,311,316,317,322,323,332,],[12,34,-11,-10,-19,-4,-3,12,12,-8,12,34,-18,-15,-16,-17,-13,-7,-9,-20,12,34,-5,-4,12,-14,34,-12,-6,-21,]),'AND':([8,45,46,50,56,60,63,70,71,74,75,77,78,84,88,90,97,98,99,100,102,104,105,107,108,109,110,111,115,116,117,118,119,121,129,133,134,163,168,170,172,173,174,175,176,177,194,195,196,197,199,205,207,209,210,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,248,250,257,259,260,261,262,263,264,265,267,272,273,275,276,277,278,279,280,286,287,288,289,290,291,292,293,299,300,301,310,329,],[-78,-90,-77,-80,-91,-93,-92,147,-149,-188,-186,-169,156,-77,-140,-145,-122,-148,-151,-191,-135,-178,-150,-149,-183,-106,156,-179,-182,-184,-148,-151,-150,-79,-103,-102,-105,156,-151,-150,-144,-142,-101,-104,-143,-141,-189,-151,-150,-190,156,-36,-86,-81,-84,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,147,156,-149,-148,-151,-150,-118,-114,-119,-115,-147,-146,-150,-192,147,156,-173,-177,-172,-176,-187,-185,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-38,-35,]),'MENOSEQ':([8,20,31,46,50,121,125,207,209,210,299,300,301,],[-78,-77,59,-77,-80,-79,59,-86,-81,-84,-85,-82,-83,]),'MULTIESCALAR':([0,1,9,10,11,27,28,30,32,35,36,37,38,39,40,41,43,44,48,49,52,53,54,55,57,58,59,61,62,64,65,68,81,82,83,91,112,131,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,201,203,204,206,211,214,246,281,284,295,296,306,307,311,312,314,316,317,322,323,332,],[24,24,-11,-10,-19,-4,-3,24,24,-8,24,24,-18,24,24,24,24,-15,24,-16,24,-17,24,24,-13,-7,24,24,24,24,24,24,24,24,24,24,24,24,24,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-20,24,24,24,24,24,24,24,24,-5,-4,24,24,24,24,24,-14,24,-12,-6,-21,]),'FLOAT':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,82,83,91,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,204,206,211,246,281,284,306,307,314,],[95,116,95,116,95,133,95,95,95,95,95,95,95,116,167,133,133,95,167,133,116,116,133,133,133,133,133,133,116,116,116,116,254,133,133,167,116,254,116,116,116,116,95,133,133,133,116,133,116,95,95,167,95,95,254,254,95,]),'^':([8,45,46,50,56,60,63,73,76,79,84,88,90,93,95,99,102,105,108,109,115,116,118,119,121,129,132,133,134,135,161,162,166,167,168,170,172,173,174,175,176,177,205,207,209,210,217,218,219,220,222,223,224,226,227,228,229,232,233,242,244,250,253,254,257,259,261,263,264,265,286,287,288,289,290,291,292,293,299,300,301,329,],[-78,-90,-77,-80,-91,-93,-92,-103,153,-106,-77,-140,-145,-101,-102,-105,198,-104,-103,-106,-101,-102,-105,-104,-79,-103,-101,-102,-105,-104,-103,153,-101,-102,-105,-104,-144,-142,-101,-104,-143,-141,-36,-86,-81,-84,-104,153,198,153,153,198,153,153,198,-139,-137,-105,-104,-103,-106,-105,-101,-102,-104,153,153,-147,-146,-104,153,198,153,198,153,198,-138,-136,-85,-82,-83,-35,]),'CAPITALIZAR':([0,1,9,10,11,27,28,30,32,35,36,37,38,39,41,44,48,49,53,54,55,57,58,59,61,62,64,65,91,146,189,201,203,206,211,214,281,284,295,296,311,312,314,316,317,322,323,332,],[26,26,-11,-10,-19,-4,-3,26,26,-8,26,26,-18,26,26,-15,26,-16,-17,26,26,-13,-7,26,26,26,26,26,26,-9,26,-20,26,26,26,26,26,26,-5,-4,26,26,26,-14,26,-12,-6,-21,]),'INT':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,82,83,91,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,204,206,211,246,281,284,306,307,314,],[93,115,93,115,93,132,93,93,93,93,93,93,93,115,166,174,174,93,166,174,115,115,174,174,174,174,174,174,115,115,115,115,253,174,174,166,115,253,115,115,115,115,93,174,174,174,115,174,115,93,93,166,93,93,253,253,93,]),'LENGTH':([0,1,9,10,11,27,28,30,32,35,36,37,38,39,40,41,43,44,48,49,52,53,54,55,57,58,59,61,62,64,65,68,81,82,83,91,112,131,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,201,203,204,206,211,214,246,281,284,295,296,306,307,311,312,314,316,317,322,323,332,],[18,18,-11,-10,-19,-4,-3,18,18,-8,18,18,-18,18,18,18,18,-15,18,-16,18,-17,18,18,-13,-7,18,18,18,18,18,18,18,18,18,18,18,18,18,-9,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-20,18,18,18,18,18,18,18,18,-5,-4,18,18,18,18,18,-14,18,-12,-6,-21,]),'MASMAS':([0,1,8,9,10,11,20,27,28,30,31,32,35,36,37,38,39,40,41,43,44,46,48,49,50,52,53,54,55,57,58,59,61,62,64,65,68,81,82,83,84,91,101,105,112,119,121,131,135,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,170,175,179,180,181,182,183,184,189,190,191,192,193,196,198,201,203,204,206,207,209,210,211,214,217,233,246,257,265,281,284,295,296,299,300,301,306,307,311,312,314,316,317,322,323,332,],[29,29,-78,-11,-10,-19,-77,-4,-3,29,63,29,-8,29,29,-18,29,29,29,29,-15,-77,29,-16,-80,29,-17,29,29,-13,-7,29,29,29,29,29,29,29,29,29,-77,29,29,63,29,63,-79,29,63,29,-9,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,63,63,29,29,29,29,29,29,29,29,29,29,29,63,29,-20,29,29,29,-86,-81,-84,29,29,63,63,29,63,63,29,29,-5,-4,-85,-82,-83,29,29,29,29,29,-14,29,-12,-6,-21,]),'DIVEQ':([8,20,31,46,50,121,125,207,209,210,299,300,301,],[-78,-77,65,-77,-80,-79,65,-86,-81,-84,-85,-82,-83,]),'NOT':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,101,112,144,147,154,155,156,157,158,165,179,180,181,182,189,193,204,206,211,246,281,284,306,307,314,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'{':([1,30,37,39,41,48,54,55,59,61,62,64,65,91,158,180,189,201,203,206,211,214,281,284,306,307,311,314,317,332,],[36,36,36,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-20,36,92,92,36,92,92,92,92,36,92,36,-21,]),'>':([8,45,46,50,56,60,63,73,80,84,88,89,90,93,95,97,99,102,105,108,109,111,115,116,118,119,121,129,133,134,161,164,166,167,168,170,172,173,174,175,176,177,205,207,209,210,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,235,242,245,250,253,254,257,259,260,261,262,263,264,265,276,278,286,287,288,289,290,291,292,293,299,300,301,329,],[-78,-90,-77,-80,-91,-93,-92,-183,-179,-77,-140,184,-145,-182,-184,-122,-180,-135,-181,-183,-106,-179,-182,-184,-180,-181,-79,-103,-102,-105,-183,-179,-182,-184,-180,-181,-144,-142,-101,-104,-143,-141,-36,-86,-81,-84,-181,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,184,-180,-181,184,-183,-179,-180,-182,-184,-181,-118,-114,-119,-115,-147,-146,-181,184,184,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-35,]),'}':([8,9,10,11,13,23,27,28,32,35,36,38,44,45,46,49,50,53,56,57,58,60,63,66,69,70,71,72,73,74,75,77,79,80,84,85,86,87,88,90,93,94,95,97,98,99,100,102,103,104,105,106,107,108,109,111,115,116,117,118,119,121,129,133,134,146,172,173,174,175,176,177,187,194,195,196,197,205,207,209,210,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,275,276,277,278,279,280,282,283,286,287,288,289,290,291,292,293,295,296,299,300,301,309,310,316,318,319,320,322,323,329,331,],[-78,-11,-10,-19,-2,-33,-4,-3,-42,-8,-42,-18,-15,-90,-77,-16,-80,-17,-91,-13,-7,-93,-92,-1,146,-164,-34,-60,-32,-188,-186,-169,-52,-46,-77,-56,-49,-47,-140,-145,-50,-48,-51,-122,-53,-55,-191,-135,-57,-178,-54,-59,-149,-183,-106,-179,-182,-184,-148,-151,-150,-79,-103,-102,-105,-9,-144,-142,-101,-104,-143,-141,283,-189,-151,-150,-190,-36,-86,-81,-84,-37,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-155,-76,-111,-71,-112,-113,-70,-154,-69,-67,-156,-73,-109,-110,-74,-68,-75,-118,-114,-119,-115,-147,-146,-58,-192,-64,-63,-61,-62,-160,-162,-173,-177,-172,-176,-187,-185,-43,-87,-131,-125,-129,-123,-130,-124,-138,-136,-5,-4,-85,-82,-83,-89,-38,-14,-72,-65,-66,-12,-6,-35,-88,]),'OR':([8,45,46,50,56,60,63,70,71,74,75,77,78,84,87,88,90,97,98,99,100,102,104,105,107,108,109,110,111,113,115,116,117,118,119,121,129,133,134,163,168,170,171,172,173,174,175,176,177,194,195,196,197,199,200,205,207,209,210,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,248,250,251,257,259,260,261,262,263,264,265,267,272,273,275,276,277,278,279,280,286,287,288,289,290,291,292,293,299,300,301,310,329,],[-78,-90,-77,-80,-91,-93,-92,-164,-149,-188,-186,-169,157,-77,179,-140,-145,-122,-148,-151,-191,-135,-178,-150,-149,-183,-106,157,-179,179,-182,-184,-148,-151,-150,-79,-103,-102,-105,157,-151,-150,179,-144,-142,-101,-104,-143,-141,-189,-151,-150,-190,157,179,-36,-86,-81,-84,-165,-167,-150,-134,-128,-120,-116,-132,-126,-121,-117,-133,-127,-139,-137,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-149,-148,-151,179,-150,-118,-114,-119,-115,-147,-146,-150,-192,-160,-162,-173,-177,-172,-176,-187,-185,-131,-125,-129,-123,-130,-124,-138,-136,-85,-82,-83,-38,-35,]),'MENOSMENOS':([0,1,8,9,10,11,20,27,28,30,31,32,35,36,37,38,39,40,41,43,44,46,48,49,50,52,53,54,55,57,58,59,61,62,64,65,68,81,82,83,84,91,101,105,112,119,121,131,135,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,170,175,179,180,181,182,183,184,189,190,191,192,193,196,198,201,203,204,206,207,209,210,211,214,217,233,246,257,265,281,284,295,296,299,300,301,306,307,311,312,314,316,317,322,323,332,],[16,16,-78,-11,-10,-19,-77,-4,-3,16,60,16,-8,16,16,-18,16,16,16,16,-15,-77,16,-16,-80,16,-17,16,16,-13,-7,16,16,16,16,16,16,16,16,16,-77,16,16,60,16,60,-79,16,60,16,-9,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,60,60,16,16,16,16,16,16,16,16,16,16,16,60,16,-20,16,16,16,-86,-81,-84,16,16,60,60,16,60,60,16,16,-5,-4,-85,-82,-83,16,16,16,16,16,-14,16,-12,-6,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'and':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,112,144,157,158,165,179,180,189,193,204,206,211,246,281,284,306,307,314,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,238,70,70,272,70,70,70,70,70,70,70,70,70,70,70,70,]),'primParam':([47,],[124,]),'funcBool':([0,1,30,32,36,37,39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,101,112,144,147,156,157,158,165,179,180,189,193,203,204,206,211,214,246,281,284,306,307,311,312,314,317,],[3,3,3,3,3,3,71,107,71,107,71,71,71,71,71,71,71,71,107,107,71,107,107,107,107,107,107,240,107,107,240,71,107,3,107,71,71,3,107,71,71,240,240,3,3,71,3,]),'funcInt':([0,1,30,32,36,37,39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,82,83,91,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,203,204,206,211,214,246,281,284,306,307,311,312,314,317,],[5,5,5,5,5,5,73,108,73,108,73,129,73,73,73,73,73,73,73,108,161,129,129,73,161,129,108,108,129,129,129,129,129,129,108,108,108,108,242,129,129,161,108,242,108,108,108,108,73,129,129,129,108,129,5,108,73,73,5,161,73,73,242,242,5,5,73,5,]),'bloqueCerrado':([1,30,37,203,214,311,317,],[33,57,57,294,304,322,322,]),'elem':([91,281,],[186,308,]),'menor':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,112,144,147,154,155,156,157,158,165,179,180,181,182,189,193,204,206,211,246,281,284,306,307,314,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'mayor':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,112,144,147,154,155,156,157,158,165,179,180,181,182,189,193,204,206,211,246,281,284,306,307,314,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,230,234,104,104,104,104,104,104,275,277,104,104,104,104,104,104,104,104,104,104,104,]),'valoresMat':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,82,83,91,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,204,206,211,246,281,284,306,307,314,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,162,172,176,76,162,162,76,76,218,220,222,224,226,228,76,76,76,76,76,259,261,162,76,76,76,76,76,76,76,286,288,290,76,292,76,76,76,162,76,76,76,76,76,]),'loop':([0,1,30,32,36,37,203,214,311,317,],[30,37,30,30,30,37,30,37,30,37,]),'eq':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,112,144,147,156,157,158,165,179,180,189,193,204,206,211,246,281,284,306,307,314,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,215,236,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'vecVal':([0,1,16,29,30,32,36,37,39,40,41,42,43,47,48,52,54,55,59,61,62,64,65,68,81,82,83,91,101,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,178,179,180,181,182,183,184,189,190,191,192,193,198,203,204,206,211,214,246,281,284,306,307,311,312,314,317,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'sentencia':([0,1,30,32,36,37,203,214,311,317,],[10,10,10,10,10,10,10,10,10,10,]),'eMat':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,91,112,131,144,147,154,155,156,157,158,165,179,180,181,182,183,184,189,193,204,206,211,246,281,284,306,307,314,],[80,111,80,111,80,130,80,80,80,80,80,80,80,111,164,80,164,208,111,111,111,111,111,111,245,164,111,245,111,111,111,111,80,111,111,80,80,164,80,80,245,245,80,]),'atributos':([39,41,48,54,55,59,61,62,64,65,91,158,180,189,206,211,281,284,306,307,314,],[106,106,106,106,106,106,106,106,106,106,106,258,258,106,106,106,106,106,258,258,106,]),'param':([302,],[313,]),'valoresBool':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,101,112,144,147,156,157,158,165,179,180,189,193,204,206,211,246,281,284,306,307,314,],[78,110,78,110,78,78,78,78,78,78,78,78,110,163,78,197,199,110,216,237,239,163,199,273,163,78,199,110,78,78,163,78,78,163,163,78,]),'vec':([39,41,48,54,55,59,61,62,64,65,91,158,180,189,206,211,281,284,306,307,314,],[85,85,85,85,85,85,85,85,85,85,85,247,247,85,85,85,85,85,247,247,85,]),'paren':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,82,83,91,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,204,206,211,246,281,284,306,307,314,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,173,177,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'tercerParam':([312,],[325,]),'reg':([39,41,48,54,55,59,61,62,64,65,91,158,180,189,206,211,281,284,306,307,314,],[86,86,86,86,86,86,86,86,86,86,86,249,249,86,86,86,86,86,249,249,86,]),'empty':([0,32,36,47,302,312,],[13,13,13,126,315,327,]),'iSing':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,91,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,204,206,211,246,281,284,306,307,314,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,229,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,293,88,88,88,88,88,88,88,88,88,]),'varAsig':([0,1,30,32,36,37,47,203,214,311,312,317,],[21,21,21,21,21,21,123,21,21,21,326,21,]),'expBool':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,112,144,158,165,180,189,193,204,206,211,246,281,284,306,307,314,],[87,113,87,113,87,87,87,87,87,87,87,87,113,171,87,200,113,251,200,251,87,200,113,87,87,171,87,87,251,251,87,]),'tCompare':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,112,144,147,154,155,156,157,158,165,179,180,181,182,183,184,189,193,204,206,211,246,281,284,306,307,314,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,231,235,89,89,89,89,89,89,276,278,279,280,89,89,89,89,89,89,89,89,89,89,89,]),'valoresTernarioMat':([158,180,306,307,],[252,252,252,252,]),'campos':([92,321,],[187,331,]),'func':([0,1,30,32,36,37,203,214,311,312,317,],[19,19,19,19,19,19,19,19,19,324,19,]),'not':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,101,112,144,147,154,155,156,157,158,165,179,180,181,182,189,193,204,206,211,246,281,284,306,307,314,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,194,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'valoresAsig':([59,61,62,64,65,206,],[138,140,141,142,143,298,]),'funcVoid':([0,1,30,32,36,37,203,214,311,312,317,],[15,15,15,15,15,15,15,15,15,15,15,]),'cosaBooleana':([40,43,68,144,204,],[114,122,145,213,297,]),'valoresCampos':([178,],[270,]),'g':([0,32,36,],[22,66,69,]),'funcString':([0,1,30,32,36,37,39,41,48,54,55,59,61,62,64,65,91,189,203,206,211,214,281,284,311,312,314,317,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'funcReturn':([0,1,30,32,36,37,39,41,48,54,55,59,61,62,64,65,91,189,203,206,211,214,281,284,311,312,314,317,],[25,25,25,25,25,25,94,94,94,94,94,94,94,94,94,94,94,94,25,94,94,25,94,94,25,25,94,25,]),'m':([20,46,84,207,209,210,],[50,50,50,299,300,301,]),'valores':([39,41,48,54,55,59,61,62,64,65,91,189,206,211,281,284,314,],[96,120,127,136,137,139,139,139,139,139,185,285,139,302,185,309,330,]),'lCerrada':([0,1,30,32,36,37,203,214,311,317,],[27,35,35,27,27,35,296,35,35,35,]),'p':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,91,112,131,144,147,149,151,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,193,204,206,211,246,281,284,306,307,314,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,221,225,97,97,97,97,97,260,262,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'lAbierta':([0,30,32,36,203,311,],[28,58,28,28,28,323,]),'varsOps':([0,1,30,32,36,37,39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,82,83,91,101,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,198,203,204,206,211,214,246,281,284,306,307,311,312,314,317,],[14,14,14,14,14,14,99,118,99,118,99,134,99,99,99,99,99,99,99,118,168,134,134,99,195,168,134,118,118,134,134,134,134,134,134,232,232,118,118,250,134,134,168,118,250,232,232,232,232,99,134,134,134,118,134,14,118,99,99,14,168,99,99,250,250,14,328,99,14,]),'exp':([39,40,41,43,48,52,54,55,59,61,62,64,65,68,81,91,112,131,144,147,148,149,150,151,152,154,155,156,157,158,159,160,165,179,180,181,182,183,184,189,190,191,192,193,204,206,211,246,281,284,306,307,314,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,219,102,223,102,227,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,287,289,291,102,102,102,102,102,102,102,102,102,102,]),'valoresTernarioBool':([158,180,306,307,],[255,255,255,255,]),'ternarioVars':([39,41,48,54,55,59,61,62,64,65,81,91,158,180,189,206,211,246,281,284,306,307,314,],[103,103,103,103,103,103,103,103,103,103,169,103,243,243,103,103,103,305,103,103,243,243,103,]),'valoresTernarioVars':([158,180,306,307,],[256,274,319,320,]),'varYVals':([0,1,16,29,30,32,36,37,39,40,41,42,43,47,48,52,54,55,59,61,62,64,65,68,81,82,83,91,101,112,131,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,178,179,180,181,182,183,184,189,190,191,192,193,198,203,204,206,211,214,246,281,284,306,307,311,312,314,317,],[31,31,45,56,31,31,31,31,105,119,105,121,119,125,105,135,105,105,105,105,105,105,105,119,170,175,175,105,196,170,175,119,217,175,175,175,175,175,175,233,233,217,119,257,175,175,265,271,119,257,233,233,233,233,105,175,175,175,119,175,31,119,105,105,31,170,105,105,257,257,31,31,105,31,]),'parenBool':([39,40,41,43,48,54,55,59,61,62,64,65,68,81,91,101,112,144,147,154,155,156,157,158,165,179,180,181,182,189,193,204,206,211,246,281,284,306,307,314,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'linea':([0,32,36,203,],[32,32,32,295,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> g","S'",1,None,None,None),
  ('g -> linea g','g',2,'p_g1','parser_rules.py',21),
  ('g -> empty','g',1,'p_g3','parser_rules.py',25),
  ('linea -> lAbierta','linea',1,'p_linea','parser_rules.py',29),
  ('linea -> lCerrada','linea',1,'p_linea1','parser_rules.py',33),
  ('lAbierta -> IF ( cosaBooleana ) linea','lAbierta',5,'p_lAbierta','parser_rules.py',38),
  ('lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta','lAbierta',7,'p_lAbierta','parser_rules.py',39),
  ('lAbierta -> loop lAbierta','lAbierta',2,'p_lAbierta','parser_rules.py',40),
  ('bloqueCerrado -> lCerrada','bloqueCerrado',1,'p_bloqueCerrado','parser_rules.py',44),
  ('bloqueCerrado -> { g }','bloqueCerrado',3,'p_bloqueCerrado','parser_rules.py',45),
  ('lCerrada -> sentencia','lCerrada',1,'p_lCerrada1','parser_rules.py',49),
  ('lCerrada -> COMMENT','lCerrada',1,'p_lCerrada2','parser_rules.py',53),
  ('lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado','lCerrada',7,'p_lCerrada3','parser_rules.py',57),
  ('lCerrada -> loop bloqueCerrado','lCerrada',2,'p_lCerrada4','parser_rules.py',61),
  ('lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ;','lCerrada',7,'p_lCerrada5','parser_rules.py',65),
  ('sentencia -> varsOps ;','sentencia',2,'p_sentencia1','parser_rules.py',69),
  ('sentencia -> func ;','sentencia',2,'p_sentencia2','parser_rules.py',73),
  ('sentencia -> varAsig ;','sentencia',2,'p_sentencia3','parser_rules.py',77),
  ('sentencia -> RETURN ;','sentencia',2,'p_sentencia4','parser_rules.py',81),
  ('sentencia -> ;','sentencia',1,'p_sentencia5','parser_rules.py',85),
  ('loop -> WHILE ( cosaBooleana )','loop',4,'p_loop1','parser_rules.py',90),
  ('loop -> FOR ( primParam ; cosaBooleana ; tercerParam )','loop',8,'p_loop3','parser_rules.py',96),
  ('cosaBooleana -> expBool','cosaBooleana',1,'p_cosaBooleana','parser_rules.py',104),
  ('cosaBooleana -> valoresBool','cosaBooleana',1,'p_cosaBooleana','parser_rules.py',105),
  ('primParam -> varAsig','primParam',1,'p_primParam','parser_rules.py',109),
  ('primParam -> empty','primParam',1,'p_primParam','parser_rules.py',110),
  ('tercerParam -> varsOps','tercerParam',1,'p_tercerParam','parser_rules.py',114),
  ('tercerParam -> varAsig','tercerParam',1,'p_tercerParam','parser_rules.py',115),
  ('tercerParam -> func','tercerParam',1,'p_tercerParam','parser_rules.py',116),
  ('tercerParam -> empty','tercerParam',1,'p_tercerParam','parser_rules.py',117),
  ('func -> funcReturn','func',1,'p_func1','parser_rules.py',129),
  ('func -> funcVoid','func',1,'p_func2','parser_rules.py',133),
  ('funcReturn -> funcInt','funcReturn',1,'p_funcReturn1','parser_rules.py',139),
  ('funcReturn -> funcString','funcReturn',1,'p_funcReturn2','parser_rules.py',143),
  ('funcReturn -> funcBool','funcReturn',1,'p_funcReturn3','parser_rules.py',147),
  ('funcInt -> MULTIESCALAR ( valores , valores param )','funcInt',7,'p_funcInt1','parser_rules.py',156),
  ('funcInt -> LENGTH ( valores )','funcInt',4,'p_funcInt2','parser_rules.py',161),
  ('funcString -> CAPITALIZAR ( valores )','funcString',4,'p_funcString','parser_rules.py',168),
  ('funcBool -> COLINEALES ( valores , valores )','funcBool',6,'p_funcBool','parser_rules.py',173),
  ('funcVoid -> PRINT ( valores )','funcVoid',4,'p_funcVoid','parser_rules.py',178),
  ('param -> , valores','param',2,'p_param1','parser_rules.py',184),
  ('param -> empty','param',1,'p_param2','parser_rules.py',188),
  ('empty -> <empty>','empty',0,'p_empty','parser_rules.py',192),
  ('vec -> [ elem ]','vec',3,'p_vec1','parser_rules.py',200),
  ('elem -> valores , elem','elem',3,'p_elem1','parser_rules.py',205),
  ('elem -> valores','elem',1,'p_elem2','parser_rules.py',209),
  ('valores -> eMat','valores',1,'p_valores','parser_rules.py',213),
  ('valores -> expBool','valores',1,'p_valores','parser_rules.py',214),
  ('valores -> funcReturn','valores',1,'p_valores','parser_rules.py',215),
  ('valores -> reg','valores',1,'p_valores','parser_rules.py',216),
  ('valores -> INT','valores',1,'p_valores','parser_rules.py',217),
  ('valores -> FLOAT','valores',1,'p_valores','parser_rules.py',218),
  ('valores -> STRING','valores',1,'p_valores','parser_rules.py',219),
  ('valores -> BOOL','valores',1,'p_valores','parser_rules.py',220),
  ('valores -> varYVals','valores',1,'p_valores','parser_rules.py',221),
  ('valores -> varsOps','valores',1,'p_valores','parser_rules.py',222),
  ('valores -> vec','valores',1,'p_valores','parser_rules.py',223),
  ('valores -> ternarioVars','valores',1,'p_valores','parser_rules.py',224),
  ('valores -> ( ternarioVars )','valores',3,'p_valores','parser_rules.py',225),
  ('valores -> atributos','valores',1,'p_valores','parser_rules.py',226),
  ('valores -> RES','valores',1,'p_valores','parser_rules.py',227),
  ('atributos -> ID . valoresCampos','atributos',3,'p_atributos','parser_rules.py',231),
  ('valoresCampos -> varYVals','valoresCampos',1,'p_valoresCampos','parser_rules.py',235),
  ('valoresCampos -> END','valoresCampos',1,'p_valoresCampos','parser_rules.py',236),
  ('valoresCampos -> BEGIN','valoresCampos',1,'p_valoresCampos','parser_rules.py',237),
  ('ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars','ternarioVars',5,'p_ternarioVars','parser_rules.py',241),
  ('ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars','ternarioVars',5,'p_ternarioVars','parser_rules.py',242),
  ('valoresTernarioVars -> varsOps','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',247),
  ('valoresTernarioVars -> varYVals','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',248),
  ('valoresTernarioVars -> reg','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',249),
  ('valoresTernarioVars -> vec','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',250),
  ('valoresTernarioVars -> ternarioVars','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',251),
  ('valoresTernarioVars -> ( ternarioVars )','valoresTernarioVars',3,'p_valoresTernarioVars','parser_rules.py',252),
  ('valoresTernarioVars -> valoresTernarioMat','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',253),
  ('valoresTernarioVars -> valoresTernarioBool','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',254),
  ('valoresTernarioVars -> atributos','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',255),
  ('valoresTernarioVars -> RES','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',256),
  ('varYVals -> ID','varYVals',1,'p_varYVals1','parser_rules.py',261),
  ('varYVals -> vecVal','varYVals',1,'p_varYVals2','parser_rules.py',265),
  ('varYVals -> vecVal . varYVals','varYVals',3,'p_varYVals2','parser_rules.py',266),
  ('vecVal -> ID m','vecVal',2,'p_vecVal1','parser_rules.py',272),
  ('m -> [ INT ]','m',3,'p_m1','parser_rules.py',278),
  ('m -> [ INT ] m','m',4,'p_m2','parser_rules.py',281),
  ('m -> [ varYVals ] m','m',4,'p_m3','parser_rules.py',284),
  ('m -> [ varYVals ]','m',3,'p_m4','parser_rules.py',287),
  ('m -> [ eMat ] m','m',4,'p_m5','parser_rules.py',291),
  ('m -> [ eMat ]','m',3,'p_m6','parser_rules.py',294),
  ('reg -> { campos }','reg',3,'p_reg','parser_rules.py',301),
  ('campos -> ID : valores , campos','campos',5,'p_campos1','parser_rules.py',308),
  ('campos -> ID : valores','campos',3,'p_campos2','parser_rules.py',311),
  ('varsOps -> MENOSMENOS varYVals','varsOps',2,'p_varsOps1','parser_rules.py',319),
  ('varsOps -> MASMAS varYVals','varsOps',2,'p_varsOps1','parser_rules.py',320),
  ('varsOps -> varYVals MASMAS','varsOps',2,'p_varsOps1','parser_rules.py',321),
  ('varsOps -> varYVals MENOSMENOS','varsOps',2,'p_varsOps1','parser_rules.py',322),
  ('valoresAsig -> valores','valoresAsig',1,'p_valoresAsig','parser_rules.py',330),
  ('varAsig -> varYVals MULEQ valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',336),
  ('varAsig -> varYVals DIVEQ valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',337),
  ('varAsig -> varYVals MASEQ valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',338),
  ('varAsig -> varYVals MENOSEQ valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',339),
  ('varAsig -> varYVals = valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',340),
  ('varAsig -> ID . ID = valoresAsig','varAsig',5,'p_varAsig','parser_rules.py',341),
  ('valoresMat -> INT','valoresMat',1,'p_valoresMat','parser_rules.py',350),
  ('valoresMat -> FLOAT','valoresMat',1,'p_valoresMat','parser_rules.py',351),
  ('valoresMat -> funcInt','valoresMat',1,'p_valoresMat','parser_rules.py',352),
  ('valoresMat -> varYVals','valoresMat',1,'p_valoresMat','parser_rules.py',353),
  ('valoresMat -> varsOps','valoresMat',1,'p_valoresMat','parser_rules.py',354),
  ('valoresMat -> STRING','valoresMat',1,'p_valoresMat','parser_rules.py',355),
  ('ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat','ternarioMat',5,'p_ternarioMat','parser_rules.py',359),
  ('ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat','ternarioMat',5,'p_ternarioMat','parser_rules.py',360),
  ('valoresTernarioMat -> INT','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',365),
  ('valoresTernarioMat -> FLOAT','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',366),
  ('valoresTernarioMat -> funcInt','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',367),
  ('valoresTernarioMat -> STRING','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',368),
  ('valoresTernarioMat -> eMat','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',369),
  ('eMat -> eMat + p','eMat',3,'p_eMat','parser_rules.py',374),
  ('eMat -> eMat - p','eMat',3,'p_eMat','parser_rules.py',375),
  ('eMat -> valoresMat + p','eMat',3,'p_eMat','parser_rules.py',376),
  ('eMat -> valoresMat - p','eMat',3,'p_eMat','parser_rules.py',377),
  ('eMat -> eMat + valoresMat','eMat',3,'p_eMat','parser_rules.py',378),
  ('eMat -> eMat - valoresMat','eMat',3,'p_eMat','parser_rules.py',379),
  ('eMat -> valoresMat + valoresMat','eMat',3,'p_eMat','parser_rules.py',380),
  ('eMat -> valoresMat - valoresMat','eMat',3,'p_eMat','parser_rules.py',381),
  ('eMat -> p','eMat',1,'p_eMat','parser_rules.py',382),
  ('p -> p * exp','p',3,'p_p','parser_rules.py',388),
  ('p -> p / exp','p',3,'p_p','parser_rules.py',389),
  ('p -> p % exp','p',3,'p_p','parser_rules.py',390),
  ('p -> valoresMat * exp','p',3,'p_p','parser_rules.py',391),
  ('p -> valoresMat / exp','p',3,'p_p','parser_rules.py',392),
  ('p -> valoresMat % exp','p',3,'p_p','parser_rules.py',393),
  ('p -> p * valoresMat','p',3,'p_p','parser_rules.py',394),
  ('p -> p / valoresMat','p',3,'p_p','parser_rules.py',395),
  ('p -> p % valoresMat','p',3,'p_p','parser_rules.py',396),
  ('p -> valoresMat * valoresMat','p',3,'p_p','parser_rules.py',397),
  ('p -> valoresMat / valoresMat','p',3,'p_p','parser_rules.py',398),
  ('p -> valoresMat % valoresMat','p',3,'p_p','parser_rules.py',399),
  ('p -> exp','p',1,'p_p','parser_rules.py',400),
  ('exp -> exp ^ iSing','exp',3,'p_exp','parser_rules.py',406),
  ('exp -> valoresMat ^ iSing','exp',3,'p_exp','parser_rules.py',407),
  ('exp -> exp ^ valoresMat','exp',3,'p_exp','parser_rules.py',408),
  ('exp -> valoresMat ^ valoresMat','exp',3,'p_exp','parser_rules.py',409),
  ('exp -> iSing','exp',1,'p_exp','parser_rules.py',410),
  ('iSing -> - paren','iSing',2,'p_iSing','parser_rules.py',415),
  ('iSing -> + paren','iSing',2,'p_iSing','parser_rules.py',416),
  ('iSing -> - valoresMat','iSing',2,'p_iSing','parser_rules.py',417),
  ('iSing -> + valoresMat','iSing',2,'p_iSing','parser_rules.py',418),
  ('iSing -> paren','iSing',1,'p_iSing','parser_rules.py',419),
  ('paren -> ( eMat )','paren',3,'p_paren1','parser_rules.py',425),
  ('paren -> ( valoresMat )','paren',3,'p_paren1','parser_rules.py',426),
  ('valoresBool -> BOOL','valoresBool',1,'p_valoresBool','parser_rules.py',439),
  ('valoresBool -> funcBool','valoresBool',1,'p_valoresBool','parser_rules.py',440),
  ('valoresBool -> varYVals','valoresBool',1,'p_valoresBool','parser_rules.py',441),
  ('valoresBool -> varsOps','valoresBool',1,'p_valoresBool','parser_rules.py',442),
  ('ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool','ternarioBool',5,'p_ternarioBool','parser_rules.py',446),
  ('ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool','ternarioBool',5,'p_ternarioBool','parser_rules.py',447),
  ('valoresTernarioBool -> BOOL','valoresTernarioBool',1,'p_valoresTernarioBool','parser_rules.py',452),
  ('valoresTernarioBool -> funcBool','valoresTernarioBool',1,'p_valoresTernarioBool','parser_rules.py',453),
  ('valoresTernarioBool -> expBool','valoresTernarioBool',1,'p_valoresTernarioBool','parser_rules.py',454),
  ('ternario -> valoresBool ? valores : valores','ternario',5,'p_ternario','parser_rules.py',459),
  ('ternario -> expBool ? valores : valores','ternario',5,'p_ternario','parser_rules.py',460),
  ('ternario -> ( ternario )','ternario',3,'p_ternario','parser_rules.py',461),
  ('expBool -> expBool OR and','expBool',3,'p_expBool','parser_rules.py',466),
  ('expBool -> valoresBool OR and','expBool',3,'p_expBool','parser_rules.py',467),
  ('expBool -> expBool OR valoresBool','expBool',3,'p_expBool','parser_rules.py',468),
  ('expBool -> valoresBool OR valoresBool','expBool',3,'p_expBool','parser_rules.py',469),
  ('expBool -> and','expBool',1,'p_expBool','parser_rules.py',470),
  ('and -> and AND eq','and',3,'p_and','parser_rules.py',475),
  ('and -> valoresBool AND eq','and',3,'p_and','parser_rules.py',476),
  ('and -> and AND valoresBool','and',3,'p_and','parser_rules.py',477),
  ('and -> valoresBool AND valoresBool','and',3,'p_and','parser_rules.py',478),
  ('and -> eq','and',1,'p_and','parser_rules.py',479),
  ('eq -> eq EQEQ mayor','eq',3,'p_eq','parser_rules.py',484),
  ('eq -> eq DISTINTO mayor','eq',3,'p_eq','parser_rules.py',485),
  ('eq -> tCompare EQEQ mayor','eq',3,'p_eq','parser_rules.py',486),
  ('eq -> tCompare DISTINTO mayor','eq',3,'p_eq','parser_rules.py',487),
  ('eq -> eq EQEQ tCompare','eq',3,'p_eq','parser_rules.py',488),
  ('eq -> eq DISTINTO tCompare','eq',3,'p_eq','parser_rules.py',489),
  ('eq -> tCompare EQEQ tCompare','eq',3,'p_eq','parser_rules.py',490),
  ('eq -> tCompare DISTINTO tCompare','eq',3,'p_eq','parser_rules.py',491),
  ('eq -> mayor','eq',1,'p_eq','parser_rules.py',492),
  ('tCompare -> eMat','tCompare',1,'p_tCompare','parser_rules.py',498),
  ('tCompare -> varsOps','tCompare',1,'p_tCompare','parser_rules.py',499),
  ('tCompare -> varYVals','tCompare',1,'p_tCompare','parser_rules.py',500),
  ('tCompare -> INT','tCompare',1,'p_tCompare','parser_rules.py',501),
  ('tCompare -> funcInt','tCompare',1,'p_tCompare','parser_rules.py',502),
  ('tCompare -> FLOAT','tCompare',1,'p_tCompare','parser_rules.py',503),
  ('mayor -> tCompare > tCompare','mayor',3,'p_mayor','parser_rules.py',508),
  ('mayor -> menor','mayor',1,'p_mayor','parser_rules.py',509),
  ('menor -> tCompare < tCompare','menor',3,'p_menor3','parser_rules.py',520),
  ('menor -> not','menor',1,'p_menor3','parser_rules.py',521),
  ('not -> NOT not','not',2,'p_not','parser_rules.py',529),
  ('not -> NOT valoresBool','not',2,'p_not','parser_rules.py',530),
  ('not -> parenBool','not',1,'p_not','parser_rules.py',531),
  ('parenBool -> ( expBool )','parenBool',3,'p_parenBool','parser_rules.py',536),
]
