
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9D9116B86DC750D3DC6DB2A1C6F6F605'
    
_lr_action_items = {'DO':([0,1,9,10,11,27,28,30,32,35,36,37,38,43,48,52,56,57,143,201,203,215,298,299,341,346,347,357,358,371,],[1,1,-11,-10,-19,-4,-3,1,1,-8,1,1,-18,-15,-16,-17,-13,-7,-9,-20,1,1,-5,-4,1,-14,1,-12,-6,-21,]),'RETURN':([0,1,9,10,11,27,28,30,32,35,36,37,38,43,48,52,56,57,143,201,203,215,298,299,341,346,347,357,358,371,],[2,2,-11,-10,-19,-4,-3,2,2,-8,2,2,-18,-15,-16,-17,-13,-7,-9,-20,2,2,-5,-4,2,-14,2,-12,-6,-21,]),'COLINEALES':([0,1,9,10,11,27,28,30,32,35,36,37,38,39,40,41,42,43,47,48,52,53,54,56,57,58,60,61,63,64,67,80,90,91,100,110,128,141,143,144,153,154,155,161,171,178,179,189,193,201,203,204,206,212,215,231,257,265,280,282,295,296,298,299,303,304,311,325,327,328,331,335,336,341,342,344,346,347,349,350,352,353,355,357,358,371,],[4,4,-11,-10,-19,-4,-3,4,4,-8,4,4,-18,4,4,4,4,-15,4,-16,-17,4,4,-13,-7,4,4,4,4,4,4,4,4,4,4,4,4,4,-9,4,4,4,4,4,4,4,4,4,4,-20,4,4,4,4,4,4,4,4,4,4,4,4,-5,-4,4,4,4,4,4,4,4,4,4,4,4,4,-14,4,4,4,4,4,4,-12,-6,-21,]),'EQEQ':([8,44,45,49,55,59,62,73,74,76,79,83,87,88,89,92,94,96,98,99,101,103,104,106,107,108,109,114,115,116,117,118,130,131,160,164,165,166,168,170,172,173,174,175,176,186,194,195,196,197,205,207,210,211,216,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,247,249,252,253,254,255,256,258,261,262,264,266,274,275,276,277,278,279,285,286,287,288,289,290,293,294,302,305,306,314,320,321,324,326,334,338,339,364,],[-75,-86,-74,-76,-87,-89,-88,-187,-185,151,-179,-74,-138,181,-143,-182,-183,-120,-180,-190,-133,-178,-181,-147,-99,-102,-179,-182,-183,-146,-180,-181,-98,-101,-179,-182,-183,-180,-181,-142,-140,-97,-100,-141,-139,-74,-188,-149,-148,-189,-36,-82,-77,-80,151,-181,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,-170,-174,-180,-181,-171,-175,151,-180,-181,-116,-112,-117,-113,-145,-144,-103,-150,-191,-181,-173,-177,-172,-176,-186,-184,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,-179,-182,-183,-180,-181,-38,-180,-181,-35,]),'RES':([39,41,47,53,54,58,60,61,63,64,90,91,155,179,189,206,212,257,265,280,282,311,331,344,355,],[71,71,71,71,71,71,71,71,71,71,71,71,242,242,71,71,71,242,242,71,71,242,242,71,71,]),'WHILE':([0,1,9,10,11,27,28,30,32,33,35,36,37,38,43,48,52,56,57,143,201,203,215,298,299,341,346,347,357,358,371,],[6,6,-11,-10,-19,-4,-3,6,6,66,-8,6,6,-18,-15,-16,-17,-13,-7,-9,-20,6,6,-5,-4,6,-14,6,-12,-6,-21,]),'PRINT':([0,1,9,10,11,27,28,30,32,35,36,37,38,43,48,52,56,57,143,201,203,215,298,299,341,342,346,347,357,358,371,],[7,7,-11,-10,-19,-4,-3,7,7,-8,7,7,-18,-15,-16,-17,-13,-7,-9,-20,7,7,-5,-4,7,7,-14,7,-12,-6,-21,]),'COMMENT':([0,1,9,10,11,27,28,30,32,35,36,37,38,43,48,52,56,57,143,201,203,215,298,299,341,346,347,357,358,371,],[9,9,-11,-10,-19,-4,-3,9,9,-8,9,9,-18,-15,-16,-17,-13,-7,-9,-20,9,9,-5,-4,9,-14,9,-12,-6,-21,]),'BEGIN':([177,],[267,]),'%':([8,44,45,49,55,59,62,72,75,78,83,87,89,92,94,96,98,101,104,107,108,114,115,117,118,129,130,131,132,158,164,165,166,168,170,172,173,174,175,176,186,205,207,210,211,218,219,220,221,222,223,224,225,226,227,228,229,230,234,235,247,249,252,253,254,255,256,258,261,266,285,286,287,288,289,290,293,294,302,305,306,313,317,320,321,324,326,338,339,364,],[-75,-86,-74,-76,-87,-89,-88,-99,145,-102,-74,-138,-143,-97,-98,190,-101,-133,-100,-99,-102,-97,-98,-101,-100,-97,-98,-101,-100,145,-97,-98,-101,-100,-142,-140,-97,-100,-141,-139,-74,-36,-82,-77,-80,-100,-132,-126,145,190,-130,-124,145,190,-131,-125,-137,-135,-101,-100,-101,-100,145,190,145,190,-145,-144,-103,-100,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,-99,-102,-97,-98,-101,-100,-101,-100,-35,]),'DISTINTO':([8,44,45,49,55,59,62,73,74,76,79,83,87,88,89,92,94,96,98,99,101,103,104,106,107,108,109,114,115,116,117,118,130,131,160,164,165,166,168,170,172,173,174,175,176,186,194,195,196,197,205,207,210,211,216,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,247,249,252,253,254,255,256,258,261,262,264,266,274,275,276,277,278,279,285,286,287,288,289,290,293,294,302,305,306,314,320,321,324,326,334,338,339,364,],[-75,-86,-74,-76,-87,-89,-88,-187,-185,152,-179,-74,-138,180,-143,-182,-183,-120,-180,-190,-133,-178,-181,-147,-99,-102,-179,-182,-183,-146,-180,-181,-98,-101,-179,-182,-183,-180,-181,-142,-140,-97,-100,-141,-139,-74,-188,-149,-148,-189,-36,-82,-77,-80,152,-181,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,-170,-174,-180,-181,-171,-175,152,-180,-181,-116,-112,-117,-113,-145,-144,-103,-150,-191,-181,-173,-177,-172,-176,-186,-184,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,-179,-182,-183,-180,-181,-38,-180,-181,-35,]),'MASEQ':([8,20,31,49,123,207,210,211,302,305,306,],[-75,-74,60,-76,60,-82,-77,-80,-81,-78,-79,]),')':([3,5,8,15,23,25,44,45,49,55,59,62,69,70,71,72,73,74,76,78,79,83,84,85,86,87,89,92,93,94,96,97,98,99,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,125,130,131,134,135,136,137,138,139,140,142,158,160,162,163,164,165,166,167,168,169,170,172,173,174,175,176,194,195,196,197,200,202,205,207,210,211,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,249,250,252,253,254,255,256,258,260,261,262,263,264,266,267,268,269,270,271,272,274,275,276,277,278,279,281,283,284,285,286,287,288,289,290,292,293,294,301,302,305,306,307,310,312,313,314,316,317,318,320,321,323,334,342,343,345,348,354,356,359,360,361,362,363,364,365,366,367,368,369,],[-34,-32,-75,-31,-33,-30,-86,-74,-76,-87,-89,-88,-164,-34,-60,-32,-187,-185,-169,-52,-46,-74,-56,-49,-47,-138,-143,-50,-48,-51,-120,-53,-55,-190,-133,-57,-178,-54,-59,-147,-99,-102,-179,-23,-22,201,-182,-183,-146,-149,-148,202,203,205,-98,-101,213,-94,-90,-93,-95,-91,-92,215,256,258,261,262,-97,-98,-101,263,-100,264,-142,-140,-97,-100,-141,-139,-188,-149,-148,-189,264,-39,-36,-82,-77,-80,-37,308,-165,-167,-148,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-73,-71,-70,-69,-67,-68,-72,-116,-112,-117,-113,-145,-144,264,-103,-150,-58,-191,-100,-64,-63,-62,-61,-160,-162,-173,-177,-172,-176,-186,-184,-43,-83,334,-129,-123,-127,-121,-128,-122,264,-136,-134,-96,-81,-78,-79,-42,264,-154,-108,-110,-111,-109,-155,-106,-107,-153,-38,-42,364,-41,-65,-66,-156,-28,371,-27,-29,-26,-35,-40,-151,-104,-152,-105,]),'(':([4,6,7,12,17,18,24,26,34,39,40,41,42,47,51,53,54,58,60,61,63,64,66,67,80,81,82,90,91,100,110,128,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,198,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[39,40,41,42,46,47,53,54,67,80,110,80,110,80,128,80,80,80,80,80,80,80,141,110,161,171,171,80,80,193,161,161,110,110,128,128,128,128,128,128,231,231,110,110,110,128,128,161,161,110,110,231,231,128,128,80,128,128,128,110,128,110,80,80,161,325,325,80,80,325,325,161,161,110,161,161,161,110,110,110,80,110,161,110,161,80,]),'+':([8,39,40,41,42,44,45,47,49,51,53,54,55,58,59,60,61,62,63,64,67,72,75,78,79,80,83,87,89,90,91,92,94,96,98,101,104,107,108,109,110,114,115,117,118,127,128,129,130,131,132,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,164,165,166,168,170,171,172,173,174,175,176,178,179,180,181,182,183,186,189,190,191,192,193,198,204,205,206,207,210,211,212,218,219,220,221,222,223,224,225,226,227,228,229,230,231,234,235,247,249,252,253,254,255,256,257,258,261,265,266,280,282,285,286,287,288,289,290,293,294,295,296,302,303,304,305,306,311,313,314,317,320,321,324,325,326,327,328,331,335,336,338,339,344,349,350,352,353,355,364,],[-75,81,81,81,81,-86,-74,81,-76,81,81,81,-87,81,-89,81,81,-88,81,81,81,-99,146,-102,156,81,-74,-138,-143,81,81,-97,-98,-120,-101,-133,-100,-99,-102,156,81,-97,-98,-101,-100,156,81,-97,-98,-101,-100,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,146,156,81,-97,-98,-101,-100,-142,81,-140,-97,-100,-141,-139,81,81,81,81,81,81,-74,81,81,81,81,81,81,81,-36,81,-82,-77,-80,81,-100,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,81,-101,-100,-101,-100,-116,-112,-117,-113,-145,81,-144,-103,81,-100,81,81,-129,-123,-127,-121,-128,-122,-136,-134,81,81,-81,81,81,-78,-79,81,-99,156,-102,-97,-98,-101,81,-100,81,81,81,81,81,-101,-100,81,81,81,81,81,81,-35,]),'*':([8,44,45,49,55,59,62,72,75,78,83,87,89,92,94,96,98,101,104,107,108,114,115,117,118,129,130,131,132,158,164,165,166,168,170,172,173,174,175,176,186,205,207,210,211,218,219,220,221,222,223,224,225,226,227,228,229,230,234,235,247,249,252,253,254,255,256,258,261,266,285,286,287,288,289,290,293,294,302,305,306,313,317,320,321,324,326,338,339,364,],[-75,-86,-74,-76,-87,-89,-88,-99,147,-102,-74,-138,-143,-97,-98,191,-101,-133,-100,-99,-102,-97,-98,-101,-100,-97,-98,-101,-100,147,-97,-98,-101,-100,-142,-140,-97,-100,-141,-139,-74,-36,-82,-77,-80,-100,-132,-126,147,191,-130,-124,147,191,-131,-125,-137,-135,-101,-100,-101,-100,147,191,147,191,-145,-144,-103,-100,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,-99,-102,-97,-98,-101,-100,-101,-100,-35,]),'-':([8,39,40,41,42,44,45,47,49,51,53,54,55,58,59,60,61,62,63,64,67,72,75,78,79,80,83,87,89,90,91,92,94,96,98,101,104,107,108,109,110,114,115,117,118,127,128,129,130,131,132,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,164,165,166,168,170,171,172,173,174,175,176,178,179,180,181,182,183,186,189,190,191,192,193,198,204,205,206,207,210,211,212,218,219,220,221,222,223,224,225,226,227,228,229,230,231,234,235,247,249,252,253,254,255,256,257,258,261,265,266,280,282,285,286,287,288,289,290,293,294,295,296,302,303,304,305,306,311,313,314,317,320,321,324,325,326,327,328,331,335,336,338,339,344,349,350,352,353,355,364,],[-75,82,82,82,82,-86,-74,82,-76,82,82,82,-87,82,-89,82,82,-88,82,82,82,-99,148,-102,157,82,-74,-138,-143,82,82,-97,-98,-120,-101,-133,-100,-99,-102,157,82,-97,-98,-101,-100,157,82,-97,-98,-101,-100,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,148,157,82,-97,-98,-101,-100,-142,82,-140,-97,-100,-141,-139,82,82,82,82,82,82,-74,82,82,82,82,82,82,82,-36,82,-82,-77,-80,82,-100,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,82,-101,-100,-101,-100,-116,-112,-117,-113,-145,82,-144,-103,82,-100,82,82,-129,-123,-127,-121,-128,-122,-136,-134,82,82,-81,82,82,-78,-79,82,-99,157,-102,-97,-98,-101,82,-100,82,82,82,82,82,-101,-100,82,82,82,82,82,82,-35,]),',':([8,23,44,45,49,55,59,62,69,70,71,72,73,74,76,78,79,83,84,85,86,87,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,114,115,116,117,118,130,131,133,170,172,173,174,175,176,184,194,195,196,197,205,207,210,211,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,249,250,252,253,254,255,256,258,261,262,263,264,267,268,269,270,271,272,274,275,276,277,278,279,281,283,285,286,287,288,289,290,293,294,302,305,306,307,333,334,348,354,364,],[-75,-33,-86,-74,-76,-87,-89,-88,-164,-34,-60,-32,-187,-185,-169,-52,-46,-74,-56,-49,-47,-138,-143,-50,-48,-51,189,-120,-53,-55,-190,-133,-57,-178,-54,-59,-147,-99,-102,-179,-182,-183,-146,-149,-148,-98,-101,212,-142,-140,-97,-100,-141,-139,280,-188,-149,-148,-189,-36,-82,-77,-80,-37,-165,-167,-148,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-73,-71,-70,-69,-67,-68,-72,-116,-112,-117,-113,-145,-144,-103,-150,-58,-191,-64,-63,-62,-61,-160,-162,-173,-177,-172,-176,-186,-184,-43,-83,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,344,355,-38,-65,-66,-35,]),'/':([8,44,45,49,55,59,62,72,75,78,83,87,89,92,94,96,98,101,104,107,108,114,115,117,118,129,130,131,132,158,164,165,166,168,170,172,173,174,175,176,186,205,207,210,211,218,219,220,221,222,223,224,225,226,227,228,229,230,234,235,247,249,252,253,254,255,256,258,261,266,285,286,287,288,289,290,293,294,302,305,306,313,317,320,321,324,326,338,339,364,],[-75,-86,-74,-76,-87,-89,-88,-99,149,-102,-74,-138,-143,-97,-98,192,-101,-133,-100,-99,-102,-97,-98,-101,-100,-97,-98,-101,-100,149,-97,-98,-101,-100,-142,-140,-97,-100,-141,-139,-74,-36,-82,-77,-80,-100,-132,-126,149,192,-130,-124,149,192,-131,-125,-137,-135,-101,-100,-101,-100,149,192,149,192,-145,-144,-103,-100,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,-99,-102,-97,-98,-101,-100,-101,-100,-35,]),'.':([20,83,186,],[50,177,177,]),'MULEQ':([8,20,31,49,123,207,210,211,302,305,306,],[-75,-74,63,-76,63,-82,-77,-80,-81,-78,-79,]),'BOOL':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,100,110,128,141,144,153,154,155,161,171,178,179,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[97,116,97,116,97,97,97,97,97,97,97,97,116,116,97,97,116,116,116,116,116,116,116,116,116,116,116,116,97,116,116,97,97,116,323,323,97,97,323,323,116,116,116,116,323,323,116,323,323,97,323,116,323,116,97,]),';':([0,1,2,3,5,8,9,10,11,14,15,19,21,23,25,27,28,30,32,35,36,37,38,43,44,45,46,48,49,52,55,56,57,59,62,69,70,71,72,73,74,76,78,79,83,84,85,86,87,89,92,93,94,96,97,98,99,101,102,103,104,105,106,107,108,109,111,112,114,115,116,117,118,121,122,124,130,131,135,136,137,138,139,140,143,170,172,173,174,175,176,194,195,196,197,201,202,203,205,207,210,211,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,249,250,252,253,254,255,256,258,261,262,263,264,267,268,269,270,271,272,274,275,276,277,278,279,281,283,285,286,287,288,289,290,293,294,298,299,300,301,302,305,306,308,334,341,346,347,348,354,357,358,364,371,],[11,11,38,-34,-32,-75,-11,-10,-19,43,-31,48,52,-33,-30,-4,-3,11,11,-8,11,11,-18,-15,-86,-74,-42,-16,-76,-17,-87,-13,-7,-89,-88,-164,-34,-60,-32,-187,-185,-169,-52,-46,-74,-56,-49,-47,-138,-143,-50,-48,-51,-120,-53,-55,-190,-133,-57,-178,-54,-59,-147,-99,-102,-179,-23,-22,-182,-183,-146,-149,-148,-24,204,-25,-98,-101,-94,-90,-93,-95,-91,-92,-9,-142,-140,-97,-100,-141,-139,-188,-149,-148,-189,-20,-39,11,-36,-82,-77,-80,-37,11,-165,-167,-148,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-73,-71,-70,-69,-67,-68,-72,-116,-112,-117,-113,-145,-144,-103,-150,-58,-191,-64,-63,-62,-61,-160,-162,-173,-177,-172,-176,-186,-184,-43,-83,-129,-123,-127,-121,-128,-122,-136,-134,-5,-4,342,-96,-81,-78,-79,346,-38,11,-14,11,-65,-66,-12,-6,-35,-21,]),':':([8,44,45,49,55,59,62,69,73,74,76,83,87,89,96,99,101,103,106,107,108,109,114,115,116,117,118,130,131,170,172,173,174,175,176,186,194,195,196,197,205,207,210,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,249,250,251,252,253,254,255,256,258,261,262,264,267,268,269,270,271,272,273,274,275,276,277,278,279,281,283,285,286,287,288,289,290,293,294,302,305,306,312,313,314,315,316,317,318,319,320,321,322,323,324,326,329,330,334,340,348,351,354,356,364,366,367,368,369,],[-75,-86,-74,-76,-87,-89,-88,-164,-187,-185,-169,-74,-138,-143,-120,-190,-133,-178,-147,-99,-102,-179,-182,-183,-146,-149,-148,-98,-101,-142,-140,-97,-100,-141,-139,282,-188,-149,-148,-189,-36,-82,-77,-80,-165,-167,-148,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-73,-71,-70,-69,-67,-68,-72,311,-116,-112,-117,-113,-145,-144,-103,-150,-191,-64,-63,-62,-61,-160,-162,331,-173,-177,-172,-176,-186,-184,-43,-83,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,-154,-108,-110,349,-111,-109,-155,350,-106,-107,-156,-153,-67,-68,352,353,-38,-156,-65,-156,-66,-156,-35,-151,-104,-152,-105,]),'=':([8,20,31,49,123,126,207,210,211,302,305,306,],[-75,-74,61,-76,61,206,-82,-77,-80,-81,-78,-79,]),'<':([8,44,45,49,55,59,62,79,83,87,88,89,92,94,96,98,101,104,107,108,109,114,115,117,118,130,131,160,164,165,166,168,170,172,173,174,175,176,186,205,207,210,211,218,219,220,221,222,223,224,225,226,227,228,229,230,233,234,235,237,247,249,252,253,254,255,256,258,261,266,275,277,285,286,287,288,289,290,293,294,302,305,306,314,320,321,324,326,338,339,364,],[-75,-86,-74,-76,-87,-89,-88,-179,-74,-138,182,-143,-182,-183,-120,-180,-133,-181,-99,-102,-179,-182,-183,-180,-181,-98,-101,-179,-182,-183,-180,-181,-142,-140,-97,-100,-141,-139,-74,-36,-82,-77,-80,-181,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,182,-180,-181,182,-180,-181,-116,-112,-117,-113,-145,-144,-103,-181,182,182,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,-179,-182,-183,-180,-181,-180,-181,-35,]),'DIVEQ':([8,20,31,49,123,207,210,211,302,305,306,],[-75,-74,64,-76,64,-82,-77,-80,-81,-78,-79,]),'$end{':([1,30,37,39,41,47,53,54,58,60,61,63,64,90,91,155,179,189,201,203,206,212,215,257,265,280,282,311,331,341,344,347,355,371,],[36,36,36,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-20,36,91,91,36,91,91,91,91,91,91,36,91,36,91,-21,]),'>':([8,44,45,49,55,59,62,79,83,87,88,89,92,94,96,98,101,104,107,108,109,114,115,117,118,130,131,160,164,165,166,168,170,172,173,174,175,176,186,205,207,210,211,218,219,220,221,222,223,224,225,226,227,228,229,230,233,234,235,237,247,249,252,253,254,255,256,258,261,266,275,277,285,286,287,288,289,290,293,294,302,305,306,314,320,321,324,326,338,339,364,],[-75,-86,-74,-76,-87,-89,-88,-179,-74,-138,183,-143,-182,-183,-120,-180,-133,-181,-99,-102,-179,-182,-183,-180,-181,-98,-101,-179,-182,-183,-180,-181,-142,-140,-97,-100,-141,-139,-74,-36,-82,-77,-80,-181,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,183,-180,-181,183,-180,-181,-116,-112,-117,-113,-145,-144,-103,-181,183,183,-129,-123,-127,-121,-128,-122,-136,-134,-81,-78,-79,-179,-182,-183,-180,-181,-180,-181,-35,]),'}':([8,9,10,11,13,23,27,28,32,35,36,38,43,44,45,48,49,52,55,56,57,59,62,65,68,69,70,71,72,73,74,76,78,79,83,84,85,86,87,89,92,93,94,96,97,98,99,101,102,103,104,105,106,107,108,109,114,115,116,117,118,130,131,143,170,172,173,174,175,176,186,187,188,194,195,196,197,205,207,210,211,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,249,250,252,253,254,255,256,258,261,262,263,264,267,268,269,270,271,272,274,275,276,277,278,279,281,283,285,286,287,288,289,290,293,294,298,299,302,305,306,334,346,348,354,357,358,364,370,],[-75,-11,-10,-19,-2,-33,-4,-3,-42,-8,-42,-18,-15,-86,-74,-16,-76,-17,-87,-13,-7,-89,-88,-1,143,-164,-34,-60,-32,-187,-185,-169,-52,-46,-74,-56,-49,-47,-138,-143,-50,-48,-51,-120,-53,-55,-190,-133,-57,-178,-54,-59,-147,-99,-102,-179,-182,-183,-146,-149,-148,-98,-101,-9,-142,-140,-97,-100,-141,-139,-74,283,-85,-188,-149,-148,-189,-36,-82,-77,-80,-37,-165,-167,-148,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,-73,-71,-70,-69,-67,-68,-72,-116,-112,-117,-113,-145,-144,-103,-150,-58,-191,-64,-63,-62,-61,-160,-162,-173,-177,-172,-176,-186,-184,-43,-83,-129,-123,-127,-121,-128,-122,-136,-134,-5,-4,-81,-78,-79,-38,-14,-65,-66,-12,-6,-35,-84,]),'OR':([8,44,45,49,55,59,62,69,70,73,74,76,77,83,86,87,89,96,97,98,99,101,103,104,106,107,108,109,111,112,114,115,116,117,118,130,131,159,166,168,169,170,172,173,174,175,176,186,194,195,196,197,199,200,205,207,208,209,210,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,244,247,248,249,252,253,254,255,256,258,259,260,261,262,264,266,271,272,274,275,276,277,278,279,285,286,287,288,289,290,291,292,293,294,302,305,306,310,312,322,323,324,326,334,337,338,339,340,351,356,364,],[-75,-86,-74,-76,-87,-89,-88,-164,-147,-187,-185,-169,154,-74,178,-138,-143,-120,-146,-149,-190,-133,-178,-148,-147,-99,-102,-179,154,178,-182,-183,-146,-149,-148,-98,-101,154,-149,-148,178,-142,-140,-97,-100,-141,-139,-74,-188,-149,-148,-189,154,178,-36,-82,154,178,-77,-80,-165,-167,-148,-132,-126,-118,-114,-130,-124,-119,-115,-131,-125,-137,-135,-170,-174,-180,-181,-171,-175,-166,-168,-161,-163,154,-149,178,-148,-116,-112,-117,-113,-145,-144,154,178,-103,-150,-191,-148,-160,-162,-173,-177,-172,-176,-186,-184,-129,-123,-127,-121,-128,-122,154,178,-136,-134,-81,-78,-79,178,-147,178,-146,-149,-148,-38,154,-149,-148,178,178,178,-35,]),'MENOSMENOS':([0,1,8,9,10,11,20,27,28,30,31,32,35,36,37,38,39,40,41,42,43,45,47,48,49,51,52,53,54,56,57,58,60,61,63,64,67,80,81,82,83,90,91,100,104,110,118,128,132,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,168,171,174,178,179,180,181,182,183,186,189,190,191,192,193,196,198,201,203,204,206,207,210,211,212,215,218,231,235,249,257,265,266,280,282,295,296,298,299,302,303,304,305,306,311,325,326,327,328,331,335,336,339,341,342,344,346,347,349,350,352,353,355,357,358,371,],[16,16,-75,-11,-10,-19,-74,-4,-3,16,59,16,-8,16,16,-18,16,16,16,16,-15,-74,16,-16,-76,16,-17,16,16,-13,-7,16,16,16,16,16,16,16,16,16,-74,16,16,16,59,16,59,16,59,16,-9,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,59,16,59,16,16,16,16,16,16,-74,16,16,16,16,16,59,16,-20,16,16,16,-82,-77,-80,16,16,59,16,59,59,16,16,59,16,16,16,16,-5,-4,-81,16,16,-78,-79,16,16,59,16,16,16,16,16,59,16,16,16,-14,16,16,16,16,16,16,-12,-6,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'and':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,110,128,141,154,155,161,171,178,179,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,240,69,69,69,271,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'primParam':([46,],[122,]),'funcBool':([0,1,30,32,36,37,39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,100,110,128,141,144,153,154,155,161,171,178,179,189,193,203,204,206,212,215,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,341,342,344,347,349,350,352,353,355,],[3,3,3,3,3,3,70,106,70,106,70,70,70,70,70,70,70,70,106,106,70,70,106,106,106,106,106,106,106,106,106,106,106,106,70,106,3,106,70,70,3,106,312,312,70,70,312,312,106,106,106,106,312,312,106,312,312,3,3,70,3,312,106,312,106,70,]),'funcInt':([0,1,30,32,36,37,39,40,41,42,47,51,53,54,58,60,61,63,64,67,80,81,82,90,91,110,128,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,198,203,204,206,212,215,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,341,342,344,347,349,350,352,353,355,],[5,5,5,5,5,5,72,107,72,107,72,107,72,72,72,72,72,72,72,107,107,107,107,72,72,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,72,107,107,107,107,107,5,107,72,72,5,107,313,313,72,72,313,313,313,313,107,107,313,313,107,107,107,5,5,72,5,107,313,107,313,72,]),'bloqueCerrado':([1,30,37,203,215,341,347,],[33,56,56,297,309,357,357,]),'elem':([90,280,],[185,332,]),'menor':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,110,128,141,144,151,152,153,154,155,161,171,178,179,180,181,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'mayor':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,110,128,141,144,151,152,153,154,155,161,171,178,179,180,181,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,232,236,103,103,103,103,103,103,103,274,276,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'valoresMat':([39,40,41,42,47,51,53,54,58,60,61,63,64,67,80,81,82,90,91,110,128,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,198,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,158,170,175,75,75,158,158,75,75,219,221,223,225,227,229,75,75,75,75,75,252,254,158,158,75,75,75,75,75,75,75,285,287,289,75,293,75,75,75,158,75,75,75,75,75,75,75,75,75,158,75,75,75,75,75,75,75,75,75,75,75,]),'loop':([0,1,30,32,36,37,203,215,341,347,],[30,37,30,30,30,37,30,37,30,37,]),'eq':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,110,128,141,144,153,154,155,161,171,178,179,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,216,238,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'vecVal':([0,1,16,29,30,32,36,37,39,40,41,42,46,47,51,53,54,58,60,61,63,64,67,80,81,82,90,91,100,110,128,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,198,203,204,206,212,215,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,341,342,344,347,349,350,352,353,355,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'sentencia':([0,1,30,32,36,37,203,215,341,347,],[10,10,10,10,10,10,10,10,10,10,]),'eMat':([39,40,41,42,47,51,53,54,58,60,61,63,64,67,80,90,91,110,128,141,144,151,152,153,154,155,161,171,178,179,180,181,182,183,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[79,109,79,109,79,127,79,79,79,79,79,79,79,109,160,79,79,160,160,109,109,109,109,109,109,109,160,160,109,109,109,109,109,109,79,109,109,79,79,160,314,314,79,79,314,314,314,314,109,160,314,314,109,109,109,79,109,314,109,314,79,]),'atributos':([39,41,47,53,54,58,60,61,63,64,90,91,155,179,189,206,212,257,265,280,282,311,331,344,355,],[105,105,105,105,105,105,105,105,105,105,105,105,250,250,105,105,105,250,250,105,105,250,250,105,105,]),'param':([307,],[343,]),'valoresBool':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,100,110,128,141,144,153,154,155,161,171,178,179,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[77,111,77,111,77,77,77,77,77,77,77,77,111,159,77,77,197,199,208,111,217,239,241,244,259,208,272,244,77,291,111,77,77,208,159,159,77,77,337,337,208,208,244,199,259,259,244,291,291,77,291,208,291,208,77,]),'ternarioMat':([80,110,128,161,171,231,257,265,295,296,303,304,325,327,328,350,353,],[162,162,162,162,162,162,316,316,316,316,316,316,162,316,316,316,316,]),'vec':([39,41,47,53,54,58,60,61,63,64,90,91,155,179,189,206,212,257,265,280,282,311,331,344,355,],[84,84,84,84,84,84,84,84,84,84,84,84,245,245,84,84,84,245,245,84,84,245,245,84,84,]),'paren':([39,40,41,42,47,51,53,54,58,60,61,63,64,67,80,81,82,90,91,110,128,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,198,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,172,176,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'tercerParam':([342,],[360,]),'reg':([39,41,47,53,54,58,60,61,63,64,90,91,155,179,189,206,212,257,265,280,282,311,331,344,355,],[85,85,85,85,85,85,85,85,85,85,85,85,246,246,85,85,85,246,246,85,85,246,246,85,85,]),'empty':([0,32,36,46,307,342,],[13,13,13,124,345,362,]),'iSing':([39,40,41,42,47,51,53,54,58,60,61,63,64,67,80,90,91,110,128,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,198,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,230,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,294,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'varAsig':([0,1,30,32,36,37,46,203,215,341,342,347,],[21,21,21,21,21,21,121,21,21,21,361,21,]),'expBool':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,110,128,141,155,161,171,179,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[86,112,86,112,86,86,86,86,86,86,86,86,112,169,86,86,200,209,112,248,260,209,248,86,292,112,86,86,310,322,322,86,86,340,340,209,209,248,200,351,351,248,356,356,86,356,209,356,209,86,]),'ternarioBool':([80,110,161,193,257,265,295,296,325,327,328,335,336,349,352,],[163,163,163,163,318,318,318,318,163,318,318,318,318,318,318,]),'tCompare':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,110,128,141,144,151,152,153,154,155,161,171,178,179,180,181,182,183,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,233,237,88,88,88,88,88,88,88,275,277,278,279,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'valoresTernarioMat':([257,265,295,296,303,304,327,328,350,353,],[319,330,319,330,319,330,319,330,367,369,]),'campos':([91,355,],[187,370,]),'func':([0,1,30,32,36,37,203,215,341,342,347,],[19,19,19,19,19,19,19,19,19,359,19,]),'not':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,100,110,128,141,144,151,152,153,154,155,161,171,178,179,180,181,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,194,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'valoresAsig':([58,60,61,63,64,206,],[135,137,138,139,140,301,]),'funcVoid':([0,1,30,32,36,37,203,215,341,342,347,],[15,15,15,15,15,15,15,15,15,15,15,]),'cosaBooleana':([40,42,67,141,204,],[113,120,142,214,300,]),'valoresCampos':([177,],[270,]),'g':([0,32,36,],[22,65,68,]),'funcString':([0,1,30,32,36,37,39,41,47,53,54,58,60,61,63,64,90,91,189,203,206,212,215,280,282,341,342,344,347,355,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'funcReturn':([0,1,30,32,36,37,39,41,47,53,54,58,60,61,63,64,90,91,189,203,206,212,215,280,282,341,342,344,347,355,],[25,25,25,25,25,25,93,93,93,93,93,93,93,93,93,93,93,93,93,25,93,93,25,93,93,25,25,93,25,93,]),'m':([20,45,83,186,207,210,211,],[49,49,49,49,302,305,306,]),'valores':([39,41,47,53,54,58,60,61,63,64,90,91,189,206,212,280,282,344,355,],[95,119,125,133,134,136,136,136,136,136,184,188,284,136,307,184,333,365,188,]),'lCerrada':([0,1,30,32,36,37,203,215,341,347,],[27,35,35,27,27,35,299,35,35,35,]),'p':([39,40,41,42,47,51,53,54,58,60,61,63,64,67,80,90,91,110,128,141,144,146,148,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,222,226,96,96,96,96,96,253,255,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'lAbierta':([0,30,32,36,203,341,],[28,57,28,28,28,358,]),'varsOps':([0,1,30,32,36,37,39,40,41,42,47,51,53,54,58,60,61,63,64,67,80,81,82,90,91,100,110,128,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,198,203,204,206,212,215,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,341,342,344,347,349,350,352,353,355,],[14,14,14,14,14,14,98,117,98,117,98,131,98,98,98,98,98,98,98,117,166,131,131,98,98,195,166,166,117,117,131,131,131,131,131,131,234,234,117,117,247,131,131,166,166,117,247,234,234,234,234,98,131,131,131,117,131,14,117,98,98,14,166,324,324,98,98,338,338,166,166,247,166,166,166,247,117,117,14,363,98,14,117,166,117,166,98,]),'exp':([39,40,41,42,47,51,53,54,58,60,61,63,64,67,80,90,91,110,128,141,144,145,146,147,148,149,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,220,101,224,101,228,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,286,288,290,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'valoresTernarioBool':([257,265,295,296,327,328,335,336,349,352,],[315,329,315,329,315,329,315,329,366,368,]),'ternarioVars':([39,41,47,53,54,58,60,61,63,64,80,90,91,155,179,189,206,212,257,265,280,282,311,331,344,355,],[102,102,102,102,102,102,102,102,102,102,167,102,102,243,243,102,102,102,243,243,102,102,243,243,102,102,]),'valoresTernarioVars':([155,179,257,265,311,331,],[251,273,251,273,348,354,]),'varYVals':([0,1,16,29,30,32,36,37,39,40,41,42,46,47,51,53,54,58,60,61,63,64,67,80,81,82,90,91,100,110,128,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,171,178,179,180,181,182,183,189,190,191,192,193,198,203,204,206,212,215,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,341,342,344,347,349,350,352,353,355,],[31,31,44,55,31,31,31,31,104,118,104,118,123,104,132,104,104,104,104,104,104,104,118,168,174,174,104,104,196,168,168,118,218,174,174,174,174,174,174,235,235,218,118,249,174,174,168,266,118,249,235,235,235,235,104,174,174,174,118,174,31,118,104,104,31,168,326,326,104,104,339,339,168,168,249,168,168,168,249,118,118,31,31,104,31,118,168,118,168,104,]),'parenBool':([39,40,41,42,47,53,54,58,60,61,63,64,67,80,90,91,100,110,128,141,144,151,152,153,154,155,161,171,178,179,180,181,189,193,204,206,212,231,257,265,280,282,295,296,303,304,311,325,327,328,331,335,336,344,349,350,352,353,355,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'linea':([0,32,36,203,],[32,32,32,298,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> g","S'",1,None,None,None),
  ('g -> linea g','g',2,'p_g1','parser_rules.py',21),
  ('g -> empty','g',1,'p_g3','parser_rules.py',24),
  ('linea -> lAbierta','linea',1,'p_linea','parser_rules.py',27),
  ('linea -> lCerrada','linea',1,'p_linea','parser_rules.py',28),
  ('lAbierta -> IF ( cosaBooleana ) linea','lAbierta',5,'p_lAbierta','parser_rules.py',31),
  ('lAbierta -> IF ( cosaBooleana ) bloqueCerrado ELSE lAbierta','lAbierta',7,'p_lAbierta','parser_rules.py',32),
  ('lAbierta -> loop lAbierta','lAbierta',2,'p_lAbierta','parser_rules.py',33),
  ('bloqueCerrado -> lCerrada','bloqueCerrado',1,'p_bloqueCerrado','parser_rules.py',36),
  ('bloqueCerrado -> { g }','bloqueCerrado',3,'p_bloqueCerrado','parser_rules.py',37),
  ('lCerrada -> sentencia','lCerrada',1,'p_lCerrada','parser_rules.py',40),
  ('lCerrada -> COMMENT','lCerrada',1,'p_lCerrada','parser_rules.py',41),
  ('lCerrada -> IF ( cosaBooleana ) bloqueCerrado ELSE bloqueCerrado','lCerrada',7,'p_lCerrada','parser_rules.py',42),
  ('lCerrada -> loop bloqueCerrado','lCerrada',2,'p_lCerrada','parser_rules.py',43),
  ('lCerrada -> DO bloqueCerrado WHILE ( cosaBooleana ) ;','lCerrada',7,'p_lCerrada','parser_rules.py',44),
  ('sentencia -> varsOps ;','sentencia',2,'p_sentencia1','parser_rules.py',48),
  ('sentencia -> func ;','sentencia',2,'p_sentencia2','parser_rules.py',50),
  ('sentencia -> varAsig ;','sentencia',2,'p_sentencia3','parser_rules.py',52),
  ('sentencia -> RETURN ;','sentencia',2,'p_sentencia4','parser_rules.py',54),
  ('sentencia -> ;','sentencia',1,'p_sentencia5','parser_rules.py',56),
  ('loop -> WHILE ( cosaBooleana )','loop',4,'p_loop1','parser_rules.py',59),
  ('loop -> FOR ( primParam ; cosaBooleana ; tercerParam )','loop',8,'p_loop3','parser_rules.py',63),
  ('cosaBooleana -> expBool','cosaBooleana',1,'p_cosaBooleana','parser_rules.py',71),
  ('cosaBooleana -> valoresBool','cosaBooleana',1,'p_cosaBooleana','parser_rules.py',72),
  ('primParam -> varAsig','primParam',1,'p_primParam','parser_rules.py',75),
  ('primParam -> empty','primParam',1,'p_primParam','parser_rules.py',76),
  ('tercerParam -> varsOps','tercerParam',1,'p_tercerParam','parser_rules.py',79),
  ('tercerParam -> varAsig','tercerParam',1,'p_tercerParam','parser_rules.py',80),
  ('tercerParam -> func','tercerParam',1,'p_tercerParam','parser_rules.py',81),
  ('tercerParam -> empty','tercerParam',1,'p_tercerParam','parser_rules.py',82),
  ('func -> funcReturn','func',1,'p_func1','parser_rules.py',93),
  ('func -> funcVoid','func',1,'p_func2','parser_rules.py',96),
  ('funcReturn -> funcInt','funcReturn',1,'p_funcReturn1','parser_rules.py',100),
  ('funcReturn -> funcString','funcReturn',1,'p_funcReturn2','parser_rules.py',103),
  ('funcReturn -> funcBool','funcReturn',1,'p_funcReturn3','parser_rules.py',106),
  ('funcInt -> MULTIESCALAR ( valores , valores param )','funcInt',7,'p_funcInt1','parser_rules.py',114),
  ('funcInt -> LENGTH ( valores )','funcInt',4,'p_funcInt2','parser_rules.py',118),
  ('funcString -> CAPITALIZAR ( valores )','funcString',4,'p_funcString','parser_rules.py',124),
  ('funcBool -> COLINEALES ( valores , valores )','funcBool',6,'p_funcBool','parser_rules.py',128),
  ('funcVoid -> PRINT ( valores )','funcVoid',4,'p_funcVoid','parser_rules.py',132),
  ('param -> , valores','param',2,'p_param1','parser_rules.py',137),
  ('param -> empty','param',1,'p_param2','parser_rules.py',140),
  ('empty -> <empty>','empty',0,'p_empty','parser_rules.py',143),
  ('vec -> [ elem ]','vec',3,'p_vec1','parser_rules.py',150),
  ('elem -> valores , elem','elem',3,'p_elem1','parser_rules.py',153),
  ('elem -> valores','elem',1,'p_elem2','parser_rules.py',155),
  ('valores -> eMat','valores',1,'p_valores','parser_rules.py',158),
  ('valores -> expBool','valores',1,'p_valores','parser_rules.py',159),
  ('valores -> funcReturn','valores',1,'p_valores','parser_rules.py',160),
  ('valores -> reg','valores',1,'p_valores','parser_rules.py',161),
  ('valores -> INT','valores',1,'p_valores','parser_rules.py',162),
  ('valores -> FLOAT','valores',1,'p_valores','parser_rules.py',163),
  ('valores -> STRING','valores',1,'p_valores','parser_rules.py',164),
  ('valores -> BOOL','valores',1,'p_valores','parser_rules.py',165),
  ('valores -> varYVals','valores',1,'p_valores','parser_rules.py',166),
  ('valores -> varsOps','valores',1,'p_valores','parser_rules.py',167),
  ('valores -> vec','valores',1,'p_valores','parser_rules.py',168),
  ('valores -> ternarioVars','valores',1,'p_valores','parser_rules.py',169),
  ('valores -> ( ternarioVars )','valores',3,'p_valores','parser_rules.py',170),
  ('valores -> atributos','valores',1,'p_valores','parser_rules.py',171),
  ('valores -> RES','valores',1,'p_valores','parser_rules.py',172),
  ('atributos -> ID . valoresCampos','atributos',3,'p_atributos','parser_rules.py',175),
  ('valoresCampos -> ID','valoresCampos',1,'p_valoresCampos','parser_rules.py',178),
  ('valoresCampos -> END','valoresCampos',1,'p_valoresCampos','parser_rules.py',179),
  ('valoresCampos -> BEGIN','valoresCampos',1,'p_valoresCampos','parser_rules.py',180),
  ('ternarioVars -> valoresBool ? valoresTernarioVars : valoresTernarioVars','ternarioVars',5,'p_ternarioVars','parser_rules.py',183),
  ('ternarioVars -> expBool ? valoresTernarioVars : valoresTernarioVars','ternarioVars',5,'p_ternarioVars','parser_rules.py',184),
  ('valoresTernarioVars -> varsOps','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',189),
  ('valoresTernarioVars -> varYVals','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',190),
  ('valoresTernarioVars -> reg','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',191),
  ('valoresTernarioVars -> vec','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',192),
  ('valoresTernarioVars -> ternarioVars','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',193),
  ('valoresTernarioVars -> atributos','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',194),
  ('valoresTernarioVars -> RES','valoresTernarioVars',1,'p_valoresTernarioVars','parser_rules.py',195),
  ('varYVals -> ID','varYVals',1,'p_varYVals1','parser_rules.py',198),
  ('varYVals -> vecVal','varYVals',1,'p_varYVals2','parser_rules.py',200),
  ('vecVal -> ID m','vecVal',2,'p_vecVal1','parser_rules.py',204),
  ('m -> [ INT ]','m',3,'p_m1','parser_rules.py',210),
  ('m -> [ INT ] m','m',4,'p_m2','parser_rules.py',212),
  ('m -> [ varYVals ] m','m',4,'p_m3','parser_rules.py',214),
  ('m -> [ varYVals ]','m',3,'p_m4','parser_rules.py',216),
  ('m -> [ eMat ] m','m',4,'p_m5','parser_rules.py',219),
  ('m -> [ eMat ]','m',3,'p_m6','parser_rules.py',221),
  ('reg -> { campos }','reg',3,'p_reg','parser_rules.py',227),
  ('campos -> ID : valores , campos','campos',5,'p_campos1','parser_rules.py',233),
  ('campos -> valores','campos',1,'p_campos2','parser_rules.py',235),
  ('varsOps -> MENOSMENOS varYVals','varsOps',2,'p_varsOps1','parser_rules.py',242),
  ('varsOps -> MASMAS varYVals','varsOps',2,'p_varsOps1','parser_rules.py',243),
  ('varsOps -> varYVals MASMAS','varsOps',2,'p_varsOps1','parser_rules.py',244),
  ('varsOps -> varYVals MENOSMENOS','varsOps',2,'p_varsOps1','parser_rules.py',245),
  ('valoresAsig -> valores','valoresAsig',1,'p_valoresAsig','parser_rules.py',253),
  ('varAsig -> varYVals MULEQ valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',258),
  ('varAsig -> varYVals DIVEQ valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',259),
  ('varAsig -> varYVals MASEQ valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',260),
  ('varAsig -> varYVals MENOSEQ valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',261),
  ('varAsig -> varYVals = valoresAsig','varAsig',3,'p_varAsig','parser_rules.py',262),
  ('varAsig -> ID . ID = valoresAsig','varAsig',5,'p_varAsig','parser_rules.py',263),
  ('valoresMat -> INT','valoresMat',1,'p_valoresMat','parser_rules.py',272),
  ('valoresMat -> FLOAT','valoresMat',1,'p_valoresMat','parser_rules.py',273),
  ('valoresMat -> funcInt','valoresMat',1,'p_valoresMat','parser_rules.py',274),
  ('valoresMat -> varYVals','valoresMat',1,'p_valoresMat','parser_rules.py',275),
  ('valoresMat -> varsOps','valoresMat',1,'p_valoresMat','parser_rules.py',276),
  ('valoresMat -> STRING','valoresMat',1,'p_valoresMat','parser_rules.py',277),
  ('valoresMat -> ( ternarioMat )','valoresMat',3,'p_valoresMat','parser_rules.py',278),
  ('ternarioMat -> valoresBool ? valoresTernarioMat : valoresTernarioMat','ternarioMat',5,'p_ternarioMat','parser_rules.py',281),
  ('ternarioMat -> expBool ? valoresTernarioMat : valoresTernarioMat','ternarioMat',5,'p_ternarioMat','parser_rules.py',282),
  ('valoresTernarioMat -> INT','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',286),
  ('valoresTernarioMat -> FLOAT','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',287),
  ('valoresTernarioMat -> funcInt','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',288),
  ('valoresTernarioMat -> STRING','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',289),
  ('valoresTernarioMat -> eMat','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',290),
  ('valoresTernarioMat -> ternarioMat','valoresTernarioMat',1,'p_valoresTernarioMat','parser_rules.py',291),
  ('eMat -> eMat + p','eMat',3,'p_eMat','parser_rules.py',295),
  ('eMat -> eMat - p','eMat',3,'p_eMat','parser_rules.py',296),
  ('eMat -> valoresMat + p','eMat',3,'p_eMat','parser_rules.py',297),
  ('eMat -> valoresMat - p','eMat',3,'p_eMat','parser_rules.py',298),
  ('eMat -> eMat + valoresMat','eMat',3,'p_eMat','parser_rules.py',299),
  ('eMat -> eMat - valoresMat','eMat',3,'p_eMat','parser_rules.py',300),
  ('eMat -> valoresMat + valoresMat','eMat',3,'p_eMat','parser_rules.py',301),
  ('eMat -> valoresMat - valoresMat','eMat',3,'p_eMat','parser_rules.py',302),
  ('eMat -> p','eMat',1,'p_eMat','parser_rules.py',303),
  ('p -> p * exp','p',3,'p_p','parser_rules.py',308),
  ('p -> p / exp','p',3,'p_p','parser_rules.py',309),
  ('p -> p % exp','p',3,'p_p','parser_rules.py',310),
  ('p -> valoresMat * exp','p',3,'p_p','parser_rules.py',311),
  ('p -> valoresMat / exp','p',3,'p_p','parser_rules.py',312),
  ('p -> valoresMat % exp','p',3,'p_p','parser_rules.py',313),
  ('p -> p * valoresMat','p',3,'p_p','parser_rules.py',314),
  ('p -> p / valoresMat','p',3,'p_p','parser_rules.py',315),
  ('p -> p % valoresMat','p',3,'p_p','parser_rules.py',316),
  ('p -> valoresMat * valoresMat','p',3,'p_p','parser_rules.py',317),
  ('p -> valoresMat / valoresMat','p',3,'p_p','parser_rules.py',318),
  ('p -> valoresMat % valoresMat','p',3,'p_p','parser_rules.py',319),
  ('p -> exp','p',1,'p_p','parser_rules.py',320),
  ('exp -> exp ^ iSing','exp',3,'p_exp','parser_rules.py',325),
  ('exp -> valoresMat ^ iSing','exp',3,'p_exp','parser_rules.py',326),
  ('exp -> exp ^ valoresMat','exp',3,'p_exp','parser_rules.py',327),
  ('exp -> valoresMat ^ valoresMat','exp',3,'p_exp','parser_rules.py',328),
  ('exp -> iSing','exp',1,'p_exp','parser_rules.py',329),
  ('iSing -> - paren','iSing',2,'p_iSing','parser_rules.py',333),
  ('iSing -> + paren','iSing',2,'p_iSing','parser_rules.py',334),
  ('iSing -> - valoresMat','iSing',2,'p_iSing','parser_rules.py',335),
  ('iSing -> + valoresMat','iSing',2,'p_iSing','parser_rules.py',336),
  ('iSing -> paren','iSing',1,'p_iSing','parser_rules.py',337),
  ('paren -> ( eMat )','paren',3,'p_paren1','parser_rules.py',342),
  ('paren -> ( valoresMat )','paren',3,'p_paren1','parser_rules.py',343),
  ('valoresBool -> BOOL','valoresBool',1,'p_valoresBool','parser_rules.py',357),
  ('valoresBool -> funcBool','valoresBool',1,'p_valoresBool','parser_rules.py',358),
  ('valoresBool -> varYVals','valoresBool',1,'p_valoresBool','parser_rules.py',359),
  ('valoresBool -> varsOps','valoresBool',1,'p_valoresBool','parser_rules.py',360),
  ('valoresBool -> ( ternarioBool )','valoresBool',3,'p_valoresBool','parser_rules.py',361),
  ('ternarioBool -> valoresBool ? valoresTernarioBool : valoresTernarioBool','ternarioBool',5,'p_ternarioBool','parser_rules.py',365),
  ('ternarioBool -> expBool ? valoresTernarioBool : valoresTernarioBool','ternarioBool',5,'p_ternarioBool','parser_rules.py',366),
  ('valoresTernarioBool -> BOOL','valoresTernarioBool',1,'p_valoresTernarioBool','parser_rules.py',370),
  ('valoresTernarioBool -> funcBool','valoresTernarioBool',1,'p_valoresTernarioBool','parser_rules.py',371),
  ('valoresTernarioBool -> ternarioBool','valoresTernarioBool',1,'p_valoresTernarioBool','parser_rules.py',372),
  ('valoresTernarioBool -> expBool','valoresTernarioBool',1,'p_valoresTernarioBool','parser_rules.py',373),
  ('ternario -> valoresBool ? valores : valores','ternario',5,'p_ternario','parser_rules.py',379),
  ('ternario -> expBool ? valores : valores','ternario',5,'p_ternario','parser_rules.py',380),
  ('ternario -> ( ternario )','ternario',3,'p_ternario','parser_rules.py',381),
  ('expBool -> expBool OR and','expBool',3,'p_expBool','parser_rules.py',385),
  ('expBool -> valoresBool OR and','expBool',3,'p_expBool','parser_rules.py',386),
  ('expBool -> expBool OR valoresBool','expBool',3,'p_expBool','parser_rules.py',387),
  ('expBool -> valoresBool OR valoresBool','expBool',3,'p_expBool','parser_rules.py',388),
  ('expBool -> and','expBool',1,'p_expBool','parser_rules.py',389),
  ('and -> and AND eq','and',3,'p_and','parser_rules.py',393),
  ('and -> valoresBool AND eq','and',3,'p_and','parser_rules.py',394),
  ('and -> and AND valoresBool','and',3,'p_and','parser_rules.py',395),
  ('and -> valoresBool AND valoresBool','and',3,'p_and','parser_rules.py',396),
  ('and -> eq','and',1,'p_and','parser_rules.py',397),
  ('eq -> eq EQEQ mayor','eq',3,'p_eq','parser_rules.py',401),
  ('eq -> eq DISTINTO mayor','eq',3,'p_eq','parser_rules.py',402),
  ('eq -> tCompare EQEQ mayor','eq',3,'p_eq','parser_rules.py',403),
  ('eq -> tCompare DISTINTO mayor','eq',3,'p_eq','parser_rules.py',404),
  ('eq -> eq EQEQ tCompare','eq',3,'p_eq','parser_rules.py',405),
  ('eq -> eq DISTINTO tCompare','eq',3,'p_eq','parser_rules.py',406),
  ('eq -> tCompare EQEQ tCompare','eq',3,'p_eq','parser_rules.py',407),
  ('eq -> tCompare DISTINTO tCompare','eq',3,'p_eq','parser_rules.py',408),
  ('eq -> mayor','eq',1,'p_eq','parser_rules.py',409),
  ('tCompare -> eMat','tCompare',1,'p_tCompare','parser_rules.py',414),
  ('tCompare -> varsOps','tCompare',1,'p_tCompare','parser_rules.py',415),
  ('tCompare -> varYVals','tCompare',1,'p_tCompare','parser_rules.py',416),
  ('tCompare -> INT','tCompare',1,'p_tCompare','parser_rules.py',417),
  ('tCompare -> FLOAT','tCompare',1,'p_tCompare','parser_rules.py',418),
  ('mayor -> tCompare > tCompare','mayor',3,'p_mayor','parser_rules.py',422),
  ('mayor -> menor','mayor',1,'p_mayor','parser_rules.py',423),
  ('menor -> tCompare < tCompare','menor',3,'p_menor3','parser_rules.py',433),
  ('menor -> not','menor',1,'p_menor3','parser_rules.py',434),
  ('not -> NOT not','not',2,'p_not','parser_rules.py',442),
  ('not -> NOT valoresBool','not',2,'p_not','parser_rules.py',443),
  ('not -> parenBool','not',1,'p_not','parser_rules.py',444),
  ('parenBool -> ( expBool )','parenBool',3,'p_parenBool','parser_rules.py',448),
]
